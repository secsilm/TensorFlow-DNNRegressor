node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: ",}\350\202\372\006#@\255n\365\234\364\276\241??\343\302\201\220\034 @c\234\277\t\205\010\260?[\323\274\343\024\r6@f1\261\371\2706\264?g\270\001\237\037F\250?\025\000\343\0314\364\343?c\271\245\325\220\270\267?>\350\331\254\372|\027@R\325\004Q\367\001\270?\2201w-!\237\366?\240l\312\025\336\245\002@0\330\r\333\026e\226?\225+\274\313E|\365?Dio\360\205\331#@\3377\276\366\314\222\003@\201&\302\206\247W\272?\203i\030>\"\246\324?_\2652\341\227\372\305?\202\250\373\000\2446\261?#\370\337Jvl\264?\264Y\365\271\332\252,@\274\226\220\017z>V@\325\347j+\366\227\255?\205|\320\263Y\365\301?\214\333h\000o\201\372?J\265O\307c\006\252?\335^\322\030\255c\r@?\000\251M\234\334\340?\rq\254\213\333H\027@\022\245\275\301\027&\223?\365\326\300V\t\026\313?\263\315\215\351\tK\351?q=\n\327\243p\235?M\370\245~\336\024\000@\375j\016\020\314\321\243?[_$\264\345\334\360?Y4\235\235\014\216\202?\317N\006G\311K\027@\375M(D\300!\244?\034_{fI\200\345?\3544\322Ry;\345?g\233\033\323\023\226\270??RD\206U\\\024@\000o\201\004\305\217\261?u\315\344\233mn\314?\002Hm\342\344~\267?4\277\232\003\004S\026@\265l\255/\022\332\316?`\260\033\266-\312\300?\177\373:p\316\210\322?\004\377[\311\216\215\300?\217\337\333\364g?\320?\336Y\273\355Bs\275?\354/\273\'\017\013\225?\326\342S\000\214g\300?\217\307\014T\306\277\325?\2343\242\2647\270*@8\276\366\314\222\000\275?n4\200\267@\202\242?w\020;S\350<\006@z\245,C\034\253%@\3230|DL\211\244?6\310$#ga\257?\371\203\201\347\336\303\305?\224j\237\216\307\014\330?\r\032\372\'\270X\311?V\016-\262\235\3172@c\177\331=y\270/@)\350\366\222\306h\342?\241\271N#-\325\026@\'\302\206\247W\312\330?x\234\242#\271\324B@_\007\316\031Q\332\213?\212\223\373\035\212\002\311?H\376`\340\271W\023@\220\275\336\375\361\336\032@\221,`\002\267\356\276?_)\313\020\307\232)@\350\237\340bE\r\302?\204d\001\023\270u\267?RD\206U\274\221\343?\347\251\016\271\031n\336?t$\227\377\220~(@\300\347\207\021\302\243\255?aO;\37459\022@\3377\276\366\314\222\240?\215\321:\252\232 \320?P6\345\n\357\362\002@\270\222\035\033\201x\265?\022\245\275\301\027&\325?\177\274W\255L\370\037@C\377\004\027+j\344?\321W\220f,\232\266?\263\315\215\351\tK\234?\273\'\017\013\265\306\031@B>\350\331\254\372\254?\322\000\336\002\t\n\360?\325\004Q\367\001H\315?\223\214\234\205=\355\240?u\002\232\010\033\236\322?\004\377[\311\216\215\260?Z\273\355Bs\235\246?\223W\347\030\220\275\216?\3578EGr\371\317?Y4\235\235\014\216\312?\336\223\207\205Z\223\r@<\203\206\376\t.\266?r\304Z|\n\200\221?\017\326\3779\314\027\362?{Ic\264\216\252\334?\253\347\244\367\215\257\235?\313\370\367\031\027\016\274?\031\347oB!\002\350?\262KTo\rl\323?#\241-\347R|\023@v\375\202\335\260M @\0054\0216<\3158@\345\355\010\247\005\177 @,e\031\342X\2674@\265\211\223\373\035J!@-\262\235\357\247\306\253?J\357\033_{f\315?\371\240g\263\352s\305?*t^c\227\250\340?\313\204_\352\347M\370?M\363\216St$\351?)?\251\366\351x\254?O\314z1\224\023\344?\347\030\220\275\336\375\271?Gw\020;S\350\254?1\010\254\034Z\304\026@\205\224\237T\373t\330?\257\261KTo\r\254?D\372\355\353\3009\347?\261\21272\217\374\301?\204*5{\240\245#@(D\300!T\251\261?\324+e\031\342X\247?\231\323e1\261\371\300?\236\357\247\306Kw$@)\\\217\302\365(\264?F\261\334\322jH\214?\017\227\034wJ\007\303?\361\272~\301n\330\246?d#\020\257\353\027\332?Q\367\001Hm\002\023@p\231\323e1\261\261?S\256\360.\027\361\305?\220\332\304\311\375\016\245?\351\361{\233\376l\r@M\241\363\032\273D\265?U\336\216pZ\360\001@\316\302\236v\370\373 @>\350\331\254\372\\\255?u\310\315p\003>\277?\365\333\327\201s&*@k\016\020\314\321\343\247?333333\354?\314@e\374\373\214\337?\224\301Q\362\352\034\303?V\202\305\341\314\257\351?\225\232=\320\n\214\006@V}\256\266b\177\345?\313\271\024W\225\235\035@Hm\342\344~\207\302?b\241\3264\357x,@\240\211\260\341\351\225\320?\267\234KqU\331\341?\267b\177\331=\331\033@\'1\010\254\034Z\264??RD\206U\274\350?HP\374\030s\327,@\237q\341@H\026\363?\255Q\017\321\350\016\372?\017bg\n\235\327\300?\346\005\330G\247\256\254?\354\027\354\206m\213\262?S\226!\216uq\253?g\270\001\237\037F\334?sh\221\355|?\275?\213\340\177+\331\261\016@Z\365\271\332\212=\001@\372~j\274t\223.@H\277}\0358g\002@\266\370\024\000\343\031\300?\323\244\024t{I\273?\021p\010Uj\226\022@;\001M\204\rO\t@w\241\271N#-\321?R\'\240\211\260\341\342?\3745Y\243\036\242\261?\177M\326\250\207h\352?\000:\314\227\027`\364?\342\314\257\346\0001#@\001\336\002\t\212\1772@h\005\206\254n\365\264?\341\013\223\251\202\221\n@\320\325V\354/[+@\315\222\0005\265\354\026@\034\360\371a\204\360\260?\001\366\321\251+\337\005@0L\246\nF\325#@\200\267@\202\342\247<@t\322\373\306\327\236\271?F\266\363\375\324\210 @\347\343\332P1\316\267?[\261\277\354\236<\254?{\240\025\030\262\272\331?\350\331\254\372\\m\265?\367\257\2544)e\021@\253\t\242\356\003\220\252?\314\356\311\303B\255\261?\202sF\224\366\346\'@-!\037\364lV\275?\273\325s\322\373&\031@\004\342u\375\202\335\260?\346\221?\030x\356\305?j\366@+0d\301?\241J\315\036h\005\246?\231d\344,\354i\367?\206\346:\215\264T\306?\232%\001jj\331\212?\317\203\273\263v[\037@\226x@\331\224\013\021@u\345\263<\017\256\026@I\272f\362\3156\325?\311v\276\237\032/\341?\027\361\235\230\365b\300?5\007\010\346\350\361\233?\232\231\231\231\231\231\271?)\320\'\362$\351\306?\t\212\037c\356\372P@\233\217kC\3058\237?0*\251\023\320d8@\3122\304\261.bR@\260U\202\305\341\254\022@\275:\307\200\354\365\256?\210\235)t^c\317?\244\210\014\253x#\243?:z\374\336\246?\303?kH\334c\351C\353?;\3745Y\243\236\032@k\324C4\272\303\025@\004\342u\375\202\255\"@\rq\254\213\333\2306@\276\331\346\306\364\204\245?yX\2505\315\0139@\327\206\212q\376&\344?\313\326\372\"\241-\247?\223W\347\030\220\275\216?\r\340-\220\240\370\241?\331=yX\250\0252@\277`7l[\224\231?b\326\213\241\234h\277?\275\030\312\211v\025\005@\360P\024\350\023y\326?\264\223\301Q\362\352\326?;\215\264T\336\216\310?\027\267\321\000\336\202\002@\252\202QI\235\200\302?\316\337\204B\004\034\242?9b->\005\300\304?\375\274\251H\2051\001@\214\271k\t\371\240\327?\215\356 v\246\320\271?\200`\216\036\277\267\251?\327\335<\325!\027\034@\016\2760\231*\030\351?\215\234\205=\355\360\367?\307\021k\361)\000\246?\0221%\222\350e\304?\335A\354L\2413\034@c\321tv2\270\363?H\371I\265O\007\003@;\215\264T\336\356#@\202\220,`\002\267\266?kH\334c\351C\247?A\016J\230i\373\247?\332\003\255\300\220\225!@\203\206\376\t.V\274?[\224\331 \223\214\326?\314bb\363qm\362?\366]\021\374o%\323?\345\355\010\247\005/\306?\270\257\003\347\214(\265??\035\217\031\250\214\257?\367\314\222\00055\366?\344,\354i\207\277\320?_$\264\345\\\252\026@\344\024\035\311\345\237\'@j\207\277&k\324\325?\303G\304\224H\002\037@|\270\344\270S:\320?o*Ral!\314?\270\222\035\033\201x\215?\024\355*\244\374\244\340?\273~\301n\330\266\300?2\311\310Y\330\323\324?G\254\305\247\000\310\"@\326s\322\373\306\227\023@\304\010\341\321\306\021\273?\376e\367\344a\221I@\312\303B\255i\336\301?\321W\220f,\232\341?&\374R?o*\242?\272f\362\31567\302?\331Z_$\264\345\254?\343\252\262\357\212\340\237?\321\226s)\256*\273?\344f\270\001\237?\023@\301n\330\266(3\016@\217\344\362\037\322\3170@I\272f\362\3156\267?\034\323\023\226x@\251?\217\245\017]P\337\320?\006\r\375\023\\\254\250?_\014\345D\273\n\305?\201[w\363T\007\364?\007_\230L\025,\025@N\356w(\n\364\261?\321y\215]\242\032\036@\323\366\257\2544)\311?]\376C\372\355\2333@l\317,\tPS\303??\035\217\031\250\214\014@\367\344a\241\3264\267?\210\205Z\323\274\303D@\211\265\370\024\000\343y?A\361c\314]\013+@R~R\355\323\361\270?Dn\206\033\360\371\261?\036\376\232\254Q\017\261?\300\004n\335\315S\215?gDio\360\2457@\202\250\373\000\2446\271?\267E\231\r2\311\314?2\254\342\215\314#\237?\351&1\010\254\034\302?\206U\274\221y\344\321?\264Y\365\271\332\252,@q\254\213\333h\340,@\326\305m4\200\337F@4\235\235\014\216\222\031@\215\013\007B\262\200\251?>\313\363\340\356\254\365?\314bb\363qm\260?\031\377>\343\302\201\342?\371\367\031\027\016\204\264?\201&\302\206\247W\262?7T\214\3637\241\357?Ve\337\025\301_\"@\003CV\267zN\262?"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\232\231\231\231\231\0312@=\n\327\243p=\030@\232\231\231\231\231\0312@\\\217\302\365(\334\'@\232\231\231\231\231\0312@)\\\217\302\365\250)@\\\217\302\365(\334\'@\315\314\314\314\314\314\030@\\\217\302\365(\\\030@\232\231\231\231\231\0312@{\024\256G\341z\037@\024\256G\341z\2243@\024\256G\341z\2243@q=\n\327\243p\007@\024\256G\341z\2243@\232\231\231\231\231\0312@\024\256G\341z\2243@\270\036\205\353Q\270\023@\244p=\n\327\3435@\205\353Q\270\036\205\024@\354Q\270\036\205\353\t@\244p=\n\327\243\031@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\256G\341z\024\256\003@q=\n\327\243p\027@\024\256G\341z\2243@\303\365(\\\217\302\024@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\232\231\231\231\231\231\020@\037\205\353Q\270\036!@\315\314\314\314\314\314#@\024\256G\341z\024.@\024\256G\341z\2243@H\341z\024\256G\025@H\341z\024\256G @\303\365(\\\217\302\007@\232\231\231\231\231\0312@H\341z\024\256G\013@H\341z\024\256G @\303\365(\\\217\302\017@\244p=\n\327\243\031@\232\231\231\231\231\0312@\037\205\353Q\270\036\007@\205\353Q\270\036\005$@333333\020@\232\231\231\231\231\0312@\205\353Q\270\036\205\035@\037\205\353Q\270\036!@\341z\024\256Ga#@\327\243p=\n\327+@\244p=\n\327\243\033@\037\205\353Q\270\036\007@\256G\341z\024\256\347?H\341z\024\256G\030@q=\n\327\243p\027@\232\231\231\231\231\0312@\270\036\205\353Q\270\023@\315\314\314\314\314\314\023@\024\256G\341z\2243@\232\231\231\231\231\0312@R\270\036\205\353Q\370?\244p=\n\327\243\n@{\024\256G\341z\037@\256G\341z\024.%@\256G\341z\024.%@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@fffff\2469@\232\231\231\231\231\0312@\000\000\000\000\000\000\020@\037\205\353Q\270\236%@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\037\205\353Q\270\036\007@\232\231\231\231\231\0312@\327\243p=\n\327+@\037\205\353Q\270\236%@\303\365(\\\217\302\017@\315\314\314\314\314\314#@\232\231\231\231\231\0312@H\341z\024\256G\030@\232\231\231\231\231\0312@q=\n\327\243p\001@\256G\341z\024.%@\024\256G\341z\2243@)\\\217\302\365\250)@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@H\341z\024\256G @{\024\256G\341z\037@\232\231\231\231\231\231\007@\232\231\231\231\231\0312@H\341z\024\256G\013@H\341z\024\256G @\037\205\353Q\270\036!@\303\365(\\\217\302\024@\244p=\n\327\3435@\354Q\270\036\205\353\001@\354Q\270\036\205\353\001@\\\217\302\365(\\\363?\244p=\n\327\3435@=\n\327\243p\275;@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@)\\\217\302\365(\000@H\341z\024\256G @\315\314\314\314\314\314\030@\000\000\000\000\000\000\364?\\\217\302\365(\334\'@H\341z\024\256G @\205\353Q\270\036\205\035@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@333333\020@\256G\341z\024.%@\205\353Q\270\036\205\035@\315\314\314\314\314\314\030@\024\256G\341z\2243@\303\365(\\\217\302\017@\354Q\270\036\205\353\001@H\341z\024\256G @)\\\217\302\365\250)@)\\\217\302\365\250)@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@q=\n\327\243p\001@H\341z\024\256G @\256G\341z\024.%@\232\231\231\231\231\0312@fffff\2469@H\341z\024\256\307+@\037\205\353Q\270\036!@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@q=\n\327\243p\335?\037\205\353Q\270\036!@q=\n\327\243p\023@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@\244p=\n\327\243\033@q=\n\327\243p\023@\232\231\231\231\231\0312@\256G\341z\024\256\003@\024\256G\341z\2243@\232\231\231\231\231\0312@\366(\\\217\302\365\021@\037\205\353Q\270\036\007@\232\231\231\231\231\0312@R\270\036\205\353Q\370?\244p=\n\327\3435@\315\314\314\314\314\314#@\205\353Q\270\036\205\024@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\205\353Q\270\036\005$@\232\231\231\231\231\0312@\244p=\n\327\3435@\244p=\n\327\3435@\232\231\231\231\231\0312@\n\327\243p=\n\373?H\341z\024\256G @\232\231\231\231\231\0312@\244p=\n\327\3435@\244p=\n\327\3435@\205\353Q\270\036\005$@\256G\341z\024\256\003@\n\327\243p=\n\373?\217\302\365(\\\217\026@\315\314\314\314\314\314\030@H\341z\024\256\307+@\232\231\231\231\231\0312@\024\256G\341z\2243@\232\231\231\231\231\0312@\024\256G\341z\2243@\205\353Q\270\036\205\013@\217\302\365(\\\217\376?\232\231\231\231\231\0312@\232\231\231\231\231\0312@\341z\024\256Ga#@\244p=\n\327\3435@\256G\341z\024\256\003@\303\365(\\\217\302\017@\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\037\205\353Q\270\036\007@\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\354Q\270\036\205\353\t@\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\256G\341z\024\256\003@\232\231\231\231\231\0312@fffff\2469@q=\n\327\243p\001@\315\314\314\314\314\314#@\205\353Q\270\036\205\013@\232\231\231\231\231\0312@\366(\\\217\302\365\021@q=\n\327\243p\001@\232\231\231\231\231\0312@\327\243p=\n\327\033@\232\231\231\231\231\0312@\256G\341z\024\256\003@\205\353Q\270\036\005$@\256G\341z\024.%@\217\302\365(\\\217\376?\024\256G\341z\2243@\256G\341z\024.%@\205\353Q\270\036\205\363?\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\315\314\314\314\314\314\030@\037\205\353Q\270\036!@H\341z\024\256G\034@\\\217\302\365(\\\030@\341z\024\256Ga#@\232\231\231\231\231\0312@=\n\327\243p=\016@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\256G\341z\024\256\003@\315\314\314\314\314\314#@\303\365(\\\217\302\024@fffff\2469@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\024\256G\341z\024.@\232\231\231\231\231\0312@H\341z\024\256G @\\\217\302\365(\334\'@\024\256G\341z\024\000@q=\n\327\243p\005@\232\231\231\231\231\0312@=\n\327\243p=\376?\244p=\n\327\243\033@\315\314\314\314\314\314#@\205\353Q\270\036\205\035@\315\314\314\314\314\314\030@\205\353Q\270\036\205\035@\024\256G\341z\2243@{\024\256G\341z\037@\\\217\302\365(\\\030@\327\243p=\n\327\033@\024\256G\341z\2243@\315\314\314\314\314\314#@\205\353Q\270\036\005$@=\n\327\243p=\030@\232\231\231\231\231\0312@H\341z\024\256G @\024\256G\341z\2243@H\341z\024\256G\025@\244p=\n\327\243\033@\232\231\231\231\231\0312@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@\217\302\365(\\\217\026@\354Q\270\036\205\353\t@H\341z\024\256G\013@\232\231\231\231\231\0312@H\341z\024\256\307+@\244p=\n\327\3435@H\341z\024\256G @\327\243p=\n\327\033@\341z\024\256Ga#@\327\243p=\n\327+@\217\302\365(\\\217\021@H\341z\024\256G @\315\314\314\314\314\314#@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\205\353Q\270\036\205\035@\232\231\231\231\231\0312@\315\314\314\314\314\314#@\244p=\n\327\243\033@q=\n\327\243p\007@\303\365(\\\217\302\017@\205\353Q\270\036\005$@\244p=\n\327\3435@\232\231\231\231\231\0312@\232\231\231\231\231\0312@=\n\327\243p\275;@\232\231\231\231\231\0312@\037\205\353Q\270\036!@\303\365(\\\217\302\017@\037\205\353Q\270\036\r@\205\353Q\270\036\005$@\244p=\n\327\243\031@\217\302\365(\\\217\021@\270\036\205\353Q\270\023@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@q=\n\327\243p\001@\037\205\353Q\270\036!@\037\205\353Q\270\036\r@q=\n\327\243p\027@H\341z\024\256G @\232\231\231\231\231\0312@H\341z\024\256\307+@\232\231\231\231\231\0312@q=\n\327\243p\027@\232\231\231\231\231\0312@\205\353Q\270\036\005$@\232\231\231\231\231\0312@\327\243p=\n\327\033@\232\231\231\231\231\0312@{\024\256G\341z\002@\232\231\231\231\231\0312@\327\243p=\n\327\027@333333\020@333333\020@\037\205\353Q\270\036\365?\232\231\231\231\231\0312@fffff\2469@{\024\256G\341z\037@\303\365(\\\217\302\024@\244p=\n\327\243\033@\341z\024\256Ga#@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\217\302\365(\\\217\026@H\341z\024\256G @\327\243p=\n\327\027@\303\365(\\\217\302\017@\327\243p=\n\327\027@fffff\2469@H\341z\024\256G @\232\231\231\231\231\0312@\366(\\\217\302\365\021@"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "7\211A`\345\320\346?\021\307\272\270\215\006\334?\343\245\233\304 \260\342?\274t\223\030\004V\342?\256G\341z\024\256\347?+\207\026\331\316\367\333?\274t\223\030\004V\342?\323Mb\020X9\340?\203\300\312\241E\266\333?\223\030\004V\016-\346?\370S\343\245\233\304\340?\254\034Zd;\337\353?\254\034Zd;\337\353?D\213l\347\373\251\331?\\\217\302\365(\\\343?\256G\341z\024\256\347?\254\034Zd;\337\353?1\010\254\034Zd\333?+\207\026\331\316\367\343?\313\241E\266\363\375\334?q=\n\327\243p\335?\317\367S\343\245\233\334?\331\316\367S\343\245\343?F\266\363\375\324x\345?\010\254\034Zd;\337?/\335$\006\201\225\333?\254\034Zd;\337\353?{\024\256G\341z\340?\016-\262\235\357\247\342?T\343\245\233\304 \340?7\211A`\345\320\346?\333\371~j\274t\333?\244p=\n\327\243\340?\234\304 \260rh\341?\031\004V\016-\262\335?\\\217\302\365(\\\343?\354Q\270\036\205\353\331?\236\357\247\306K7\341?\232\231\231\231\231\231\331?\240\032/\335$\006\341?\262\235\357\247\306K\337?\236\357\247\306K7\341?Nb\020X9\264\344?\317\367S\343\245\233\334?7\211A`\345\320\346?{\024\256G\341z\334?\033/\335$\006\201\341?R\270\036\205\353Q\340?7\211A`\345\320\346?Zd;\337O\215\337?\244p=\n\327\243\340?\270\036\205\353Q\270\342?+\207\026\331\316\367\333?y\351&1\010\254\334?{\024\256G\341z\334?=\n\327\243p=\332?\223\030\004V\016-\332?/\335$\006\201\225\333?\223\030\004V\016-\346?1\010\254\034Zd\333?\347\373\251\361\322M\332?\254\034Zd;\337\353?\356|?5^\272\345?B`\345\320\"\333\331?c\177\331=yX\334?\370S\343\245\233\304\340?\262\235\357\247\306K\337?\262\235\357\247\306K\337?\264\310v\276\237\032\343?\356|?5^\272\345?\323Mb\020X9\340?\240\032/\335$\006\341?d;\337O\215\227\342?\356|?5^\272\345?=\n\327\243p=\332?;\337O\215\227n\332?\016-\262\235\357\247\342?7\211A`\345\320\346?{\024\256G\341z\334?\256G\341z\024\256\347?+\207\026\331\316\367\333?;\337O\215\227n\332?Nb\020X9\264\344?\234\304 \260rh\341?\343\245\233\304 \260\342?\223\030\004V\016-\332?`\345\320\"\333\371\346?\035Zd;\337O\335?\262\235\357\247\306K\337?\254\034Zd;\337\353?+\207\026\331\316\367\333?\323Mb\020X9\340?ffffff\346?\236\357\247\306K7\341?\370S\343\245\233\304\340?1\010\254\034Zd\333?\343\245\233\304 \260\342?\262\235\357\247\306K\337?\236\357\247\306K7\341?\244p=\n\327\243\340?{\024\256G\341z\340?+\207\026\331\316\367\343?\232\231\231\231\231\231\331?\232\231\231\231\231\231\331?D\213l\347\373\251\331?+\207\026\331\316\367\343?\260rh\221\355|\343?`\345\320\"\333\371\346?+\207\026\331\316\367\333?=\n\327\243p=\332?\236\357\247\306K7\341?\323Mb\020X9\340?\333\371~j\274t\333?\274t\223\030\004V\342?\236\357\247\306K7\341?Zd;\337O\215\337?\331\316\367S\343\245\343?ffffff\346?\223\030\004V\016-\346?7\211A`\345\320\346?J\014\002+\207\026\345?\223\030\004V\016-\346?R\270\036\205\353Q\340?\262\235\357\247\306K\337?Zd;\337O\215\337?\323Mb\020X9\340?\\\217\302\365(\\\343?Nb\020X9\264\344?\232\231\231\231\231\231\331?\236\357\247\306K7\341?+\207\026\331\316\367\333?+\207\026\331\316\367\333?\016-\262\235\357\247\342?T\343\245\233\304 \340?h\221\355|?5\336?\236\357\247\306K7\341?\262\235\357\247\306K\337?F\266\363\375\324x\345?d;\337O\215\227\342?\232\231\231\231\231\231\341?\244p=\n\327\243\340?\331\316\367S\343\245\343?+\207\026\331\316\367\333?5^\272I\014\002\333?\244p=\n\327\243\340?\335$\006\201\225C\333?\323Mb\020X9\340?7\211A`\345\320\346?+\207\026\331\316\367\333?y\351&1\010\254\334?\335$\006\201\225C\333?\244p=\n\327\243\350?\010\254\034Zd;\337?\\\217\302\365(\\\343?\343\245\233\304 \260\342?#\333\371~j\274\334?{\024\256G\341z\334?\217\302\365(\\\217\342?B`\345\320\"\333\331?+\207\026\331\316\367\343?\234\304 \260rh\341?\313\241E\266\363\375\334?\236\357\247\306K7\341?\240\032/\335$\006\341?\256G\341z\024\256\347?\264\310v\276\237\032\343?\033/\335$\006\201\341?\223\030\004V\016-\346?+\207\026\331\316\367\343?+\207\026\331\316\367\343?ffffff\346?\347\373\251\361\322M\332?\236\357\247\306K7\341?\256G\341z\024\256\347?+\207\026\331\316\367\343?+\207\026\331\316\367\343?\033/\335$\006\201\341?\010\254\034Zd;\337?\347\373\251\361\322M\332?\177j\274t\223\030\334?T\343\245\233\304 \340?\232\231\231\231\231\231\341?\244p=\n\327\243\350?\254\034Zd;\337\353?F\266\363\375\324x\345?\\\217\302\365(\\\343?+\207\026\331\316\367\333?;\337O\215\227n\332?\331\316\367S\343\245\343?\366(\\\217\302\365\344?\270\036\205\353Q\270\342?+\207\026\331\316\367\343?\010\254\034Zd;\337?Nb\020X9\264\344?\\\217\302\365(\\\343?\223\030\004V\016-\346?\307K7\211A`\345?{\024\256G\341z\334?\254\034Zd;\337\353?\256G\341z\024\256\347?\240\032/\335$\006\341?q=\n\327\243p\335?\254\034Zd;\337\353?\223\030\004V\016-\346?\264\310v\276\237\032\343?\010\254\034Zd;\337?\307K7\211A`\345?d;\337O\215\227\342?h\221\355|?5\336?\234\304 \260rh\341?+\207\026\331\316\367\333?\217\302\365(\\\217\342?#\333\371~j\274\334?\035Zd;\337O\335?J\014\002+\207\026\345?\031\004V\016-\262\335?\256G\341z\024\256\347?\010\254\034Zd;\337?\033/\335$\006\201\341?\262\235\357\247\306K\337?;\337O\215\227n\332?\\\217\302\365(\\\343?\262\235\357\247\306K\337?\230n\022\203\300\312\331?\366(\\\217\302\365\344?\244p=\n\327\243\350?\376\324x\351&1\344?\323Mb\020X9\340?T\343\245\233\304 \340?\244p=\n\327\243\340?j\274t\223\030\004\336?\203\300\312\241E\266\333?\270\036\205\353Q\270\342?\223\030\004V\016-\346?`\345\320\"\333\371\336?ffffff\346?\356|?5^\272\345?7\211A`\345\320\346?\010\254\034Zd;\337?\234\304 \260rh\341?{\024\256G\341z\340?d;\337O\215\227\342?\236\357\247\306K7\341?7\211A`\345\320\346?7\211A`\345\320\346?\356|?5^\272\345?ffffff\346?\031\004V\016-\262\335?\223\030\004V\016-\346?\236\357\247\306K7\341?\274t\223\030\004V\342?\327\243p=\n\327\333?\376e\367\344a\241\332?\356|?5^\272\345?\372~j\274t\223\340?y\351&1\010\254\334?\234\304 \260rh\341?Zd;\337O\215\337?\323Mb\020X9\340?Zd;\337O\215\337?\\\217\302\365(\\\343?\370S\343\245\233\304\340?\203\300\312\241E\266\333?\031\004V\016-\262\335?\254\034Zd;\337\353?\234\304 \260rh\341?\033/\335$\006\201\341?\021\307\272\270\215\006\334?`\345\320\"\333\371\346?\236\357\247\306K7\341?\254\034Zd;\337\353?\354Q\270\036\205\353\331?y\351&1\010\254\334?\331\316\367S\343\245\343?\236\357\247\306K7\341?\016-\262\235\357\247\342?\256G\341z\024\256\347?\177j\274t\223\030\334?q=\n\327\243p\335?\262\235\357\247\306K\337?\343\245\233\304 \260\342?\232\231\231\231\231\231\341?+\207\026\331\316\367\343?\236\357\247\306K7\341?\031\004V\016-\262\335?\270\036\205\353Q\270\342?+\207\026\331\316\367\333?}?5^\272I\334?\236\357\247\306K7\341?\234\304 \260rh\341?\256G\341z\024\256\347?`\345\320\"\333\371\346?Zd;\337O\215\337?7\211A`\345\320\346?\234\304 \260rh\341?y\351&1\010\254\334?D\213l\347\373\251\331?Nb\020X9\264\344?\033/\335$\006\201\341?+\207\026\331\316\367\343?\256G\341z\024\256\347?\376\324x\351&1\344?\260rh\221\355|\343?\264\310v\276\237\032\343?\244p=\n\327\243\340?Nb\020X9\264\344?J\014\002+\207\026\331?\033/\335$\006\201\341?\317\367S\343\245\233\334?}?5^\272I\334?1\010\254\034Zd\333?7\211A`\345\320\346?\366(\\\217\302\365\344?ffffff\346?+\207\026\331\316\367\333?h\221\355|?5\336?\244p=\n\327\243\340?J\014\002+\207\026\331?/\335$\006\201\225\333?\236\357\247\306K7\341?ffffff\346?\232\231\231\231\231\231\341?7\211A`\345\320\346?/\335$\006\201\225\333?F\266\363\375\324x\345?\033/\335$\006\201\341?\217\302\365(\\\217\342?\031\004V\016-\262\335?\223\030\004V\016-\346?\236\357\247\306K7\341?\376\324x\351&1\344?V\016-\262\235\357\337?R\270\036\205\353Q\340?R\270\036\205\353Q\340?\347\373\251\361\322M\332?F\266\363\375\324x\345?d;\337O\215\227\342?\370S\343\245\233\304\340?{\024\256G\341z\340?y\351&1\010\254\334?\270\036\205\353Q\270\342?ffffff\346?\264\310v\276\237\032\343?\223\030\004V\016-\346?\343\245\233\304 \260\342?\177j\274t\223\030\334?\236\357\247\306K7\341?V\016-\262\235\357\337?ffffff\342?V\016-\262\235\357\337?d;\337O\215\227\342?\236\357\247\306K7\341?ffffff\346?#\333\371~j\274\334?"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\266\363\375\324x\351\032@9\264\310v\276\037\030@h\221\355|?\265\025@\254\034Zd;_\032@\022\203\300\312\241E\027@d;\337O\215\027\031@\037\205\353Q\270\036\030@j\274t\223\030\204\033@{\024\256G\341\372\031@\037\205\353Q\270\236\031@u\223\030\004V\216\027@j\274t\223\030\204\030@X9\264\310v\276\024@333333\033@\335$\006\201\225C\030@\033/\335$\006\001\031@J\014\002+\207\026\025@;\337O\215\227n\031@\370S\343\245\233\304\027@w\276\237\032/\335\027@\242E\266\363\375T\031@!\260rh\221\355\031@\321\"\333\371~\352\030@\254\034Zd;\337\033@\354Q\270\036\205\353\033@\246\233\304 \260\362\031@\260rh\221\355|\030@\335$\006\201\225C\031@sh\221\355|?\031@33333s!@Zd;\337O\r\032@\252\361\322Mb\020\032@?5^\272I\214\030@\260rh\221\355|\030@\362\322Mb\020\330\030@\236\357\247\306K\267\037@\274t\223\030\004\326\030@=\n\327\243p\275\027@\'1\010\254\034Z\034@+\207\026\331\316\367\030@\037\205\353Q\270\236\031@\215\227n\022\203@\027@\242E\266\363\375T\035@\321\"\333\371~j\033@\343\245\233\304 0\031@D\213l\347\373\251\035@\221\355|?5^\030@D\213l\347\373\251\031@X9\264\310v\276\031@\242E\266\363\375T\030@5^\272I\014\202\030@\217\302\365(\\\217\025@\203\300\312\241E\266\032@\177j\274t\223\230\025@\364\375\324x\351\246\030@\325x\351&1\210\031@\n\327\243p=\212\027@;\337O\215\227n\030@?5^\272I\214\027@J\014\002+\207\226\033@\205\353Q\270\036\205\032@\351&1\010\254\234\023@T\343\245\233\304 \033@\331\316\367S\343%\035@\024\256G\341z\224\036@j\274t\223\030\004\030@\004V\016-\262\235\025@\356|?5^\272\030@P\215\227n\022\203\022@/\335$\006\201\225\027@\006\201\225C\213\254 @\000\000\000\000\000\000\033@\301\312\241E\266s\026@\002+\207\026\331\316\030@Zd;\337O\215\027@{\024\256G\341\372\030@\037\205\353Q\270\236\027@\345\320\"\333\371\376\032@\027\331\316\367S# @\321\"\333\371~j\027@)\\\217\302\365(\027@\303\365(\\\217B\030@\234\304 \260rh!@\301\312\241E\266s\030@\014\002+\207\026Y\027@P\215\227n\022\203\027@\260rh\221\355|\014@\313\241E\266\363\375\033@o\022\203\300\312!\027@Nb\020X9\264\023@\345\320\"\333\371~\027@\362\322Mb\020X\030@\024\256G\341z\024\026@\374\251\361\322Mb\030@?5^\272I\014\030@\341z\024\256Ga\032@33333\263\031@\272I\014\002+\007\034@\031\004V\016-\262\032@\037\205\353Q\270\236\031@#\333\371~j<\030@\031\004V\016-\262\030@\341z\024\256Ga\031@\226C\213l\347{\033@\376\324x\351&\261\037@!\260rh\221m\027@\254\034Zd;_\024@\'1\010\254\034\332\023@\203\300\312\241E\266\034@\266\363\375\324x\351\032@\'1\010\254\034\332\026@\201\225C\213l\347\032@\250\306K7\211\301\033@\223\030\004V\016-\033@\031\004V\016-\262\027@sh\221\355|?\031@V\016-\262\235\357\031@\217\302\365(\\\217\025@L7\211A`e\025@\337O\215\227n\222\035@Zd;\337O\215\020@\022\203\300\312\241\305\030@\303\365(\\\217B\031@\347\373\251\361\322M\031@Nb\020X9\264\031@\240\032/\335$\206\032@\000\000\000\000\000\300 @u\223\030\004V\016\034@D\213l\347\373)\034@\274t\223\030\004V\027@\004V\016-\262\035\031@!\260rh\221\355\030@\333\371~j\274t\030@\024\256G\341z\024 @\020X9\264\310v\032@\234\304 \260r\350\026@\000\000\000\000\000\200\031@\223\030\004V\016-\033@{\024\256G\341z\027@Zd;\337O\215\027@\201\225C\213lg\027@=\n\327\243p\275\030@T\343\245\233\304 \033@\000\000\000\000\000\200\037@\234\304 \260r\350\032@`\345\320\"\333y\032@\016-\262\235\357\247\030@\232\231\231\231\231\031\032@\333\371~j\274\364\032@\356|?5^\272\026@\234\304 \260r\350\032@\246\233\304 \260r\025@\321\"\333\371~j\026@\321\"\333\371~j\027@1\010\254\034Zd\031@\205\353Q\270\036\205\032@\000\000\000\000\000\200\032@\'1\010\254\034\332\026@!\260rh\221m\034@?5^\272I\214\026@\n\327\243p=\212\032@\020X9\264\310\366\026@m\347\373\251\361\322\025@?5^\272I\014\027@\274t\223\030\004\326\031@+\207\026\331\316w\026@\006\201\225C\213\354\026@\254\034Zd;_\031@\022\203\300\312\241\305\026@\327\243p=\nW\031@\'1\010\254\034\332\026@7\211A`\345P\032@{\024\256G\341\372\031@\362\322Mb\020\330\031@\347\373\251\361\322M\031@\372~j\274t\023\024@Nb\020X9\264\030@m\347\373\251\361R\037@\360\247\306K7\211\027@%\006\201\225C\013\032@h\221\355|?5\032@\313\241E\266\363}\031@\033/\335$\006\001\031@P\215\227n\022\203\026@\177j\274t\223\230\032@-\262\235\357\247F\031@\323Mb\020X9\032@X9\264\310v\276\027@\354Q\270\036\205\353\033@\360\247\306K7\t\027@\223\030\004V\016-\027@\260rh\221\355|\031@\372~j\274t\223\030@\002+\207\026\331N\035@\000\000\000\000\000\000\031@\004V\016-\262\235\031@Zd;\337O\215\020@H\341z\024\256G\037@\351&1\010\254\234\025@=\n\327\243p\275\027@X9\264\310v>\034@F\266\363\375\324x\027@\027\331\316\367Sc\026@\234\304 \260rh\027@\037\205\353Q\270\236\024@\215\227n\022\203@\032@\000\000\000\000\000\200\027@\362\322Mb\020\330\027@\213l\347\373\251\361\034@\272I\014\002+\207\031@=\n\327\243p\275\034@^\272I\014\002\253\030@\217\302\365(\\\017\030@J\014\002+\207\226\034@;\337O\215\227n\026@\364\375\324x\351&\032@w\276\237\032/]\031@\217\302\365(\\\017\037@\203\300\312\241E\266\027@\250\306K7\211A\030@\364\375\324x\351\246\026@\333\371~j\274\364\035@\327\243p=\n\327\027@\345\320\"\333\371\376\034@\274t\223\030\004\326\030@\246\233\304 \260r\030@\010\254\034Zd\273\032@X9\264\310v~ @\006\201\225C\213\354\027@L7\211A`\345\031@=\n\327\243p\275\034@!\260rh\221\355\033@\256G\341z\024\256\026@\010\254\034Zd\273\026@\345\320\"\333\371~\033@\317\367S\343\245\233\022@\207\026\331\316\367\323\027@\201\225C\213l\347\027@\351&1\010\254\234\030@T\343\245\233\304 \027@=\n\327\243p=\031@\006\201\225C\213l\027@\\\217\302\365(\334\027@\370S\343\245\233D\031@\037\205\353Q\270\236\032@\205\353Q\270\036\205\031@\000\000\000\000\000\000\024@\370S\343\245\233\304\031@\246\233\304 \260\362\027@\262\235\357\247\306\313\027@{\024\256G\341z\030@\n\327\243p=\212\032@\266\363\375\324xi\037@#\333\371~j\274\031@)\\\217\302\365(\032@-\262\235\357\247F\030@1\010\254\034Z\344\023@D\213l\347\373)\030@\347\373\251\361\322\315\033@\323Mb\020X\271\031@\205\353Q\270\036\205\027@\343\245\233\304 \260\030@\\\217\302\365(\\\032@\366(\\\217\302\365\030@\274t\223\030\004\326\026@\370S\343\245\233D\032@\\\217\302\365(\334\032@m\347\373\251\361\322\026@\240\032/\335$\006\030@\366(\\\217\302\365\027@\004V\016-\262\235\025@\303\365(\\\217B\032@\362\322Mb\020\330\030@\266\363\375\324xi\030@\305 \260rh\221\030@\226C\213l\347{\027@q=\n\327\243\360\031@\'1\010\254\034\332\027@\372~j\274t\223\030@^\272I\014\002\253\031@\303\365(\\\217B\026@\347\373\251\361\322\315\027@7\211A`\345\320\031@\347\373\251\361\322\315\026@\006\201\225C\213l\027@\207\026\331\316\367\323\026@5^\272I\014\202\030@d;\337O\215\227\027@\315\314\314\314\314\314\027@d;\337O\215\027\030@\307K7\211A\340\030@\262\235\357\247\306K\033@)\\\217\302\365\250\031@Nb\020X94\031@R\270\036\205\353\321\026@\234\304 \260rh\026@\321\"\333\371~j\032@\262\235\357\247\306\313 @\260rh\221\355|\027@\323Mb\020X\271\031@5^\272I\014\202\026@\341z\024\256G\341\023@;\337O\215\227\356\027@\272I\014\002+\007\027@^\272I\014\002\253\030@m\347\373\251\361\322\034@\033/\335$\006\201\027@j\274t\223\030\004\031@\325x\351&1\010\033@u\223\030\004V\016\030@\341z\024\256Ga\030@\347\373\251\361\322\315\032@\002+\207\026\331\316\027@\317\367S\343\245\033\025@\347\373\251\361\322\315\033@L7\211A`e\033@\321\"\333\371~\352\030@;\337O\215\227n\030@\010\254\034Zd\273\031@H\341z\024\256G\026@Nb\020X94\030@\305 \260rh\221\032@^\272I\014\002\253\031@\201\225C\213l\347\030@\215\227n\022\203@\035@/\335$\006\201\025\030@sh\221\355|\277\031@\256G\341z\024\256\027@9\264\310v\276\037\026@\315\314\314\314\314L\032@\201\225C\213l\347\016@w\276\237\032/]\027@\024\256G\341z\024\030@\311v\276\237\032/\032@\335$\006\201\225C\033@\205\353Q\270\036\205\031@j\274t\223\030\204\027@5^\272I\014\202\031@\024\256G\341z\224\027@\223\030\004V\016\255\030@Nb\020X9\264\027@\205\353Q\270\036\205\023@\234\304 \260rh\033@\372~j\274t\023\022@\331\316\367S\343\245\030@\313\241E\266\363\375\027@}?5^\272I\030@\010\254\034Zd\273\027@\362\322Mb\020\230 @ffffff\027@j\274t\223\030\004\030@\215\227n\022\203@\027@\276\237\032/\335$\026@\226C\213l\347{\030@"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "fffff\206W@\315\314\314\314\314L7@\232\231\231\231\231\331W@fffffFQ@\232\231\231\231\231\031W@\000\000\000\000\000\000\030@333333T@\315\314\314\314\314lS@ffffff2@\000\000\000\000\000\000X@\000\000\000\000\000\200C@\000\000\000\000\000\000X@33333sW@\315\314\314\314\314\314#@\000\000\000\000\000\000Y@fffff&X@\000\000\000\000\000\200W@33333sJ@\000\000\000\000\000`W@\232\231\231\231\231YW@3333331@\315\314\314\314\314\014@@\000\000\000\000\000\000V@\232\231\231\231\231\371V@333333M@\000\000\000\000\000\000*@33333SX@\315\314\314\314\314\014C@33333\363I@\000\000\000\000\000\300T@\232\231\231\231\231yV@33333\263;@\232\231\231\231\231\331U@ffffffJ@fffff\346<@\315\314\314\314\314\014X@\315\314\314\314\314L?@\315\314\314\314\314L=@\315\314\314\314\314\3144@\315\314\314\314\314,P@\232\231\231\231\231yR@33333\223V@\000\000\000\000\000\000Y@ffffffE@33333\363V@\000\000\000\000\000@O@\232\231\231\231\231\331W@fffff\006U@\232\231\231\231\231\371U@\232\231\231\231\231\331E@\315\314\314\314\314LU@\232\231\231\231\2319R@\232\231\231\231\231\031?@33333\323W@ffffffQ@\232\231\231\231\231\331A@\000\000\000\000\000\200@@33333sA@\315\314\314\314\314\254W@fffff&K@ffffff7@33333sX@33333\263V@\315\314\314\314\314\014A@\232\231\231\231\231\331H@\232\231\231\231\231yU@fffff&V@333333E@\000\000\000\000\000\000Y@\232\231\231\231\231\331W@33333SR@\232\231\231\231\231\271R@fffff\346W@\315\314\314\314\314\254S@\315\314\314\314\314\314G@\315\314\314\314\314\314\030@\232\231\231\231\231\231J@fffff&W@\000\000\000\000\000\000S@fffff&X@\000\000\000\000\000\000M@333333\037@\232\231\231\231\231\271U@ffffffM@\232\231\231\231\231\331M@ffffff5@\232\231\231\231\231\371U@fffff\346F@\315\314\314\314\314,R@\315\314\314\314\314\354W@\315\314\314\314\314LB@\000\000\000\000\000\300N@\000\000\000\000\000\000Y@\000\000\000\000\000 U@fffff\246P@\315\314\314\314\314\3145@33333\263R@33333\223U@33333\323U@\232\231\231\231\231YU@fffff\246B@ffffffW@\232\231\231\231\231\0314@33333\263G@\315\314\314\314\314\3148@\315\314\314\314\314\214X@\000\000\000\000\000\200X@\232\231\231\231\231\331V@\315\314\314\314\314L:@\315\314\314\314\314\014B@fffff\206W@\000\000\000\000\000\240P@\000\000\000\000\000@A@33333SV@fffff\206W@fffff\346<@ffffffW@\232\231\231\231\231\271X@\000\000\000\000\000\000X@33333\323X@\000\000\000\000\000\000Y@fffff&W@\232\231\231\231\231YR@\000\000\000\000\000@J@fffff&J@\000\000\000\000\000 S@\232\231\231\231\231yW@fffff&U@\000\000\000\000\000\000$@\000\000\000\000\000@L@\000\000\000\000\000\240R@\232\231\231\231\231\331J@33333\363S@\000\000\000\000\000\240U@\315\314\314\314\314\014M@\000\000\000\000\000`Q@fffff&@@33333\263X@\315\314\314\314\314lQ@\000\000\000\000\000\000L@\315\314\314\314\314,X@\315\314\314\314\314,X@\315\314\314\314\314\214D@\000\000\000\000\000\000@@\232\231\231\231\231\371S@\232\231\231\231\231\231Q@33333\323V@\000\000\000\000\000\240U@\315\314\314\314\314\314>@fffff\346@@\000\000\000\000\000\300@@\315\314\314\314\314\014X@33333sV@33333\363V@fffff\206U@\315\314\314\314\314\014L@fffff\346L@\232\231\231\231\231YL@\315\314\314\314\314LB@\315\314\314\314\314\254W@\000\000\000\000\000\240T@\315\314\314\314\314\214P@\315\314\314\314\314LB@fffff&D@33333\263W@\232\231\231\231\231yX@\315\314\314\314\314LP@\000\000\000\000\000\000Y@\000\000\000\000\000\000X@\315\314\314\314\314\214X@\000\000\000\000\000@X@33333\363A@\232\231\231\231\231\231W@33333SW@\315\314\314\314\314lX@\000\000\000\000\000\000Y@\000\000\000\000\000 R@\315\314\314\314\314\314J@\000\000\000\000\000\2002@\232\231\231\231\231\0315@ffffff5@\232\231\231\231\231\031W@fffff\306V@\000\000\000\000\000\000Y@33333SW@fffff\006X@\232\231\231\231\231\031=@\000\000\000\000\000\2003@fffff\346P@\232\231\231\231\231\031H@fffff\246Q@\232\231\231\231\231yX@\232\231\231\231\231\031O@\000\000\000\000\000\240W@fffff&W@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@33333sB@\000\000\000\000\000\000Y@\232\231\231\231\231\371U@\000\000\000\000\000@S@\315\314\314\314\314\3149@\232\231\231\231\231\271W@33333sS@\000\000\000\000\000\000Y@fffff\346W@ffffffV@\232\231\231\231\2319W@\315\314\314\314\314\214D@\315\314\314\314\314\314P@33333sC@\000\000\000\000\000\000U@\315\314\314\314\314\214F@\232\231\231\231\231\031K@\000\000\000\000\000\000Y@\232\231\231\231\231YM@\232\231\231\231\231\031X@33333\323T@\315\314\314\314\314\014V@\315\314\314\314\314\214M@fffff\3465@33333\263V@fffff\006W@fffff\3465@\232\231\231\231\231YP@33333ST@333333X@\232\231\231\231\231\231Q@fffff\006Q@fffffFX@\315\314\314\314\314\214N@33333\2631@\315\314\314\314\314\314<@\000\000\000\000\000\000Y@\232\231\231\231\231\031<@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\232\231\231\231\231\371U@333333Q@\315\314\314\314\314\354Q@\000\000\000\000\000@C@\000\000\000\000\000@X@\315\314\314\314\314LV@\000\000\000\000\000\300T@\315\314\314\314\314\214X@fffff\346W@\000\000\000\000\000`V@\315\314\314\314\314\314J@\000\000\000\000\000\000Y@fffff\346N@\315\314\314\314\314,S@33333\263=@\232\231\231\231\231\231@@\000\000\000\000\000\000Y@\232\231\231\231\231\331M@\000\000\000\000\000\000D@fffff\346B@33333\363H@\000\000\000\000\000 V@ffffff-@33333SX@fffff\006X@333333D@\315\314\314\314\314L0@\000\000\000\000\000\240X@33333\323U@ffffffT@ffffff<@33333\323W@\315\314\314\314\314lT@\000\000\000\000\000\000Y@fffff\3466@\000\000\000\000\000\000\032@fffffFU@\315\314\314\314\314\354V@33333\363D@\000\000\000\000\000\000Y@\232\231\231\231\231\331F@\232\231\231\231\231\031@@fffff\206P@fffff\246Q@33333sW@\232\231\231\231\231\231X@\000\000\000\000\000\300W@\315\314\314\314\314\014E@\000\000\000\000\000\000K@ffffff2@fffff&J@\000\000\000\000\000\200T@\232\231\231\231\231\231V@\000\000\000\000\000\000Y@\000\000\000\000\000 S@\315\314\314\314\314\014D@\315\314\314\314\314\354T@\315\314\314\314\314lS@\000\000\000\000\000\000O@\315\314\314\314\314\3142@\000\000\000\000\000\340V@fffffFR@33333\263X@\232\231\231\231\231yW@\000\000\000\000\000\000Y@33333\263X@\000\000\000\000\000\000Y@\000\000\000\000\000\200V@fffff\346V@\232\231\231\231\231\0313@\315\314\314\314\314\014U@33333s@@\000\000\000\000\000@H@fffffFP@\000\000\000\000\000\200V@\315\314\314\314\314,U@fffff\206X@\000\000\000\000\000\2005@33333\223Q@\315\314\314\314\314\314V@\000\000\000\000\000\000@@\315\314\314\314\314\214H@fffff\206X@\000\000\000\000\000\240T@fffffFU@33333\223X@\315\314\314\314\314\314S@\232\231\231\231\231yX@fffff\246T@\000\000\000\000\000\300R@\000\000\000\000\000\300N@\232\231\231\231\231YU@\315\314\314\314\314LP@\000\000\000\000\000\000Y@33333\263N@\232\231\231\231\231\231G@\315\314\314\314\314\214@@\000\000\000\000\000@D@\315\314\314\314\314\014X@33333\363W@33333\223W@\315\314\314\314\314\314M@ffffff\032@\315\314\314\314\314LE@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\232\231\231\231\231YX@ffffff5@\000\000\000\000\000\000Y@\315\314\314\314\314\014Q@\000\000\000\000\000\300P@\000\000\000\000\000\300D@fffff\006U@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@ffffffL@"
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "d]\334F\003\370\003@U0*\251\023\220\032@\000\221~\373:p\003@\300\354\236<,\324\003@$\271\374\207\364\333\375?\250\306K7\211\001\021@\n\327\243p=\n\004@\314\356\311\303B-\n@\326\305m4\200\367\025@\300\354\236<,\324\372?\313\020\307\272\270\315\025@Z\365\271\332\212\375\373?\267b\177\331=y\370?p\316\210\322\336\340\030@=,\324\232\346\035\374?/\335$\006\201\225\001@\361c\314]K\310\373?1\010\254\034Z$\034@\325\th\"lx\377?\240\032/\335$F\033@\353\3426\032\300\333\024@\344\203\236\315\252\217\020@\200H\277}\0358\377?D\213l\347\373\251\366?o\022\203\300\312\241\006@\365JY\2068\226\035@\027\331\316\367S\343\371?\023\362A\317f\325\031@\254\213\333h\000\357\017@\326V\354/\273\'\007@\357\311\303B\255i\006@\374\030s\327\022\022!@\017\2343\242\264\267\005@\310\007=\233U\037\005@O@\023a\303S\r@Y\027\267\321\000^\000@0*\251\023\320D\035@t$\227\377\220\376\021@B>\350\331\254:\035@\242\2647\370\302d\013@[\261\277\354\236\274\010@\356|?5^\272\022@\216\006\360\026HP\376?\031\342X\027\267\021\021@\374\030s\327\022\362\002@g\325\347j+\366\013@\374\251\361\322Mb\004@\010=\233U\237+\005@I\235\200&\302\206\002@\'\240\211\260\341\251\025@B>\350\331\254\372\000@O\257\224e\210c\006@HP\374\030s\327\027@{\024\256G\341z\027@g\325\347j+\366\013@\216uq\033\r`\"@\313\241E\266\363\375\031@#\333\371~j\034 @\3019#J{\203\374?\016\2760\231*X\031@\326\305m4\200w\024@\177\373:p\316\210\365?\351&1\010\254\034\375?#\333\371~j<\035@\360\026HP\374\330\024@\256\330_vO^\032@R\270\036\205\353Q\r@q\033\r\340-\220\017@\006\022\024?\306\334\370?\313\020\307\272\270\215\376?0\273\'\017\013\265\016@e\252`TR\247\n@\314\177H\277}\035\374?\221~\373:p\316\375?\363\037\322o_G\035@.\220\240\3701&\025@Gr\371\017\3517\t@\202\342\307\230\273\226\002@g\325\347j+\366\013@\370\302d\252`T\376?H\341z\024\256G\031@.\220\240\3701&\025@7\211A`\345\320\374?\031s\327\022\362\001\020@g\325\347j+\366\377?\313\241E\266\363\375\031@\344\203\236\315\252\317\371?\253>W[\261?\030@\317f\325\347jk\021@\345\362\037\322o_\367?\337\340\013\223\251\002\022@e\031\342X\0277\r@+\366\227\335\223\207\370?\360\026HP\374\330\021@\313\241E\266\363=\026@\320\263Y\365\271\232\025@|\362\260Pk\232\001@\035\311\345?\244_\013@\333\371~j\274\364\020@\017\2343\242\264\267\005@\253>W[\261?\023@\'\302\206\247W\312\371?\344\203\236\315\252O\037@\344\203\236\315\252O\037@\n\327\243p=\212\027@\212\260\341\351\225\262\372?\232\010\033\236^)\375?(~\214\271k\t\374?\263{\362\260P\353\031@T\343\245\233\304@(@;\337O\215\227\356\020@e\031\342X\0277\r@\275R\226!\216\225!@\261Pk\232w\034\003@)\355\r\2760\231\021@\'\240\211\260\341\251\025@\032\300[ Aq\002@J{\203/L\246\373?\221\017z6\253>\373?\2201w-!\237\003@}\256\266b\177\331\362?\360\205\311T\301\250\374?\n\327\243p=\212\n@\317f\325\347jk\021@\232\010\033\236^)\022@d;\337O\215\227\020@\262\235\357\247\306K\001@q\033\r\340-\020\001@\344\203\236\315\252O\037@t$\227\377\220\376\021@\241g\263\352s5\020@\221~\373:p\016\024@Y\027\267\321\000^\014@D\372\355\353\300\271\t@\366(\\\217\302\365\n@\254\034Zd;_\016@q\033\r\340-\220\017@\356|?5^\272\365?\000o\201\004\305\017\002@\204\rO\257\224\345\010@\t\212\037c\356\332\000@w\276\237\032/]\001@;\001M\204\rO\016@\325\347j+\366\227\026@b\241\3264\3578\006@_\007\316\031Q\232\025@\374\251\361\322Mb\010@?\306\334\265\204|\003@\263{\362\260P\353\031@\327\022\362A\317f\024@_\007\316\031Q\232\025@\300\354\236<,\324\000@H\277}\0358\347\007@\307K7\211A`\003@]\376C\372\355k\000@9\326\305m4\300\021@g\325\347j+\366\013@\273\270\215\006\360\226\006@#\333\371~j<\035@=\233U\237\253\255\377?\n\327\243p=\212\n@\327\022\362A\317\346\034@\254\034Zd;_\016@\206\311T\301\250d\020@\221~\373:p\316\377?\365\333\327\201sF\367?P\374\030s\327\022\006@:#J{\203/\371?\"\375\366u\340\234\374?mV}\256\266\342\000@m\347\373\251\361\322\376?\226\262\014q\254k%@\375\366u\340\234\321\021@\276\301\027&S\005\000@^\272I\014\002+\002@d\314]K\310\007\367?\020z6\253>\327\005@\325\347j+\366\227\t@\226\262\014q\254k%@n4\200\267@B\033@9\326\305m4\000\013@+\030\225\324\t\350\n@w\276\237\032/]\002@N\321\221\\\376C\370?\024?\306\334\265\204\365?\315\314\314\314\314\314\000@\243\222:\001MD\022@\316\210\322\336\340+%@\245N@\023aC\004@\325x\351&1\210\010@\025\035\311\345?$\007@\346\256%\344\203\236\002@*:\222\313\177\310\004@\376e\367\344a\241\000@\274\005\022\024?\306\374?\323Mb\020X9\372?\376\324x\351&1\362?g\325\347j+\366\013@0L\246\nF%\365?\305\2171w-!\375?\233\346\035\247\350H\013@\353\3426\032\300\333\024@~\0358gDi\370?\304\261.n\243\001\370?\3122\304\261.n\371?-\262\235\357\247\306\006@P\374\030s\327\022\362?\340-\220\240\370\261\000@J\014\002+\207\026\020@\303\365(\\\217B\014@\243\222:\001MD\022@\277}\0358gD\010@\241g\263\352s\265\021@\253>W[\261?\030@q\033\r\340-\220\364?\327\243p=\nW\017@\372~j\274t\223\000@!\260rh\221\355\005@\2068\326\305m\264\003@\024\320D\330\360\364\020@\316\210\322\336\340+%@\177\373:p\316\210\377?\243\222:\001M\004\017@\206\311T\301\250d!@0\273\'\017\013\265\007@\030&S\005\243\022\004@0\273\'\017\013\265\365?e\031\342X\0277\r@\254\034Zd;_\r@\330\201sF\224v\003@\256\330_vO\336\023@\326\305m4\200\367\025@O\257\224e\210c\006@\221~\373:p\316\366?\315;N\321\221\334\031@(\017\013\265\246y\367?HP\374\030s\327\374?\367u\340\234\021\245\004@\224\207\205Z\323<\n@\377!\375\366u \020@\023\362A\317f\325\031@xz\245,C\034\377?\224\366\006_\230\014\020@\216uq\033\r\340\005@HP\374\030s\327\002@\222\313\177H\277}\377?A\361c\314]K\370?O@\023a\303S\r@$(~\214\271k\371?\024\256G\341z\324\022@\315\314\314\314\314L\002@\343\245\233\304 \260 @F\266\363\375\324x\024@\t\212\037c\356Z\375?\2505\315;N\021\031@\340\276\016\2343\342\026@\326V\354/\273\'\004@\030\225\324\th\342\022@\242\2647\370\302\344\006@\'\240\211\260\341\251\025@@\244\337\276\016\034\003@Zd;\337O\315\027@\326\305m4\200\367\025@\236\357\247\306K\267\021@\r\340-\220\240\370\371?\341\013\223\251\202\321\014@\354Q\270\036\205k\005@U0*\251\023\220\032@<N\321\221\\\376\375?\271\215\006\360\026\010\021@\201\004\305\2171w\371?0*\251\023\320D\035@\340\276\016\2343\342\026@\"lxz\245,\000@\377\262{\362\260\320\017@\230n\022\203\300\312\r@\235\200&\302\206\247\377?n4\200\267@B\033@t$\227\377\220~\027@\314]K\310\007\275\010@5^\272I\014\202\000@\223\251\202QI\035\007@\270@\202\342\307\230\375?#J{\203/L\016@\236\357\247\306K\267\021@\313\020\307\272\270\r\003@\373\313\356\311\303\002\026@\202sF\224\366\006 @\354Q\270\036\205\353\017@y\351&1\010\254\006@\231*\030\225\324\t\000@Nb\020X9\264\374?\030\225\324\th\342\022@\026\373\313\356\311C\006@\217\302\365(\\\217\017@\322o_\007\316Y\030@p\316\210\322\336\340\030@\002+\207\026\331N\002@R\270\036\205\353\321\003@\000\000\000\000\000\000\375?\301\250\244N@\023\375?R\270\036\205\353Q\365?\210\205Z\323\274\343\375?\317\367S\343\245\233\366?\221\355|?5^\003@R\'\240\211\260\341\376?\033\236^)\313p\"@Zd;\337O\r\002@\254\255\330_vO\020@\202sF\224\366\006 @\016\2760\231*X\031@H\341z\024\256\307\004@F\266\363\375\324\370\006@\2505\315;N\321\366?\263{\362\260P\353\031@g\325\347j+v\t@\225e\210c]\\\004@\033\236^)\313p\"@u\223\030\004VN\037@\303\323+e\031b\016@\201&\302\206\247W\001@\312\303B\255i^\013@{\024\256G\341z\001@#\333\371~j\034 @\310\230\273\226\220\017\365?B>\350\331\254\372\005@y\351&1\010,\007@\327\243p=\nW\017@Gr\371\017\351\267\371?\\\217\302\365(\\\020@\317f\325\347j+\370?gDio\360\005\013@8gDiop\014@\036\026jM\363\016\t@J{\203/L\246 @\005\305\2171w-\366?\351\267\257\003\347\014\000@\302\027&S\005c\031@\366(\\\217\302u\026@\340\276\016\2343\342\026@\313\020\307\272\270\r\003@;\337O\215\227n\371?\246\233\304 \260r\367?\234\242#\271\374\207\372?\331\316\367S\343\245\001@n4\200\267@B\033@33333\263\020@\213\375e\367\344\341\n@\345\362\037\322o_\003@\267b\177\331=y\017@\334\327\201sF\224\001@\032Q\332\033|a\020@\014\223\251\202QI\371?\263\352s\265\025\373\r@"
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\000\000\000\000\000\0008@\000\000\000\000\000\000\360?\000\000\000\000\000\0008@\000\000\000\000\000\000\360?\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\360?\000\000\000\000\000\000 @\000\000\000\000\000\000\034@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\360?\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000 @\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\034@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000 @\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000\360?\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\030@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000\010@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\020@\000\000\000\000\000\000\034@\000\000\000\000\000\0008@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000 @\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000 @\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\010@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\360?\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000 @\000\000\000\000\000\000\360?\000\000\000\000\000\000\360?\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000 @\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000 @\000\000\000\000\000\000\034@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000 @\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\010@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\000@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000 @\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\030@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000\030@\000\000\000\000\000\000\010@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000 @\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000\010@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\034@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\010@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000 @\000\000\000\000\000\000 @\000\000\000\000\000\000\024@\000\000\000\000\000\000\000@\000\000\000\000\000\000\034@\000\000\000\000\000\000\030@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\000@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\360?\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\360?\000\000\000\000\000\000\010@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000 @\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\034@\000\000\000\000\000\000\010@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\030@\000\000\000\000\000\000\360?\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\030@\000\000\000\000\000\000\010@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000\000@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000\010@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000\010@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\010@\000\000\000\000\000\000\360?\000\000\000\000\000\000\024@\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\360?\000\000\000\000\000\000\030@\000\000\000\000\000\000\020@\000\000\000\000\000\000\010@\000\000\000\000\000\000\030@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\034@\000\000\000\000\000\000\024@\000\000\000\000\000\000\360?\000\000\000\000\000\000\034@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\034@\000\000\000\000\000\0008@\000\000\000\000\000\000\030@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@\000\000\000\000\000\0008@\000\000\000\000\000\000\360?\000\000\000\000\000\0008@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\0008@\000\000\000\000\000\000\000@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\010@\000\000\000\000\000\000\030@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\0008@\000\000\000\000\000\000\020@\000\000\000\000\000\000\020@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\024@\000\000\000\000\000\000\000@\000\000\000\000\000\000\020@\000\000\000\000\000\0008@\000\000\000\000\000\000\010@"
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\000\000\000\000\000\320\204@\000\000\000\000\000\000s@\000\000\000\000\000\320\204@\000\000\000\000\000\020q@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000\020q@\000\000\000\000\0000s@\000\000\000\000\000\220t@\000\000\000\000\000\320\204@\000\000\000\000\000ps@\000\000\000\000\0000y@\000\000\000\000\0000y@\000\000\000\000\000\220p@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\300r@\000\000\000\000\000P{@\000\000\000\000\000\300q@\000\000\000\000\000\340z@\000\000\000\000\000\300o@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000 h@\000\000\000\000\000\240t@\000\000\000\000\0000y@\000\000\000\000\000\000l@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\360u@\000\000\000\000\000\000x@\000\000\000\000\000\000s@\000\000\000\000\000\340p@\000\000\000\000\0000y@\000\000\000\000\000Pr@\000\000\000\000\0000s@\000\000\000\000\000\320q@\000\000\000\000\000\320\204@\000\000\000\000\000\340p@\000\000\000\000\0000s@\000\000\000\000\000\200p@\000\000\000\000\000\300o@\000\000\000\000\000\320\204@\000\000\000\000\000@q@\000\000\000\000\000\000{@\000\000\000\000\000\200r@\000\000\000\000\000\320\204@\000\000\000\000\000\360q@\000\000\000\000\000\000x@\000\000\000\000\000px@\000\000\000\000\000\020r@\000\000\000\000\000 m@\000\000\000\000\000@q@\000\000\000\000\000\220s@\000\000\000\000\000\220u@\000\000\000\000\000\240t@\000\000\000\000\000\320\204@\000\000\000\000\000\300r@\000\000\000\000\000\240n@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\220t@\000\000\000\000\000\000k@\000\000\000\000\000ps@\000\000\000\000\000Pq@\000\000\000\000\000Pq@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\200g@\000\000\000\000\000\320\204@\000\000\000\000\000P}@\000\000\000\000\000\020s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000@q@\000\000\000\000\000\320\204@\000\000\000\000\000\020r@\000\000\000\000\000\020s@\000\000\000\000\000\200p@\000\000\000\000\000\000s@\000\000\000\000\000\320\204@\000\000\000\000\000\220u@\000\000\000\000\000\320\204@\000\000\000\000\000\300k@\000\000\000\000\000Pq@\000\000\000\000\0000y@\000\000\000\000\000\340x@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000ps@\000\000\000\000\000\200o@\000\000\000\000\000\320\204@\000\000\000\000\000\340p@\000\000\000\000\0000s@\000\000\000\000\000\000x@\000\000\000\000\000\000l@\000\000\000\000\000P{@\000\000\000\000\000`v@\000\000\000\000\000`v@\000\000\000\000\000\300h@\000\000\000\000\000P{@\000\000\000\000\0008\206@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000`g@\000\000\000\000\0000s@\000\000\000\000\0000s@\000\000\000\000\000\360t@\000\000\000\000\000\020q@\000\000\000\000\0000s@\000\000\000\000\000\360q@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\200r@\000\000\000\000\000Pq@\000\000\000\000\000\360q@\000\000\000\000\0000s@\000\000\000\000\0000y@\000\000\000\000\000\200p@\000\000\000\000\000`v@\000\000\000\000\0000s@\000\000\000\000\000\340x@\000\000\000\000\000\340x@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\300k@\000\000\000\000\0000s@\000\000\000\000\000Pq@\000\000\000\000\000\320\204@\000\000\000\000\000\200g@\000\000\000\000\000@q@\000\000\000\000\000\000x@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000\340o@\000\000\000\000\000\000x@\000\000\000\000\000\220q@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000 m@\000\000\000\000\000\220q@\000\000\000\000\000\320\204@\000\000\000\000\000 h@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\340n@\000\000\000\000\000@q@\000\000\000\000\000\320\204@\000\000\000\000\000\220t@\000\000\000\000\000P{@\000\000\000\000\000\000s@\000\000\000\000\000\300q@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\000{@\000\000\000\000\000\320\204@\000\000\000\000\000P{@\000\000\000\000\000P{@\000\000\000\000\000\320\204@\000\000\000\000\000\260y@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000P{@\000\000\000\000\000P{@\000\000\000\000\000\000{@\000\000\000\000\000 h@\000\000\000\000\000\260y@\000\000\000\000\000`n@\000\000\000\000\0000s@\000\000\000\000\000@q@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\340x@\000\000\000\000\000\340t@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000px@\000\000\000\000\000P{@\000\000\000\000\000 h@\000\000\000\000\000\200p@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000@q@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\340z@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000 h@\000\000\000\000\000\320\204@\000\000\000\000\000\200g@\000\000\000\000\000\300k@\000\000\000\000\000\000s@\000\000\000\000\000\340x@\000\000\000\000\000\320\204@\000\000\000\000\000\340n@\000\000\000\000\000\300k@\000\000\000\000\000\320\204@\000\000\000\000\000\340k@\000\000\000\000\000\320\204@\000\000\000\000\000 h@\000\000\000\000\000\000{@\000\000\000\000\000Pq@\000\000\000\000\000\340t@\000\000\000\000\0000y@\000\000\000\000\000Pq@\000\000\000\000\000@l@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\0000s@\000\000\000\000\000\000x@\000\000\000\000\000@n@\000\000\000\000\000\220t@\000\000\000\000\000px@\000\000\000\000\000\320\204@\000\000\000\000\000 w@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000 h@\000\000\000\000\000\000s@\000\000\000\000\000\000l@\000\000\000\000\000\200g@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\340p@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\020q@\000\000\000\000\000\200q@\000\000\000\000\000\000l@\000\000\000\000\000\320\204@\000\000\000\000\000`z@\000\000\000\000\000 m@\000\000\000\000\000\000s@\000\000\000\000\000\360q@\000\000\000\000\0000s@\000\000\000\000\000\360q@\000\000\000\000\0000y@\000\000\000\000\000ps@\000\000\000\000\000\220t@\000\000\000\000\000\340k@\000\000\000\000\0000y@\000\000\000\000\000\000s@\000\000\000\000\000\000{@\000\000\000\000\000\000s@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\0000y@\000\000\000\000\000Pr@\000\000\000\000\000 m@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000`n@\000\000\000\000\000\340z@\000\000\000\000\000\340p@\000\000\000\000\000\320\204@\000\000\000\000\000@q@\000\000\000\000\000P{@\000\000\000\000\0000s@\000\000\000\000\000\340k@\000\000\000\000\000px@\000\000\000\000\000\020r@\000\000\000\000\000\000v@\000\000\000\000\0000s@\000\000\000\000\000\000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\360q@\000\000\000\000\000\320\204@\000\000\000\000\000\000s@\000\000\000\000\000 m@\000\000\000\000\000\220p@\000\000\000\000\000\200p@\000\000\000\000\000\000{@\000\000\000\000\000P{@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\0008\206@\000\000\000\000\000\320\204@\000\000\000\000\000\000x@\000\000\000\000\000\200p@\000\000\000\000\000\260s@\000\000\000\000\000\000{@\000\000\000\000\000\300o@\000\000\000\000\000\000v@\000\000\000\000\000\300r@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000\300k@\000\000\000\000\000\000x@\000\000\000\000\000\260s@\000\000\000\000\000\240t@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000@q@\000\000\000\000\000\320\204@\000\000\000\000\000\240t@\000\000\000\000\000\320\204@\000\000\000\000\000\000{@\000\000\000\000\000\320\204@\000\000\000\000\000\340k@\000\000\000\000\000\320\204@\000\000\000\000\000\200r@\000\000\000\000\000\320\204@\000\000\000\000\000pq@\000\000\000\000\000\200r@\000\000\000\000\000\200r@\000\000\000\000\000\000p@\000\000\000\000\000\320\204@\000\000\000\000\000\200g@\000\000\000\000\000ps@\000\000\000\000\000\000l@\000\000\000\000\000 m@\000\000\000\000\000px@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000`n@\000\000\000\000\0000s@\000\000\000\000\000pq@\000\000\000\000\000\200p@\000\000\000\000\000pq@\000\000\000\000\000\200g@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\340n@"
      }
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "3333334@fffff\3460@3333334@\000\000\000\000\000\0005@3333334@33333\2632@\000\000\000\000\000\0005@ffffff1@\232\231\231\231\231\0310@3333334@ffffff.@ffffff-@ffffff-@333333/@ffffff-@3333334@ffffff-@\232\231\231\231\231\2310@3333335@33333\2633@fffff\3460@\232\231\231\231\231\2311@3333334@3333334@\315\314\314\314\314\3141@\232\231\231\231\231\0313@ffffff-@3333334@3333334@ffffff1@3333334@fffff\3461@fffff\3464@ffffff2@3333332@ffffff-@\232\231\231\231\231\2310@\000\000\000\000\000\0005@\232\231\231\231\231\231.@3333334@\315\314\314\314\314\3141@\000\000\000\000\000\0005@\000\000\000\000\000\000*@\232\231\231\231\231\2311@3333334@\000\000\000\000\000\0002@\315\314\314\314\314\3141@\232\231\231\231\231\2310@3333334@\232\231\231\231\231\2313@fffff\3464@3333333@\000\000\000\000\000\0000@fffff\3461@\000\000\000\000\000\0002@\315\314\314\314\314L1@fffff\3462@\232\231\231\231\231\0313@3333334@\232\231\231\231\231\2310@3333333@ffffff-@3333334@333333)@\315\314\314\314\314\314-@ffffff.@\232\231\231\231\231\2312@\232\231\231\231\231\2312@3333334@3333334@ffffff1@3333334@\232\231\231\231\231\0313@3333334@\232\231\231\231\231\0315@3333333@3333334@3333334@\000\000\000\000\000\0002@3333334@\000\000\000\000\000\0000@3333333@\000\000\000\000\000\000*@ffffff2@3333334@fffff\3462@3333334@33333\2632@\232\231\231\231\231\2312@ffffff-@33333\2632@ffffff1@3333334@\000\000\000\000\000\0005@ffffff.@\315\314\314\314\314L2@3333334@\315\314\314\314\314\3141@\000\000\000\000\000\0005@fffff\3464@3333334@3333335@\232\231\231\231\231\231-@\232\231\231\231\231\231-@333333+@3333335@\232\231\231\231\231\0314@3333334@ffffff.@\000\000\000\000\000\0001@\000\000\000\000\000\0005@ffffff1@33333\2633@\000\000\000\000\000\0005@\000\000\000\000\000\0005@\232\231\231\231\231\2313@3333334@3333334@3333334@3333334@3333334@3333334@\232\231\231\231\231\2310@\232\231\231\231\231\2312@\232\231\231\231\231\2313@ffffff1@ffffff-@\000\000\000\000\000\000*@\232\231\231\231\231\231-@\000\000\000\000\000\0005@33333\2632@33333\2632@3333334@ffffff1@ffffff2@\000\000\000\000\000\0005@\232\231\231\231\231\2312@3333334@\232\231\231\231\231\0313@ffffff0@fffff\3464@3333334@ffffff.@\315\314\314\314\314\314,@fffff\3464@\000\000\000\000\000\0003@ffffff1@3333334@ffffff.@fffff\3461@\000\000\000\000\000\0003@3333334@\315\314\314\314\314\3141@ffffff-@3333334@\000\000\000\000\000\2002@\000\000\000\000\000\0002@3333334@333333)@3333335@ffffff2@33333\2633@\000\000\000\000\000\0005@3333334@3333334@3333334@\315\314\314\314\314\3141@3333334@3333335@3333335@3333334@\315\314\314\314\314L2@\000\000\000\000\000\0005@3333334@3333335@3333335@\315\314\314\314\314\3141@\315\314\314\314\314\3141@\315\314\314\314\314L2@\315\314\314\314\314\3140@ffffff1@ffffff0@3333334@ffffff-@3333334@ffffff-@ffffff.@\000\000\000\000\000\0006@3333334@3333334@3333333@3333335@\315\314\314\314\314\3141@\000\000\000\000\000\000*@ffffff-@3333334@3333334@\000\000\000\000\000\0002@ffffff-@3333334@3333334@fffff\3460@ffffff-@3333334@3333334@\315\314\314\314\314\3141@3333334@\232\231\231\231\231\0313@ffffff2@ffffff2@ffffff.@3333334@\000\000\000\000\000\2002@33333\2632@3333334@\232\231\231\231\231\2312@3333334@\315\314\314\314\314\3141@\315\314\314\314\314\3141@\232\231\231\231\231\2312@\000\000\000\000\000\0006@ffffff-@\232\231\231\231\231\2312@fffff\3461@3333334@3333334@3333334@ffffff1@ffffff1@fffff\3464@\315\314\314\314\314\3141@\232\231\231\231\231\0310@3333333@3333334@\232\231\231\231\231\2311@3333334@3333334@3333334@\315\314\314\314\314\3141@ffffff2@3333334@\232\231\231\231\231\0313@\000\000\000\000\000\0005@3333334@3333334@3333334@3333334@3333332@3333334@\000\000\000\000\000\0005@\000\000\000\000\000\0005@\000\000\000\000\000\0001@ffffff-@3333334@\315\314\314\314\314\314/@fffff\3461@ffffff2@\232\231\231\231\231\2313@ffffff1@\232\231\231\231\231\2313@ffffff-@ffffff.@\232\231\231\231\231\0310@\232\231\231\231\231\2312@ffffff-@ffffff2@\315\314\314\314\314\3141@fffff\3460@3333334@\000\000\000\000\000\0005@ffffff-@\232\231\231\231\231\2310@fffff\3461@3333334@\000\000\000\000\000\0005@3333334@3333334@\315\314\314\314\314\3140@fffff\3460@\315\314\314\314\314\3141@3333334@ffffff0@3333335@\000\000\000\000\000\0005@\232\231\231\231\231\2312@3333333@\000\000\000\000\000\0000@\315\314\314\314\314\3142@\000\000\000\000\000\0005@ffffff2@3333334@3333334@\232\231\231\231\231\2313@3333334@ffffff2@fffff\3461@333333/@\000\000\000\000\000\000*@\315\314\314\314\314\3141@3333335@3333334@3333334@\232\231\231\231\231\0314@3333334@fffff\3464@\000\000\000\000\000\000*@ffffff0@\315\314\314\314\314\3141@\232\231\231\231\231\2311@\315\314\314\314\314\3142@\232\231\231\231\231\2310@3333334@3333334@3333334@ffffff.@ffffff2@fffff\3464@ffffff0@\232\231\231\231\231\0313@\000\000\000\000\000\0005@3333334@ffffff0@3333334@\232\231\231\231\231\0313@3333334@\315\314\314\314\314\3141@3333334@\232\231\231\231\231\2312@3333334@\232\231\231\231\231\231.@3333334@3333333@\232\231\231\231\231\2310@\232\231\231\231\231\2310@333333.@3333334@\232\231\231\231\231\0313@ffffff.@3333334@fffff\3461@3333333@3333334@3333334@3333334@3333334@\315\314\314\314\314\3140@\000\000\000\000\000\0005@3333333@\000\000\000\000\000\000*@3333333@\232\231\231\231\231\0313@\000\000\000\000\000\0005@3333334@\000\000\000\000\000\2002@"
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\270\036\205\353Q\270\032@\000\000\000\000\000\244v@\341z\024\256G\tv@\244p=\n\327\177x@33333wx@\037\205\353Q\270\256x@fffff\316x@\n\327\243p=fx@\366(\\\217\302\371w@fffff\316x@\000\000\000\000\000hx@\270\036\205\353Q\020t@\244p=\n\327Ov@R\270\036\205\353\225x@\n\327\243p=\036v@\270\036\205\353QHx@\270\036\205\353Q(V@\000\000\000\000\000Lw@\000\000\000\000\000\244w@\341z\024\256G\241w@\217\302\365(\\sw@fffff\316x@\205\353Q\270\036\365w@fffff\316x@fffff\316x@\024\256G\341z\304x@\315\314\314\314\314Lw@\217\302\365(\\[x@R\270\036\205\353Ix@\000\000\000\000\000\340w@\205\353Q\270\036\235x@{\024\256G\341\206x@\354Q\270\036\205\247x@fffff\316x@\341z\024\256G\305x@\315\314\314\314\314\024w@fffff\316x@\232\231\231\231\231-x@\354Q\270\036\205\253x@fffff\316x@\315\314\314\314\314\230x@\256G\341z\024\216w@q=\n\327\243\364w@fffff\316x@=\n\327\243p\021x@fffff\316x@fffff\316x@\000\000\000\000\000\270x@\\\217\302\365(\014Y@fffff\316x@\327\243p=\n;x@fffff\316x@fffff\316x@fffff\316x@\341z\024\256G}x@fffff\316x@fffff\316x@{\024\256G\341bx@fffff\316x@\000\000\000\000\000tx@fffff\316x@fffff\316x@R\270\036\205\353\2215@fffff\316x@\205\353Q\270\036\221w@\217\302\365(\\+x@\244p=\n\327\263x@\256G\341z\024\232x@\n\327\243p=\312<@\270\036\205\353Q\270\036@\303\365(\\\217\036x@\205\353Q\270\036\221x@q=\n\327\243tv@R\270\036\205\353\3212@fffff\316x@\037\205\353Q\270\222w@\354Q\270\036\205Cx@{\024\256G\341z\324?fffff\316x@q=\n\327\243\020n@fffff\316x@\303\365(\\\217nx@33333[x@H\341z\024\256\303x@fffff\2468@\217\302\365(\\\303x@33333+v@\256G\341z\024\252x@{\024\256G\341Vx@\217\302\365(\\{x@)\\\217\302\365\300x@\000\000\000\000\000\214w@fffff\316x@\270\036\205\353Q\300w@\232\231\231\231\231\271x@\256G\341z\024\272x@\315\314\314\314\314|X@fffff\316x@H\341z\024\256\303w@33333\263Q@\n\327\243p=\302x@\341z\024\256GAx@\244p=\n\327\003w@\366(\\\217\302mx@\270\036\205\353Q\270x@q=\n\327\243\200x@{\024\256G\341\346s@\024\256G\341z\300s@\244p=\n\327gx@\217\302\365(\\\007x@\037\205\353Q\270\202v@33333\203v@\232\231\231\231\231]x@33333\227x@\341z\024\256G\245x@fffff\316x@\217\302\365(\\\303x@fffff\316x@fffff\316x@R\270\036\205\353}w@\354Q\270\036\205#w@fffff\316x@\232\231\231\231\231\271x@R\270\036\205\353\255x@fffff\316x@33333Gx@33333Gx@\205\353Q\270\036\001x@\341z\024\256G9w@R\270\036\205\353\271x@\303\365(\\\217Zw@fffff&x@{\024\256G\341\212x@\256G\341z\0246x@\366(\\\217\302\225x@33333ox@)\\\217\302\365\034x@fffff\316x@fffffRx@\315\314\314\314\314\214x@\315\314\314\314\314\240x@33333\273w@R\270\036\205\353\235x@H\341z\024\256\243x@\\\217\302\365(\254x@\256G\341z\024\272x@\244p=\n\327\263x@\366(\\\217\302uI@\217\302\365(\\[x@fffff\316x@fffff\316x@q=\n\327\243\314w@\000\000\000\000\000px@\366(\\\217\302\261x@\315\314\314\314\314\334T@\315\314\314\314\314\204x@H\341z\024\256_v@fffff\316x@)\\\217\302\365$v@fffff\316x@fffff\316x@\366(\\\217\302\261x@\244p=\n\327\017r@\037\205\353Q\270\216x@H\341z\024\256\207E@\n\327\243p=\252s@\000\000\000\000\000xx@fffff\316x@\366(\\\217\302\201x@\037\205\353Q\270\252x@{\024\256G\341\246x@\024\256G\341z,w@\327\243p=\n?x@=\n\327\243p};@fffff\316x@fffff\316x@\315\314\314\314\314\224x@\256G\341z\024\212x@\341z\024\256G\205x@fffff\316x@=\n\327\243p\305w@\244p=\n\327\233x@fffff\352u@q=\n\327\243(e@\270\036\205\353Q\260v@=\n\327\243p\221r@=\n\327\243p\355w@q=\n\327\243\200w@{\024\256G\341jw@fffff\346t@fffff\316x@\\\217\302\365(\034x@fffff\316x@\037\205\353Q\270\226x@\037\205\353Q\270.u@\366(\\\217\302\201w@fffff\316x@\024\256G\341z\230x@fffff\316x@\315\314\314\314\314<Q@\024\256G\341z\264x@\327\243p=\n\347w@\232\231\231\231\231\375u@\303\365(\\\217\"u@\327\243p=\n_j@fffff\316x@\256G\341z\024\276u@=\n\327\243p\241w@{\024\256G\341\232x@\217\302\365(\\\263x@fffff\316x@fffff\316x@\244p=\n\327\277x@fffff\316x@=\n\327\243p\301t@\217\302\365(\\\257x@\\\217\302\365(\340s@)\\\217\302\365\270x@\303\365(\\\217\216u@\205\353Q\270\036\325w@\315\314\314\314\314\354w@{\024\256G\341fw@\000\000\000\000\000\224x@{\024\256G\341\276x@fffff\316x@\244p=\n\327kx@\341z\024\256Guw@33333\257w@\232\231\231\231\231\245w@\244p=\n\327\263x@\341z\024\256G\215x@{\024\256G\341fx@q=\n\327\243\224x@\354Q\270\036\205\017x@\354Q\270\036\205?x@fffff\316x@33333s0@\366(\\\217\302\365$@\366(\\\217\3021x@fffff\316x@fffffVx@)\\\217\302\365$w@\024\256G\341z\210x@fffff\316x@q=\n\327\2434v@\\\217\302\365(\\N@fffff\316x@\\\217\302\365(\260x@fffff\316x@fffff\316x@fffff\316x@\327\243p=\nox@\024\256G\341z\214x@\000\000\000\000\000@;@\217\302\365(\\_x@\n\327\243p=Vx@33333\347u@fffff\316x@33333{x@{\024\256G\341\232x@\256G\341z\024\302u@fffff\316x@\000\000\000\000\000\274x@fffff\316x@33333_p@\327\243p=\n\273x@=\n\327\243p\271x@\270\036\205\353Q\240x@H\341z\024\256\377s@\000\000\000\000\000,x@\232\231\231\231\231Yu@\354Q\270\036\205;w@\217\302\365(\\\247x@)\\\217\302\365(\004@fffff\316x@H\341z\024\256+w@H\341z\024\256+x@)\\\217\302\365\270x@\205\353Q\270\036\tw@{\024\256G\341\202x@333333\r@fffff\316x@\341z\024\256G\241x@\270\036\205\353Qlv@fffffJx@fffff\316x@fffff\316x@\366(\\\217\302\311v@33333\023m@\315\314\314\314\314\304x@\327\243p=\n\273x@\232\231\231\231\2319H@fffff\316x@\217\302\365(\\\003q@\037\205\353Q\270\306x@fffff\316x@33333\213w@\366(\\\217\302-x@\256G\341z\024*u@fffff\316x@fffff\316x@\270\036\205\353Qxw@\366(\\\217\302ax@\315\314\314\314\314\314\004@\327\243p=\n\213x@\n\327\243p=>x@{\024\256G\341\262x@\244p=\n\327Kx@fffff\316x@\n\327\243p=\032x@R\270\036\205\353\251x@\217\302\365(\\\347o@\303\365(\\\217\0026@fffff\316x@{\024\256G\341\232w@fffff\316x@H\341z\024\256sx@\n\327\243p=\216x@\217\302\365(\\kw@\205\353Q\270\036\211w@\256G\341z\024\246w@\024\256G\341z\214x@\217\302\365(\\\003s@\n\327\243p=\202w@fffff\316x@\\\217\302\365(\250x@R\270\036\205\353\225x@=\n\327\243pux@\217\302\365(\\\227t@fffff\316x@=\n\327\243pm`@)\\\217\302\365\230w@H\341z\024\256\223x@\217\302\365(\\ox@fffff\216x@fffff\316x@\256G\341z\024\266w@\270\036\205\353Q\210x@)\\\217\302\365\254x@R\270\036\205\353\365w@fffff\316x@\037\205\353Q\270Nw@\354Q\270\036\205kf@\341z\024\256G\021V@\\\217\302\365(\354r@fffff\316x@H\341z\024\256\213w@fffff\316x@q=\n\327\243\010x@fffff\316x@\037\205\353Q\270\232w@q=\n\327\243\250x@fffff\316x@fffff\262x@"
      }
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\366(\\\217\302\2652@R\270\036\205\353Q\037@\244p=\n\327#2@\327\243p=\nW#@\\\217\302\365(\0346@\037\205\353Q\270\036\033@\205\353Q\270\036\205\037@\\\217\302\365(\334#@\327\243p=\nW!@\037\205\353Q\270^3@\354Q\270\036\205k/@=\n\327\243p=.@R\270\036\205\353Q<@\037\205\353Q\270\036\024@\270\036\205\353Q\270\031@q=\n\327\243p0@\244p=\n\327#0@q=\n\327\243p&@fffff\3460@\341z\024\256G\341,@\\\217\302\365(\\\035@\303\365(\\\217\302\034@\270\036\205\353Q8*@\366(\\\217\30251@)\\\217\302\365(\024@\232\231\231\231\231\231\027@333333,@\270\036\205\353Q\270\026@)\\\217\302\365(%@\205\353Q\270\036\205\022@\024\256G\341z\224$@q=\n\327\243p\031@\341z\024\256G\341*@\354Q\270\036\205\353\027@\327\243p=\n\327\030@\232\231\231\231\231\231\r@\217\302\365(\\\217\034@R\270\036\205\353Q\032@ffffff\037@{\024\256G\341z%@ffffff @\037\205\353Q\270\236-@)\\\217\302\365(\037@\327\243p=\n\327\007@\205\353Q\270\036E1@\303\365(\\\217\302\030@\327\243p=\n\0271@\024\256G\341z\024\"@\270\036\205\353Q80@\024\256G\341z\224)@\256G\341z\024.,@\244p=\n\327#5@\024\256G\341z\024\031@\217\302\365(\\\317>@\256G\341z\024\256&@\024\256G\341z\024\027@\024\256G\341z\224!@R\270\036\205\353Q\"@\232\231\231\231\231Y0@\303\365(\\\217\302&@\315\314\314\314\314\314\022@\n\327\243p=J=@\n\327\243p=\3129@R\270\036\205\353Q\020@\024\256G\341z\024\010@\232\231\231\231\231\0311@{\024\256G\341\3727@q=\n\327\243\360\"@\217\302\365(\\/A@\244p=\n\327c8@\303\365(\\\217\302\003@\366(\\\217\302\365\036@\303\365(\\\217B;@\n\327\243p=\n-@\232\231\231\231\231\231-@)\\\217\302\365(\036@fffff\346&@q=\n\327\243p1@\327\243p=\n\327\020@\n\327\243p=\3127@\256G\341z\024\256/@\024\256G\341z\024\026@{\024\256G\341z\024@\366(\\\217\302u)@\341z\024\256Ga/@333333 @{\024\256G\341z\034@\205\353Q\270\036\205\007@\217\302\365(\\\0172@H\341z\024\256\207=@333333\"@\303\365(\\\217\302%@\217\302\365(\\\2178@\205\353Q\270\036\205$@\\\217\302\365(\334(@H\341z\024\256G\021@\217\302\365(\\\017(@\000\000\000\000\000\000\026@\366(\\\217\302\365\'@\303\365(\\\217B%@\205\353Q\270\036\005!@)\\\217\302\365(8@\341z\024\256G\341\023@H\341z\024\256G\030@H\341z\024\256G\t@R\270\036\205\353Q5@\256G\341z\024\256=@\000\000\000\000\000\000,@\366(\\\217\302\365\006@\000\000\000\000\000\000\022@\232\231\231\231\231\2316@\232\231\231\231\231\031 @\217\302\365(\\\217\027@\354Q\270\036\205\353\031@\315\314\314\314\314L0@\232\231\231\231\231\231\030@\256G\341z\024\2562@\232\231\231\231\231\3314@\205\353Q\270\036\3053@=\n\327\243p\2750@\327\243p=\nW7@\327\243p=\nW.@)\\\217\302\365(\031@q=\n\327\243\360%@\315\314\314\314\314\314\034@\024\256G\341z\024#@\217\302\365(\\\217\n@\024\256G\341z\224-@\366(\\\217\302\365\022@q=\n\327\243\360 @q=\n\327\243\360\'@\256G\341z\024\256(@\366(\\\217\302\365-@\n\327\243p=\n\t@\\\217\302\365(\334!@\217\302\365(\\\217&@\303\365(\\\217\302\"@=\n\327\243p=5@=\n\327\243p\275,@\205\353Q\270\036\005+@\270\036\205\353Qx0@H\341z\024\256\0072@\270\036\205\353Q\270\032@\303\365(\\\217\302\007@\327\243p=\n\327\"@\341z\024\256G\341\034@\366(\\\217\302u5@\341z\024\256G!2@\303\365(\\\217\302\022@\354Q\270\036\205k$@)\\\217\302\365(\025@\341z\024\256Ga$@\366(\\\217\302\365+@H\341z\024\256G\'@\244p=\n\327\2431@\037\205\353Q\270\036\032@\232\231\231\231\231\231\032@\205\353Q\270\036\205-@\270\036\205\353Q8!@\327\243p=\nW2@)\\\217\302\365(\022@\315\314\314\314\314L*@\341z\024\256Ga\'@\327\243p=\n\327$@{\024\256G\341\3727@ffffff:@\270\036\205\353Q8+@R\270\036\205\353Q4@q=\n\327\24301@\366(\\\217\302\3650@\\\217\302\365(\0341@\366(\\\217\302\365\025@\232\231\231\231\231\231)@\315\314\314\314\314\0142@\205\353Q\270\036\205(@\024\256G\341z4A@\024\256G\341z\024(@\315\314\314\314\314\314\021@)\\\217\302\365(\037@\037\205\353Q\270\036\025@\024\256G\341z\024\016@\000\000\000\000\000\000%@\341z\024\256Ga,@fffff\2460@=\n\327\243p=7@333333&@=\n\327\243p=\022@H\341z\024\256G\026@R\270\036\205\353Q\'@\303\365(\\\217B,@333333,@=\n\327\243p=&@fffff\346\"@\000\000\000\000\000\200&@\000\000\000\000\000\000\026@\217\302\365(\\O4@\\\217\302\365(\374B@\217\302\365(\\\217\014@R\270\036\205\353\321:@\303\365(\\\217\002A@\n\327\243p=\n\034@q=\n\327\243\360#@33333s5@\270\036\205\353Q\370=@\024\256G\341z\0244@\270\036\205\353Q\270\026@\303\365(\\\217\302!@\256G\341z\024\3561@\270\036\205\353Q\270\033@\270\036\205\353Q\270$@\217\302\365(\\\217\025@\n\327\243p=J0@\270\036\205\353Q\270)@R\270\036\205\353Q\025@\303\365(\\\217B(@\354Q\270\036\205\353\036@\n\327\243p=\3121@=\n\327\243p=\036@\205\353Q\270\036\205/@R\270\036\205\353Q-@\232\231\231\231\231\031 @\256G\341z\024\256\373?\205\353Q\270\036E1@=\n\327\243p=\023@q=\n\327\243p*@\327\243p=\nW)@\327\243p=\n\327\r@\232\231\231\231\231\231\017@\315\314\314\314\314L\'@\n\327\243p=\212(@\037\205\353Q\270\036\020@q=\n\327\243p\023@\232\231\231\231\231\2311@{\024\256G\341\3726@q=\n\327\243p\022@H\341z\024\256G<@\037\205\353Q\270\2364@\303\365(\\\217\0023@\315\314\314\314\314L*@\341z\024\256G\341/@\000\000\000\000\000\000\033@)\\\217\302\365h9@)\\\217\302\365\250+@{\024\256G\341\372+@{\024\256G\341\2721@\024\256G\341z\0248@=\n\327\243p\375?@R\270\036\205\353Q @\205\353Q\270\036\305:@\205\353Q\270\036\205 @)\\\217\302\365(\"@\366(\\\217\302\365\027@{\024\256G\341z\016@\315\314\314\314\314\014=@\315\314\314\314\314L!@\232\231\231\231\231\031#@H\341z\024\256G)@\315\314\314\314\314\314\036@\354Q\270\036\205k#@R\270\036\205\353Q\024@\217\302\365(\\\017(@fffff&3@\000\000\000\000\000\000#@\\\217\302\365(\\\032@\024\256G\341z\224/@\217\302\365(\\\217\"@R\270\036\205\353Q$@\\\217\302\365(\334(@ffffff/@\327\243p=\nW-@\217\302\365(\\\217*@\205\353Q\270\036\005#@\303\365(\\\217\302\035@\n\327\243p=J7@\270\036\205\353Q\2702@\256G\341z\024\256*@\232\231\231\231\231\3312@fffff\346*@\256G\341z\024.\"@\037\205\353Q\270\236!@)\\\217\302\365(1@\354Q\270\036\205\3531@\256G\341z\024.-@\232\231\231\231\231Y2@\000\000\000\000\000\000*@\205\353Q\270\036\005(@)\\\217\302\365(!@\327\243p=\nW)@\366(\\\217\302\265;@q=\n\327\243p\'@\327\243p=\n\2270@=\n\327\243p\2756@{\024\256G\341z\030@{\024\256G\341:0@\000\000\000\000\000\000\'@3333330@\205\353Q\270\036\205\021@\244p=\n\327\243\027@=\n\327\243p\275.@H\341z\024\256\307.@\341z\024\256G\3416@\024\256G\341z\024\n@R\270\036\205\353\0212@\270\036\205\353Q8$@)\\\217\302\365\250(@333333 @\000\000\000\000\000\200\"@fffff\346$@=\n\327\243p=\014@\217\302\365(\\\017%@\315\314\314\314\314\314(@\354Q\270\036\205k0@fffff&1@\217\302\365(\\\317>@ffffff\024@\037\205\353Q\270\036\036@\232\231\231\231\231\031/@H\341z\024\256G\032@\n\327\243p=\n#@\205\353Q\270\036\0055@\303\365(\\\217\3022@\341z\024\256Ga#@\217\302\365(\\O3@\315\314\314\314\314L$@\341z\024\256G\341*@\232\231\231\231\231\231$@\270\036\205\353Q\270,@\315\314\314\314\314L+@\341z\024\256Ga;@\354Q\270\036\205\353\023@)\\\217\302\365\250*@R\270\036\205\353\321&@\270\036\205\353Q8$@R\270\036\205\353Q\025@\232\231\231\231\231\231\017@q=\n\327\243\2607@\024\256G\341z\2241@33333s4@\037\205\353Q\270\036%@=\n\327\243p=\027@\256G\341z\024.+@\037\205\353Q\270\236>@H\341z\024\256\3073@=\n\327\243p}B@\232\231\231\231\231\0318@\\\217\302\365(\334 @\024\256G\341z\024*@\\\217\302\365(\\#@\303\365(\\\217\302\035@\n\327\243p=\212!@\n\327\243p=\212,@\341z\024\256G\3413@\232\231\231\231\231\2317@\341z\024\256G\341 @"
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\315\314\314\314\314\314-@ffffff3@\232\231\231\231\231\231+@ffffff6@\000\000\000\000\000\000%@\232\231\231\231\231\0318@\315\314\314\314\314\314\'@\000\000\000\000\000\200;@ffffff:@\000\000\000\000\000\000)@33333\2635@\000\000\000\000\000\0001@\315\314\314\314\314\3141@\232\231\231\231\231\031?@\315\314\314\314\314L8@333333)@333333*@3333336@ffffff1@\000\000\000\000\000\0000@\232\231\231\231\231\2316@\232\231\231\231\231\031=@ffffff5@\315\314\314\314\314\314$@\232\231\231\231\231\231B@ffffff8@\000\000\000\000\000\2005@3333336@3333335@\000\000\000\000\000\000I@3333334@\232\231\231\231\231\0317@\315\314\314\314\314L3@\232\231\231\231\231\0316@\000\000\000\000\000\0009@\000\000\000\000\000\000I@3333337@\232\231\231\231\231\0317@\232\231\231\231\231\031@@\000\000\000\000\000\0007@\000\000\000\000\000\0006@\232\231\231\231\231\2310@\000\000\000\000\000\000B@\000\000\000\000\000\000@@\232\231\231\231\231\0310@\232\231\231\231\231\231@@33333\2632@\232\231\231\231\231\2317@\232\231\231\231\231\231,@3333336@ffffff4@33333\2633@\232\231\231\231\231\231<@\315\314\314\314\314\314,@ffffff5@33333\2638@fffff\3464@\315\314\314\314\314L8@ffffff)@\000\000\000\000\000\0006@fffff\346;@\232\231\231\231\231\231\'@\000\000\000\000\000\000\036@fffff\246@@\000\000\000\000\000\000G@fffff\3462@\315\314\314\314\314L3@\000\000\000\000\000\0009@fffff\3461@\232\231\231\231\231\231 @\232\231\231\231\231\331D@33333\2637@ffffff/@\315\314\314\314\314\314%@fffff\3462@ffffff7@\232\231\231\231\231\2314@\315\314\314\314\314\314*@\232\231\231\231\231YC@\232\231\231\231\231\231%@\315\314\314\314\314L4@\315\314\314\314\314\3146@\000\000\000\000\000\000I@\000\000\000\000\000\0005@ffffff$@\000\000\000\000\000\0006@\000\000\000\000\000\200;@33333\263@@\000\000\000\000\000\2006@333333-@\315\314\314\314\314L4@\000\000\000\000\000\0008@\232\231\231\231\231\231(@3333332@fffff\3466@\315\314\314\314\314\314>@\232\231\231\231\231\0310@\232\231\231\231\231\2317@\000\000\000\000\000\0005@\232\231\231\231\231\2312@\232\231\231\231\231\2314@\000\000\000\000\000\000,@\000\000\000\000\000\2006@\315\314\314\314\314\3148@\000\000\000\000\000\000I@\232\231\231\231\231\231*@333333 @fffff\3465@333333B@\232\231\231\231\231\031>@ffffff)@\000\000\000\000\000\000=@\232\231\231\231\231\231:@\000\000\000\000\000\0006@333333/@\000\000\000\000\000\0007@33333\2630@\000\000\000\000\000\000\'@\232\231\231\231\231\231 @\315\314\314\314\314\3141@\315\314\314\314\314\314\'@\232\231\231\231\231\231+@\232\231\231\231\231\2318@ffffff8@\315\314\314\314\314\3147@\232\231\231\231\231\0319@\000\000\000\000\000\000I@33333\263>@\000\000\000\000\000\000=@fffff\3463@\000\000\000\000\000\0004@3333335@\232\231\231\231\231\0313@\315\314\314\314\314\314B@ffffff<@3333332@\232\231\231\231\231\031<@\232\231\231\231\231\231*@\000\000\000\000\000\0006@\315\314\314\314\314L7@\000\000\000\000\000\2003@333333-@\000\000\000\000\000\000@@\000\000\000\000\000\000I@\000\000\000\000\000\200;@fffff\3467@33333\2635@333333,@\000\000\000\000\000\200>@\315\314\314\314\314L3@\000\000\000\000\000\000<@\315\314\314\314\314\3144@ffffff:@33333\2636@\000\000\000\000\000\000-@\232\231\231\231\231\231:@ffffff<@\232\231\231\231\231\0314@\315\314\314\314\314L>@\232\231\231\231\231\231,@\315\314\314\314\314\3146@33333\2632@3333334@\315\314\314\314\314\3145@\232\231\231\231\231\231\'@3333331@\315\314\314\314\314L3@\315\314\314\314\314\314\034@3333330@\232\231\231\231\231\0312@333333.@\232\231\231\231\231\0318@ffffff2@333333#@\232\231\231\231\231\2313@\315\314\314\314\314\314,@3333335@\000\000\000\000\000\000I@\232\231\231\231\231\2312@\000\000\000\000\000\0009@\000\000\000\000\000\200?@\000\000\000\000\000\0007@fffff\3463@333333/@\315\314\314\314\314\314+@\315\314\314\314\314\3147@\315\314\314\314\314\314=@\232\231\231\231\231\2314@\315\314\314\314\314\314=@fffff\3463@\315\314\314\314\314L2@\000\000\000\000\000\0007@\232\231\231\231\231\031B@\000\000\000\000\000\000?@\000\000\000\000\000\000;@333333(@\232\231\231\231\231\231+@fffff\346E@\315\314\314\314\314\314*@\315\314\314\314\314\314 @\000\000\000\000\000\0009@\315\314\314\314\314L3@\315\314\314\314\314\314.@333333\031@\315\314\314\314\314L0@\000\000\000\000\000@@@\000\000\000\000\000\000I@\000\000\000\000\000\2004@\315\314\314\314\314\014B@\232\231\231\231\231\0317@33333sA@fffff\3463@\000\000\000\000\000\2006@\232\231\231\231\231\031B@fffff\346;@ffffff8@\315\314\314\314\314\314-@fffff\346C@\315\314\314\314\314L2@ffffff8@3333332@\000\000\000\000\000\000I@33333\2635@33333\263A@ffffff5@\232\231\231\231\231\2316@\000\000\000\000\000\000I@fffff&H@\315\314\314\314\314L8@\315\314\314\314\314\3143@\232\231\231\231\231YA@\315\314\314\314\314\214@@\232\231\231\231\231\0317@\000\000\000\000\000\000\024@333333?@\000\000\000\000\000\000%@\232\231\231\231\231\231!@ffffff)@\232\231\231\231\231\231=@\315\314\314\314\314\3143@33333\2634@\315\314\314\314\314L1@\232\231\231\231\231\2313@\000\000\000\000\000\2003@ffffff.@\000\000\000\000\000\000#@\232\231\231\231\231\231\035@fffff\3466@ffffff\026@ffffff4@\232\231\231\231\231\2314@\000\000\000\000\000\2008@\000\000\000\000\000@H@\315\314\314\314\314\314\034@\000\000\000\000\000\2000@3333335@\232\231\231\231\231\0310@ffffff4@33333\263:@\232\231\231\231\231\2318@\232\231\231\231\231\0313@\232\231\231\231\231\031;@\000\000\000\000\000\0006@3333339@ffffff3@\315\314\314\314\314\3147@\315\314\314\314\314\3146@\232\231\231\231\231\0311@ffffff,@\000\000\000\000\000\2001@\232\231\231\231\231\2313@\315\314\314\314\314\3148@33333\2638@\315\314\314\314\314\314*@ffffff.@\232\231\231\231\231\2314@\315\314\314\314\314\314.@33333\2633@\315\314\314\314\314\3143@\232\231\231\231\231\2316@ffffff\'@\000\000\000\000\000\2005@\232\231\231\231\231\0311@333333*@\232\231\231\231\231\0315@\315\314\314\314\314\3145@fffff\3467@3333331@ffffff*@ffffff3@ffffff2@\315\314\314\314\314\314 @\000\000\000\000\000\0009@\315\314\314\314\314\314-@3333330@ffffff3@\232\231\231\231\231\031=@ffffffH@ffffff4@\000\000\000\000\000\0002@\232\231\231\231\231\231)@\000\000\000\000\000\000I@333333+@\000\000\000\000\000\000.@\232\231\231\231\231\0314@\000\000\000\000\000@B@fffff\3464@\000\000\000\000\000\2002@333333@@\000\000\000\000\000\2001@\232\231\231\231\231\0314@ffffff0@\000\000\000\000\000\0003@\315\314\314\314\314\314\034@\000\000\000\000\000\200B@333333<@ffffff3@fffff\3465@\000\000\000\000\000\2008@333333+@3333337@33333\263<@\000\000\000\000\000\000*@\000\000\000\000\000\2004@\000\000\000\000\000\000.@3333333@3333337@33333\2634@\000\000\000\000\000\000!@\000\000\000\000\000\0008@\232\231\231\231\231\0317@\000\000\000\000\000\0004@3333337@ffffff=@\232\231\231\231\231\231?@333333*@\315\314\314\314\314\3142@\000\000\000\000\000\000.@\000\000\000\000\000\2002@\315\314\314\314\314L9@\000\000\000\000\000\2008@ffffff$@\000\000\000\000\000\200;@\000\000\000\000\000\000\034@\232\231\231\231\231\231*@ffffff7@\000\000\000\000\000\000-@fffff\3462@\000\000\000\000\000\000I@\000\000\000\000\000\0005@\315\314\314\314\314L4@\000\000\000\000\000\000-@\232\231\231\231\231\231&@3333336@"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/ToFloat"
  op: "Cast"
  input: "Const_6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/B/ToFloat"
  op: "Cast"
  input: "Const_11"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/B/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/ToFloat"
  op: "Cast"
  input: "Const_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/ToFloat"
  op: "Cast"
  input: "Const"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/ToFloat"
  op: "Cast"
  input: "Const_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/ToFloat"
  op: "Cast"
  input: "Const_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/ToFloat"
  op: "Cast"
  input: "Const_12"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/ToFloat"
  op: "Cast"
  input: "Const_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/ToFloat"
  op: "Cast"
  input: "Const_10"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/ToFloat"
  op: "Cast"
  input: "Const_8"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RM/ToFloat"
  op: "Cast"
  input: "Const_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RM/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/ToFloat"
  op: "Cast"
  input: "Const_9"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/ToFloat"
  op: "Cast"
  input: "Const_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  attr {
    key: "N"
    value {
      i: 13
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2791452705860138
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2791452705860138
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Cast"
  op: "Cast"
  input: "zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction/Mean"
  op: "Mean"
  input: "zero_fraction/Cast"
  input: "zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  input: "zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0_activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_0_activation/tag"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Cast"
  op: "Cast"
  input: "zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_1/Mean"
  op: "Mean"
  input: "zero_fraction_1/Cast"
  input: "zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  input: "zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1_activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_1_activation/tag"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2156655490398407
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2156655490398407
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights"
  op: "Identity"
  input: "dnn/logits/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/biases"
  op: "Identity"
  input: "dnn/logits/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "zero_fraction_2/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/logits/BiasAdd"
  input: "zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Cast"
  op: "Cast"
  input: "zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_2/Mean"
  op: "Mean"
  input: "zero_fraction_2/Cast"
  input: "zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/logits_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/logits_fraction_of_zero_values/tags"
  input: "zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits_activation"
      }
    }
  }
}
node {
  name: "dnn/logits_activation"
  op: "HistogramSummary"
  input: "dnn/logits_activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "predictions/scores"
  op: "Squeeze"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_13"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss/sub"
  op: "Sub"
  input: "dnn/logits/BiasAdd"
  input: "training_loss/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss"
  op: "Square"
  input: "training_loss/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_loss"
  op: "Mean"
  input: "training_loss/mean_squared_loss"
  input: "training_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_loss/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "training_loss/ScalarSummary"
  op: "ScalarSummary"
  input: "training_loss/ScalarSummary/tags"
  input: "training_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/learning_rate/Assign"
  op: "Assign"
  input: "dnn/learning_rate"
  input: "dnn/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/learning_rate/read"
  op: "Identity"
  input: "dnn/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Fill"
  op: "Fill"
  input: "train_op/dnn/gradients/Shape"
  input: "train_op/dnn/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Reshape"
  op: "Reshape"
  input: "train_op/dnn/gradients/Fill"
  input: "train_op/dnn/gradients/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Tile"
  op: "Tile"
  input: "train_op/dnn/gradients/training_loss_grad/Reshape"
  input: "train_op/dnn/gradients/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Prod"
  op: "Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Shape"
  input: "train_op/dnn/gradients/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Prod_1"
  op: "Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Shape_1"
  input: "train_op/dnn/gradients/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Maximum"
  op: "Maximum"
  input: "train_op/dnn/gradients/training_loss_grad/Prod_1"
  input: "train_op/dnn/gradients/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/floordiv"
  op: "FloorDiv"
  input: "train_op/dnn/gradients/training_loss_grad/Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Cast"
  op: "Cast"
  input: "train_op/dnn/gradients/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/truediv"
  op: "RealDiv"
  input: "train_op/dnn/gradients/training_loss_grad/Tile"
  input: "train_op/dnn/gradients/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul/x"
  op: "Const"
  input: "^train_op/dnn/gradients/training_loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul"
  op: "Mul"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul/x"
  input: "training_loss/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "train_op/dnn/gradients/training_loss_grad/truediv"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul_1"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul_1"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Neg"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "train_op/dnn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "train_op/dnn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "train_op/dnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/weights/part_0"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/biases/part_0"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update"
  op: "NoOp"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
}
node {
  name: "train_op/dnn/train/value"
  op: "Const"
  input: "^train_op/dnn/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train_op/dnn/train"
  op: "AssignAdd"
  input: "global_step"
  input: "train_op/dnn/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/control_dependency"
  op: "Identity"
  input: "training_loss"
  input: "^train_op/dnn/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ExpandDims"
  op: "ExpandDims"
  input: "predictions/scores"
  input: "metrics/mean_squared_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_13"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/sub"
  op: "Sub"
  input: "metrics/mean_squared_loss/ExpandDims"
  input: "metrics/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss"
  op: "Square"
  input: "metrics/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/eval_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/eval_loss"
  op: "Mean"
  input: "metrics/mean_squared_loss"
  input: "metrics/eval_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/total/Assign"
  op: "Assign"
  input: "metrics/mean/total"
  input: "metrics/mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/total/read"
  op: "Identity"
  input: "metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/count/Assign"
  op: "Assign"
  input: "metrics/mean/count"
  input: "metrics/mean/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/count/read"
  op: "Identity"
  input: "metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean/ToFloat_1"
  op: "Cast"
  input: "metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Sum"
  op: "Sum"
  input: "metrics/eval_loss"
  input: "metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "metrics/mean/total"
  input: "metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "metrics/mean/count"
  input: "metrics/mean/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater"
  op: "Greater"
  input: "metrics/mean/count/read"
  input: "metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv"
  op: "RealDiv"
  input: "metrics/mean/total/read"
  input: "metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/value"
  op: "Select"
  input: "metrics/mean/Greater"
  input: "metrics/mean/truediv"
  input: "metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1"
  op: "Greater"
  input: "metrics/mean/AssignAdd_1"
  input: "metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv_1"
  op: "RealDiv"
  input: "metrics/mean/AssignAdd"
  input: "metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/update_op"
  op: "Select"
  input: "metrics/mean/Greater_1"
  input: "metrics/mean/truediv_1"
  input: "metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_0/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Assign"
  input: "^dnn/logits/weights/part_0/Assign"
  input: "^dnn/logits/biases/part_0/Assign"
  input: "^dnn/learning_rate/Assign"
  input: "^dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/biases/part_0/Adagrad/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 16
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/learning_rate"
        string_val: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/dnn/logits/biases/part_0/Adagrad"
        string_val: "metrics/mean/total"
        string_val: "metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/learning_rate"
        string_val: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/dnn/logits/biases/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 14
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 14
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^metrics/mean/total/Assign"
  input: "^metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/hiddenlayer_0_fraction_of_zero_values"
  input: "dnn/hiddenlayer_0_activation"
  input: "dnn/hiddenlayer_1_fraction_of_zero_values"
  input: "dnn/hiddenlayer_1_activation"
  input: "dnn/logits_fraction_of_zero_values"
  input: "dnn/logits_activation"
  input: "training_loss/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_b3d11a5a0736497a88ff2455cbfb7c82/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/biases/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_0/weights/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/biases/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/hiddenlayer_1/weights/t_0/Adagrad"
        string_val: "dnn/learning_rate"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/biases/t_0/Adagrad"
        string_val: "dnn/logits/weights"
        string_val: "dnn/logits/weights/t_0/Adagrad"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "128 0,128"
        string_val: "128 0,128"
        string_val: "64 128 0,64:0,128"
        string_val: "64 128 0,64:0,128"
        string_val: ""
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "128 1 0,128:0,1"
        string_val: "128 1 0,128:0,1"
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  input: "dnn/learning_rate"
  input: "dnn/logits/biases/part_0/read"
  input: "dnn/dnn/logits/biases/part_0/Adagrad/read"
  input: "dnn/logits/weights/part_0/read"
  input: "dnn/dnn/logits/weights/part_0/Adagrad/read"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "13 64 0,13:0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "13 64 0,13:0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 128 0,64:0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 128 0,64:0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dnn/learning_rate"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 1 0,128:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 1 0,128:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 21
}
