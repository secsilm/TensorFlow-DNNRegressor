node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\344,\354i\207\277\320?\210c]\334F\003\345?U\336\216pZ\360\001@\313\370\367\031\027\016\274?\n\334\272\233\247:\274?\255n\365\234\364\276\241?\377\004\027+j\260\021@1%\222\350e4\033@\226>tA}\213\r@\223W\347\030\220\275\216?\336\223\207\205Z\223\r@\1770\360\334{\270\314?Dn\206\033\360\371\261?\260U\202\305\341\254\022@\3377\276\366\314\222\240?\021p\010Uj\226\022@0*\251\023\320d8@\207\242@\237\310\223\363?\260U\202\305\341\314\313?\221,`\002\267\356\276?\3377\276\366\314\222\003@\303\330B\220\203\022\276?\201[w\363T\'\020@\320\263Y\365\271Z.@\202sF\224\366\346\'@[\323\274\343\024\r6@\350\301\335Y\273\355\312?Qf\203L2r\206?\354\027\354\206m\213\262?\200\267@\202\342\'\'@\234\242#\271\374\207\322?O\314z1\224\023\344?\t\212\037c\356\372P@->\005\300x\006\362?A\361c\314]\013+@I\272f\362\3156\267?\376e\367\344a\221I@\347\000\301\034=~\257?\253\347\244\367\215\257\235?l\317,\tPS\303?\371\367\031\027\016\204\264?\346\221?\030x\356\305?i\000o\201\004\305\303?\355\273\"\370\337J\226?\027\267\321\000\336\202\002@}\263\315\215\351\t\313?333333\354?*\221D/\243\230\003@\003CV\267zN\262?\016\2760\231*\030\351?\246\325\220\270\307r#@\217\344\362\037\322\3170@\366]\021\374o%\253?M\241\363\032\273D\265?gDio\360\2457@\215\013\007B\262\200\251?\234\341\006|~\250\"@\264Y\365\271\332\252,@\264Y\365\271\332\252,@4\235\235\014\216\222\031@#\370\337Jvl\264?\327\206\212q\376&\344?\315;N\321\221\\\326?_\014\345D\273\n\305?\366\356\217\367\252\225\356??W[\261\277,&@_)\313\020\307\232)@g\270\001\237\037F\334?\316\337\204B\004\034\242?\031\347oB!\002\350?G\254\305\247\000\310\"@u\002\232\010\033\236\322?\217\307\014T\306\277\325?\210\205Z\323\274c\020@2U0*\251\323+@\233\217kC\3058\237?\345\355\010\247\005\177 @\262KTo\rl\323?\314bb\363qm\260?V}\256\266b\177\345?\277`7l[\224\231?\212\216\344\362\037R&@+\030\225\324\th\306?\t3m\377\312J\243?(a\246\355_Y\301?A\016J\230i\373\247?1\010\254\034Z\304\026@b\241\3264\357x,@\010\346\350\361{\233\316?P6\345\n\357\362\002@\253>W[\261\277/@d\222\221\263\260\'\032@)\\\217\302\365(\264?;\215\264T\336\216\310?-x\321W\220f\314?{\332\341\257\311\032\265?\220\332\304\311\375\016\245?\214\271k\t\371\240\327?\350\331\254\372\\m\265?Yni5$\356\241?|\270\344\270S:\320?\372~j\274t\223.@\267b\177\331=\331\033@A\237\310\223\244k\246?\017bg\n\235\327\300?\212\223\373\035\212\002\311?\203i\030>\"\246\324?\010wg\355\266\013\265?\035=~o\323\237\265?\210\235)t^c\317?u\310\315p\003>\277?\253\t\242\356\003\220\252?\223W\347\030\220\275\216?\346\005\330G\247\256\254?B>\350\331\254\372\254?\342\314\257\346\0001#@}\320\263Y\365\031,@\343\252\262\357\212\340\237?\177\373:p\316\210\322?2ZGU\023D\275?\351\361{\233\376l\r@\205|\320\263Y\365\301?\010=\233U\237\253\343?\204*5{\240\245#@\rq\254\213\333H\027@\266\370\024\000\343\031\300?\323\366\257\2544)\311?q=\n\327\243p\235?f1\261\371\2706\264?\375\274\251H\2051\001@\237q\341@H\026\363?\2201w-!\037\224?\321W\220f,\232\266?h\005\206\254n\365\264??\035\217\031\250\214\257?\252\202QI\235\200\302?<\203\206\376\t.\266?x\234\242#\271\324B@j\207\277&k\324\325?#gaO;\374\245?\025\221a\025od\332?\r\032\372\'\270X\311?kH\334c\351C\247?\232\231\231\231\231\231\271?\rq\254\213\333\2306@]\376C\372\355\2333@Hm\342\344~\207\302?t$\227\377\220~(@\314\356\311\303B\255\261?Z\273\355Bs\235\246?\345\355\010\247\005/\306?#J{\203/\314\016@yX\2505\315\0139@\r\340-\220\240\370\241?/n\243\001\274\0254@\300\004n\335\315S\215?\217\337\333\364g?\320?\205\261\205 \007%\254?\325\347j+\366\227\255?\341@H\0260\201\253?Uj\366@+0\264?MJA\267\2274\246?;\001M\204\rO\t@\331=yX\250\0252@k\324C4\272\343\020@k`\253\004\213\303\325?\344f\270\001\237?\023@c\321tv2\270\363?\371\240g\263\352s\305?\236\357\247\306Kw$@D\372\355\353\3009\347?\201&\302\206\247W\272?\3578EGr\371\317?\241J\315\036h\005\246?\240\211\260\341\351\225\320?\312\303B\255i\336\301?\335^\322\030\255c\r@\314@e\374\373\214\337?[\261\277\354\236<\254?\257Z\231\360K\375\264?;\215\264T\336\356#@\'\302\206\247W\312\330?\311\253s\014\310^\257?\215\234\205=\355\360\367?\001\336\002\t\212\1772@\020@j\023\'\367\233?\321W\220f,\232\341?\354/\273\'\017\013\225?\206U\274\221y\344\321?\306\341\314\257\346\000\261?\304\010\341\321\306\021\273?\214\333h\000o\201\372?\322\373\306\327\236Y\242?\351&1\010\254\034\302?\312\246\\\341].\242?n4\200\267@\202\242?\213\246\263\223\301Q\242?\201[w\363T\007\364?\273~\301n\330\266\300?\367\314\222\00055\366?,e\031\342X7&@M\370\245~\336\024\000@\270\257\003\347\214(\265?I\272f\362\3156\325?\'\240\211\260\341\351\305?R~R\355\323\361\270?\366]\021\374o%\323?\350\237\340bE\r\302?\324+e\031\342X\247?\273\325s\322\373&\031@\200\202\213\0255\230\266?\341\013\223\251\202\221\n@\344\024\035\311\345\037$@\313\271\024W\225\235\035@w\020;S\350<\006@\000:\314\227\027`\364?\311v\276\237\032/\341?\"\303*\336\310<\357?\003[%X\034\316\371?\316\245\270\252\354\273\242?\340\333\364g?R\304??RD\206U\274\350?d#\020\257\353w\035@\273\270\215\006\360v\"@\177\274W\255L\370\037@\303G\304\224H\002\037@c\234\277\t\205\010\260?\225+\274\313E|\365?\225\361\3573.\034\310?9b->\005\300\304?\266\333.4\327i\310?\200\267@\202\342\247<@Q\024\350\023y\222\224?Dio\360\205\331#@\002Hm\342\344~\267?kH\334c\351C\353?\3230|DL\211\244?\347\030\220\275\336\375\271?R\325\004Q\367\001\270?$EdX\305\033\325?\232%\001jj\331\212?\267E\231\r2\311\314?q\254\213\333h\340,@\200`\216\036\277\267\251?J\265O\307c\006\252?\034\360\371a\204\360\260?S\313\326\372\"\241\335?,H3\026Mg\313?\007_\230L\025,\025@N\356w(\n\364\261?\331Z_$\264\345\352?\2201w-!\237\366?\215\356 v\246\320\271?\262\235\357\247\306K\341?4\277\232\003\004S\026@:z\374\336\246?\303?\327\335<\325!\027\034@\000\343\0314\364O\300?\0054\0216<\3158@\300\347\207\021\302\243\255?-!\037\364lV\275?\027\361\235\230\365b\300?\313\204_\352\347M\370?2\311\310Y\330\323\324?\202\220,`\002\267\266?\034_{fI\200\345?\264\223\301Q\362\352\326?_\007\316\031Q\332\213?\231d\344,\354i\367?\r\303G\304\224H\341?\276\331\346\306\364\204\245?#\241-\347R|\023@o*Ral!\314?\241\271N#-\325\026@\361\272~\301n\330\246?\3745Y\243\036\242\261?\205\0108\204*5\263?{1\224\023\355*\022@\024\355*\244\374\244\212?\177\244\210\014\253x\307?\337\375\361^\2652\241?vq\033\r\340\3351@g\270\001\237\037F\250?M\363\216St$\351?\375M(D\300!\244?H\277}\0358g\002@\267\234KqU\331\341?\322\000\336\002\t\n\360?\313\326\372\"\241-\247?\2343\242\2647\370\242?F\261\334\322jH\214?H\371I\265O\007\003@\363v\204\323\202\027\341?\367\257\2544)e\021@,e\031\342X\2674@\004\377[\311\216\215\260?\231\323e1\261\371\300?!\223\214\234\205=\321?d#\020\257\353\027\332?\201&\302\206\247W\262?-\262\235\357\247\306\253?\314]K\310\007-C@?\035\217\031\250\214\014@\036\376\232\254Q\017\261?\004s\364\370\275M\267?aO;\37459\022@\224\301Q\362\352\034\303?\034\010\311\002&\260\036@\273\'\017\013\265\306\031@w\241\271N#-\321?W`\310\352V\317\301?\325\004Q\367\001H\315?\224j\237\216\307\014\330?\310$#gaO\303?1\261\371\2706T\300?tA}\313\234\316\024@\001\366\321\251+\337\005@\321\226s)\256*\273?\270\222\035\033\201x\265?\323\244\024t{I\273?Ve\337\025\301_\"@\017\326\3779\314\027\362?g\233\033\323\023\226\270?\326\305m4\200\337F@1\010\254\034Zd\007@\204d\001\023\270u\267?\345\3259\006d\257\267?[\353\213\204\266\234\327?\241\241\177\202\213\025\323?\376\324x\351&1\300?\257\261KTo\r\254?\004\377[\311\216\215\300?0L\246\nF\325#@S\256\360.\027\361\305?\372\263\037)\"\303\306?k\324C4\272\303\025@\347\251\016\271\031n\336?\024\355*\244\374\244\340?\003\354\243SW>\307?\212Y/\206r\242\305?\336Y\273\355Bs\275?\031\377>\343\302\201\342?\367\344a\241\3264\267?\347\343\332P1\316\267?\004\342u\375\202\335\260?\332\003\255\300\220\225!@\373\221\"2\254\342\333?\231\r2\311\310Y\270?e\215z\210F\367!@b\204\360h\343\010\003@_$\264\345\\\252\026@\333m\027\232\3534\222?V\202\305\341\314\257\351?\326\342S\000\214g\300?"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\315\314\314\314\314\314#@\303\365(\\\217\302\017@\024\256G\341z\2243@\\\217\302\365(\334\'@\205\353Q\270\036\205\024@=\n\327\243p=\030@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\\\217\302\365(\\\363?\232\231\231\231\231\0312@\341z\024\256Ga#@333333\020@\232\231\231\231\231\0312@q=\n\327\243p\001@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\024\256G\341z\2243@\256G\341z\024.%@\037\205\353Q\270\036\007@\024\256G\341z\2243@{\024\256G\341z\037@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\244p=\n\327\243\n@\000\000\000\000\000\000\002@\n\327\243p=\n\373?\232\231\231\231\231\0312@\256G\341z\024.%@H\341z\024\256G @\232\231\231\231\231\0312@\024\256G\341z\2243@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@\232\231\231\231\231\0312@\303\365(\\\217\302\024@\000\000\000\000\000\000\364?\205\353Q\270\036\005$@\327\243p=\n\327\027@\205\353Q\270\036\005$@\205\353Q\270\036\205\024@=\n\327\243p=\000@\024\256G\341z\2243@{\024\256G\341z\037@\244p=\n\327\3435@\024\256G\341z\2243@\366(\\\217\302\365\021@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@H\341z\024\256G\013@\256G\341z\024\256\003@\232\231\231\231\231\0312@\217\302\365(\\\217\026@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\244p=\n\327\243\031@H\341z\024\256G @\315\314\314\314\314\314#@q=\n\327\243p\027@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@\315\314\314\314\314\314\030@\\\217\302\365(\\\030@H\341z\024\256G @\232\231\231\231\231\0312@\244p=\n\327\3435@q=\n\327\243p\027@\024\256G\341z\2243@\232\231\231\231\231\0312@=\n\327\243p=\016@\232\231\231\231\231\0312@\205\353Q\270\036\205\035@\327\243p=\n\327\027@\232\231\231\231\231\0312@=\n\327\243p=\376?\232\231\231\231\231\0312@\327\243p=\n\327\027@R\270\036\205\353Q\370?H\341z\024\256G\030@H\341z\024\256G\013@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\341z\024\256Ga#@\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@\205\353Q\270\036\205\035@\327\243p=\n\327\033@\270\036\205\353Q\270\023@q=\n\327\243p\023@\315\314\314\314\314\314#@\205\353Q\270\036\205\013@\315\314\314\314\314\314\023@\315\314\314\314\314\314#@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\366(\\\217\302\365\n@\205\353Q\270\036\005$@\037\205\353Q\270\236%@\244p=\n\327\3435@q=\n\327\243p\027@333333\020@\315\314\314\314\314\314#@\037\205\353Q\270\036\007@\366(\\\217\302\365\021@\024\256G\341z\024\000@\256G\341z\024\256\003@H\341z\024\256G\013@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\217\302\365(\\\217\021@\341z\024\256Ga#@\037\205\353Q\270\036!@\232\231\231\231\231\0312@q=\n\327\243p\027@\315\314\314\314\314\314\030@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\205\353Q\270\036\205\013@q=\n\327\243p\027@\024\256G\341z\024.@)\\\217\302\365\250)@\024\256G\341z\2243@\244p=\n\327\3435@)\\\217\302\365(\374?{\024\256G\341z\037@\037\205\353Q\270\036\007@\217\302\365(\\\217\021@{\024\256G\341z\037@\205\353Q\270\036\205\013@\232\231\231\231\231\0312@\205\353Q\270\036\205\035@\024\256G\341z\024.@\315\314\314\314\314\314\030@\256G\341z\024.%@\354Q\270\036\205\353\t@\\\217\302\365(\\\030@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\205\353Q\270\036\005$@\232\231\231\231\231\0312@q=\n\327\243p\001@\354Q\270\036\205\353\001@\341z\024\256Ga#@\232\231\231\231\231\0312@\232\231\231\231\231\0312@q=\n\327\243p\005@\232\231\231\231\231\0312@\037\205\353Q\270\036\365?\244p=\n\327\243\033@\303\365(\\\217\302\024@\256G\341z\024\256\003@\327\243p=\n\327+@\315\314\314\314\314\314\023@\217\302\365(\\\217\026@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\244p=\n\327\3435@\232\231\231\231\231\0312@H\341z\024\256G @\205\353Q\270\036\205\035@\232\231\231\231\231\0312@H\341z\024\256G @\270\036\205\353Q\270\023@\244p=\n\327\3435@\217\302\365(\\\217\376?\244p=\n\327\3435@\037\205\353Q\270\036!@\232\231\231\231\231\0312@\315\314\314\314\314\314#@q=\n\327\243p\001@\327\243p=\n\327+@\232\231\231\231\231\0312@fffff\2469@\244p=\n\327\243\031@\024\256G\341z\2243@\232\231\231\231\231\0312@H\341z\024\256G\034@\303\365(\\\217\302\017@\256G\341z\024\256\347?\341z\024\256Ga#@333333\020@=\n\327\243p\275;@\024\256G\341z\2243@\366(\\\217\302\365\n@\244p=\n\327\243\033@q=\n\327\243p\023@\315\314\314\314\314\314\023@\244p=\n\327\243\n@H\341z\024\256G @\205\353Q\270\036\005$@H\341z\024\256G @\232\231\231\231\231\0312@\024\256G\341z\2243@\327\243p=\n\327+@\315\314\314\314\314\314\030@\037\205\353Q\270\036!@\327\243p=\n\327\027@\327\243p=\n\327\033@\327\243p=\n\327+@H\341z\024\256\307+@\232\231\231\231\231\0312@\037\205\353Q\270\236%@\024\256G\341z\2243@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\024\256G\341z\2243@\024\256G\341z\2243@\315\314\314\314\314\314\030@\244p=\n\327\3435@H\341z\024\256G @q=\n\327\243p\023@\037\205\353Q\270\236%@H\341z\024\256G @\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\\\217\302\365(\334\'@\024\256G\341z\2243@\244p=\n\327\243\033@\327\243p=\n\327\033@q=\n\327\243p\027@\232\231\231\231\231\0312@q=\n\327\243p\005@\232\231\231\231\231\0312@333333\020@H\341z\024\256G @R\270\036\205\353Q\370?)\\\217\302\365\250)@{\024\256G\341z\037@\244p=\n\327\3435@\205\353Q\270\036\205\363?{\024\256G\341z\037@\232\231\231\231\231\0312@=\n\327\243p=\030@\303\365(\\\217\302\024@\354Q\270\036\205\353\t@\315\314\314\314\314\314\030@q=\n\327\243p\027@\232\231\231\231\231\0312@H\341z\024\256\307+@H\341z\024\256G @\024\256G\341z\2243@\205\353Q\270\036\005$@\303\365(\\\217\302\017@\232\231\231\231\231\0312@fffff\2469@\232\231\231\231\231\0312@\244p=\n\327\243\033@\232\231\231\231\231\0312@H\341z\024\256G\030@\327\243p=\n\327\033@\037\205\353Q\270\036!@\024\256G\341z\2243@\244p=\n\327\3435@\217\302\365(\\\217\026@H\341z\024\256G @\315\314\314\314\314\314\030@\000\000\000\000\000\000\020@\024\256G\341z\2243@\303\365(\\\217\302\017@\024\256G\341z\024.@\232\231\231\231\231\0312@\244p=\n\327\243\033@\232\231\231\231\231\0312@q=\n\327\243p\023@\256G\341z\024\256\003@q=\n\327\243p\001@\232\231\231\231\231\0312@R\270\036\205\353Q\370?=\n\327\243p\275;@\232\231\231\231\231\231\007@\232\231\231\231\231\0312@\\\217\302\365(\334\'@\303\365(\\\217\302\017@H\341z\024\256G\013@\024\256G\341z\2243@\244p=\n\327\3435@H\341z\024\256G @\\\217\302\365(\334\'@\244p=\n\327\243\n@q=\n\327\243p\335?\232\231\231\231\231\0312@\303\365(\\\217\302\017@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\354Q\270\036\205\353\001@\037\205\353Q\270\036!@\315\314\314\314\314\314#@\315\314\314\314\314\314\030@fffff\2469@333333\020@\232\231\231\231\231\0312@\232\231\231\231\231\0312@333333\020@\256G\341z\024\256\003@\232\231\231\231\231\0312@\205\353Q\270\036\205\024@\232\231\231\231\231\0312@\232\231\231\231\231\0312@\341z\024\256Ga#@333333\020@\037\205\353Q\270\036!@\256G\341z\024.%@=\n\327\243p\275;@\270\036\205\353Q\270\023@\232\231\231\231\231\0312@\024\256G\341z\2243@\270\036\205\353Q\270\023@)\\\217\302\365\250)@\217\302\365(\\\217\376?\232\231\231\231\231\0312@H\341z\024\256G @\244p=\n\327\243\031@\232\231\231\231\231\0312@\024\256G\341z\2243@\037\205\353Q\270\236%@\270\036\205\353Q\270\023@q=\n\327\243p\027@\315\314\314\314\314\314\030@\205\353Q\270\036\205\024@q=\n\327\243p\001@\327\243p=\n\327+@\232\231\231\231\231\0312@\244p=\n\327\243\033@\341z\024\256Ga#@\232\231\231\231\231\0312@\315\314\314\314\314\314#@\303\365(\\\217\302\017@\205\353Q\270\036\205\035@fffff\2469@\037\205\353Q\270\036\007@\303\365(\\\217\302\017@\327\243p=\n\327\033@fffff\2469@\256G\341z\024\256\003@\232\231\231\231\231\0312@\256G\341z\024.%@)\\\217\302\365\250)@\232\231\231\231\231\0312@\024\256G\341z\2243@\232\231\231\231\231\0312@\205\353Q\270\036\205\367?H\341z\024\256G @H\341z\024\256G\030@"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\234\304 \260rh\341?Nb\020X9\264\344?\\\217\302\365(\\\343?\274t\223\030\004V\342?\313\241E\266\363\375\334?\021\307\272\270\215\006\334?\343\245\233\304 \260\342?7\211A`\345\320\346?7\211A`\345\320\346?D\213l\347\373\251\331?`\345\320\"\333\371\346?\270\036\205\353Q\270\342?R\270\036\205\353Q\340?7\211A`\345\320\346?\035Zd;\337O\335?\331\316\367S\343\245\343?ffffff\346?\\\217\302\365(\\\343?\262\235\357\247\306K\337?{\024\256G\341z\334?\254\034Zd;\337\353?\370S\343\245\233\304\340?\240\032/\335$\006\341?\256G\341z\024\256\347?J\014\002+\207\026\345?\256G\341z\024\256\347?c\177\331=yX\334?L7\211A`\345\330?\347\373\251\361\322M\332?ffffff\346?\262\235\357\247\306K\337?\236\357\247\306K7\341?\223\030\004V\016-\346?\254\034Zd;\337\353?\376\324x\351&1\344?+\207\026\331\316\367\333?\264\310v\276\237\032\343?{\024\256G\341z\340?\333\371~j\274t\333?\033/\335$\006\201\341?V\016-\262\235\357\337?\033/\335$\006\201\341?\313\241E\266\363\375\334?\217\302\365(\\\217\332?\\\217\302\365(\\\343?\370S\343\245\233\304\340?+\207\026\331\316\367\343?\\\217\302\365(\\\343?#\333\371~j\274\334?\236\357\247\306K7\341?\256G\341z\024\256\347?ffffff\346?\262\235\357\247\306K\337?\010\254\034Zd;\337?F\266\363\375\324x\345?\177j\274t\223\030\334?7\211A`\345\320\346?\331\316\367S\343\245\343?ffffff\346?\343\245\233\304 \260\342?\317\367S\343\245\233\334?\236\357\247\306K7\341?\234\304 \260rh\341?/\335$\006\201\225\333?\236\357\247\306K7\341?`\345\320\"\333\371\346?\256G\341z\024\256\347?T\343\245\233\304 \340?\203\300\312\241E\266\333?\236\357\247\306K7\341?\256G\341z\024\256\347?+\207\026\331\316\367\343?/\335$\006\201\225\333?\254\034Zd;\337\353?7\211A`\345\320\346?`\345\320\"\333\371\336?7\211A`\345\320\346?Zd;\337O\215\337?V\016-\262\235\357\337?\256G\341z\024\256\347?\372~j\274t\223\340?\256G\341z\024\256\347?V\016-\262\235\357\337?B`\345\320\"\333\331?\223\030\004V\016-\332?\262\235\357\247\306K\337?\016-\262\235\357\247\342?\223\030\004V\016-\346?\270\036\205\353Q\270\342?\254\034Zd;\337\353?F\266\363\375\324x\345?\376\324x\351&1\344?+\207\026\331\316\367\333?Zd;\337O\215\337?\031\004V\016-\262\335?1\010\254\034Zd\333?\335$\006\201\225C\333?\234\304 \260rh\341?+\207\026\331\316\367\333?\347\373\251\361\322M\332?\234\304 \260rh\341?F\266\363\375\324x\345?ffffff\346?F\266\363\375\324x\331?\033/\335$\006\201\341?;\337O\215\227n\332?+\207\026\331\316\367\343?/\335$\006\201\225\333?R\270\036\205\353Q\340?\234\304 \260rh\341?{\024\256G\341z\334?#\333\371~j\274\334?\327\243p=\n\327\333?\010\254\034Zd;\337?\262\235\357\247\306K\337?\223\030\004V\016-\346?\264\310v\276\237\032\343?}?5^\272I\334?\270\036\205\353Q\270\342?\244p=\n\327\243\340?\244p=\n\327\243\350?/\335$\006\201\225\333?\323Mb\020X9\340?F\266\363\375\324x\345?7\211A`\345\320\346?+\207\026\331\316\367\333?/\335$\006\201\225\333?\031\004V\016-\262\335?+\207\026\331\316\367\333?\254\034Zd;\337\353?+\207\026\331\316\367\343?\244p=\n\327\243\330?\370S\343\245\233\304\340?{\024\256G\341z\334?}?5^\272I\334?\370S\343\245\233\304\340?+\207\026\331\316\367\333?\356|?5^\272\345?Zd;\337O\215\337?\031\004V\016-\262\335?T\343\245\233\304 \340?\262\235\357\247\306K\337?q=\n\327\243p\335?\203\300\312\241E\266\333?ffffff\346?F\266\363\375\324x\345?\033/\335$\006\201\341?\343\245\233\304 \260\342?\035Zd;\337O\335?\232\231\231\231\231\231\331?\270\036\205\353Q\270\342?\244p=\n\327\243\350?\223\030\004V\016-\346?\376e\367\344a\241\332?ffffff\346?\347\373\251\361\322M\332?y\351&1\010\254\334?{\024\256G\341z\340?\010\254\034Zd;\337?+\207\026\331\316\367\333?\347\373\251\361\322M\332?\177j\274t\223\030\334?\366(\\\217\302\365\344?\356|?5^\272\345?\244p=\n\327\243\350?+\207\026\331\316\367\343?7\211A`\345\320\346?\236\357\247\306K7\341?Zd;\337O\215\337?\331\316\367S\343\245\343?\236\357\247\306K7\341?1\010\254\034Zd\333?+\207\026\331\316\367\343?;\337O\215\227n\332?+\207\026\331\316\367\343?\244p=\n\327\243\340?\016-\262\235\357\247\342?\234\304 \260rh\341?h\221\355|?5\336?+\207\026\331\316\367\333?\256G\341z\024\256\347?d;\337O\215\227\342?\317\367S\343\245\233\334?\254\034Zd;\337\353?\307K7\211A`\345?j\274t\223\030\004\336?Nb\020X9\264\344?=\n\327\243p=\332?\270\036\205\353Q\270\342?R\270\036\205\353Q\340?\260rh\221\355|\343?\254\034Zd;\337\353?F\266\363\375\324x\331?y\351&1\010\254\334?\335$\006\201\225C\333?\347\373\251\361\322M\332?c\177\331=yX\334?\236\357\247\306K7\341?\033/\335$\006\201\341?\236\357\247\306K7\341?\307K7\211A`\345?\\\217\302\365(\\\343?+\207\026\331\316\367\333?\323Mb\020X9\340?\244p=\n\327\243\340?V\016-\262\235\357\337?\031\004V\016-\262\335?+\207\026\331\316\367\333?\232\231\231\231\231\231\341?\256G\341z\024\256\347?;\337O\215\227n\332?\254\034Zd;\337\353?\343\245\233\304 \260\342?\264\310v\276\237\032\343?\254\034Zd;\337\353?\\\217\302\365(\\\343?T\343\245\233\304 \340?+\207\026\331\316\367\343?\236\357\247\306K7\341?\335$\006\201\225C\333?;\337O\215\227n\332?\236\357\247\306K7\341?\356|?5^\272\345?\376\324x\351&1\344?ffffff\346?7\211A`\345\320\346?\274t\223\030\004V\342?\\\217\302\365(\\\343?y\351&1\010\254\334?\031\004V\016-\262\335?/\335$\006\201\225\333?\264\310v\276\237\032\343?\376e\367\344a\241\332?\256G\341z\024\256\347?R\270\036\205\353Q\340?\236\357\247\306K7\341?B`\345\320\"\333\331?+\207\026\331\316\367\333?\370S\343\245\233\304\340?+\207\026\331\316\367\343?\230n\022\203\300\312\331?\370S\343\245\233\304\340?\264\310v\276\237\032\343?\021\307\272\270\215\006\334?{\024\256G\341z\340?q=\n\327\243p\335?T\343\245\233\304 \340?/\335$\006\201\225\333?ffffff\346?\232\231\231\231\231\231\341?\236\357\247\306K7\341?\254\034Zd;\337\353?\033/\335$\006\201\341?ffffff\342?7\211A`\345\320\346?d;\337O\215\227\342?`\345\320\"\333\371\346?y\351&1\010\254\334?\223\030\004V\016-\346?\223\030\004V\016-\332?\031\004V\016-\262\335?\244p=\n\327\243\340?\\\217\302\365(\\\343?+\207\026\331\316\367\343?\177j\274t\223\030\334?\236\357\247\306K7\341?\323Mb\020X9\340?=\n\327\243p=\332?\\\217\302\365(\\\343?Nb\020X9\264\344?\031\004V\016-\262\335?\331\316\367S\343\245\343?y\351&1\010\254\334?\240\032/\335$\006\341?\335$\006\201\225C\333?\010\254\034Zd;\337?h\221\355|?5\336?\244p=\n\327\243\350?}?5^\272I\334?\260rh\221\355|\343?1\010\254\034Zd\333?F\266\363\375\324x\345?\274t\223\030\004V\342?Nb\020X9\264\344?\262\235\357\247\306K\337?\\\217\302\365(\\\343?+\207\026\331\316\367\343?\236\357\247\306K7\341?\274t\223\030\004V\342?c\177\331=yX\334?5^\272I\014\002\333?\016-\262\235\357\247\342?Nb\020X9\264\344?\217\302\365(\\\217\342?J\014\002+\207\026\345?\232\231\231\231\231\231\331?\244p=\n\327\243\340?\234\304 \260rh\341?\323Mb\020X9\340?d;\337O\215\227\342?R\270\036\205\353Q\340?\223\030\004V\016-\346?\217\302\365(\\\217\342?R\270\036\205\353Q\340?\010\254\034Zd;\337?`\345\320\"\333\371\346?\313\241E\266\363\375\334?\223\030\004V\016-\346?\343\245\233\304 \260\342?\270\036\205\353Q\270\342?R\270\036\205\353Q\340?\244p=\n\327\243\340?\262\235\357\247\306K\337?\260rh\221\355|\343?1\010\254\034Zd\333?\244p=\n\327\243\350?\254\034Zd;\337\353?1\010\254\034Zd\333?+\207\026\331\316\367\333?;\337O\215\227n\332?ffffff\346?\236\357\247\306K7\341?\317\367S\343\245\233\334?\223\030\004V\016-\346?\\\217\302\365(\\\343?;\337O\215\227n\332?1\010\254\034Zd\333?/\335$\006\201\225\333?T\343\245\233\304 \340?\313\241E\266\363\375\334?h\221\355|?5\336?+\207\026\331\316\367\333?\223\030\004V\016-\346?y\351&1\010\254\334?\270\036\205\353Q\270\342?7\211A`\345\320\346?\234\304 \260rh\341?Nb\020X9\264\344?Zd;\337O\215\337?d;\337O\215\227\342?{\024\256G\341z\334?ffffff\342?\031\004V\016-\262\335?d;\337O\215\227\342?\010\254\034Zd;\337?\343\245\233\304 \260\342?\262\235\357\247\306K\337?+\207\026\331\316\367\333?\244p=\n\327\243\350?\254\034Zd;\337\353?\256G\341z\024\256\347?\230n\022\203\300\312\331?\236\357\247\306K7\341?\223\030\004V\016-\332?"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "d;\337O\215\027\030@\221\355|?5^\033@\321\"\333\371~j\027@\223\030\004V\016-\033@m\347\373\251\361\322\031@9\264\310v\276\037\030@P\215\227n\022\003\030@m\347\373\251\361R\030@\033/\335$\006\201\031@\376\324x\351&\261\037@\'1\010\254\034\332\023@\317\367S\343\245\033\030@\024\256G\341z\024\030@\201\225C\213l\347\027@\313\241E\266\363\375\033@\354Q\270\036\205\353\033@\317\367S\343\245\233\022@\022\203\300\312\241\305\033@\356|?5^:\027@\027\331\316\367S# @J\014\002+\207\026\025@\360\247\306K7\t\030@\321\"\333\371~\352\030@\317\367S\343\245\233\030@;\337O\215\227n\026@\022\203\300\312\241E\027@sh\221\355|?\033@\035Zd;\337\317\031@\360\247\306K7\211\027@\276\237\032/\335$\024@\331\316\367S\343\245\025@\274t\223\030\004V\027@\010\254\034Zd\273\026@?5^\272I\014\024@\201\225C\213l\347\016@\347\373\251\361\322\315\033@\272I\014\002+\007\027@\254\034Zd;\337\027@\250\306K7\211\301\033@/\335$\006\201\025\030@ffffff\027@\203\300\312\241E\266\027@\024\256G\341z\224\030@q=\n\327\243p\036@\205\353Q\270\036\205\027@\240\032/\335$\206\026@?5^\272I\214\026@\317\367S\343\245\233\031@\226C\213l\347{\030@\366(\\\217\302\365\027@9\264\310v\276\237\031@\317\367S\343\245\033\025@7\211A`\345P\034@\321\"\333\371~j\026@\205\353Q\270\036\205\031@\313\241E\266\363\375\027@=\n\327\243p\275\030@\321\"\333\371~\352\030@\205\353Q\270\036\205\023@\331\316\367S\343\245\030@!\260rh\221\355\031@\262\235\357\247\306\313\027@\027\331\316\367S\343\027@\010\254\034Zd\273\031@\343\245\233\304 0\030@\276\237\032/\335\244\031@\321\"\333\371~j\027@h\221\355|?5\032@\\\217\302\365(\\\032@\031\004V\016-\262\027@5^\272I\014\202\026@\031\004V\016-\262\030@;\337O\215\227n\030@\254\034Zd;\337\025@\242E\266\363\375\324\030@\345\320\"\333\371~\033@\337O\215\227n\222\035@sh\221\355|?\031@\010\254\034Zd\273\027@\274t\223\030\004\326\031@)\\\217\302\365(\032@j\274t\223\030\204\032@w\276\237\032/\335\027@\177j\274t\223\030\035@\307K7\211A`\026@^\272I\014\002\253\031@\333\371~j\274t\030@\254\034Zd;_\031@\372~j\274t\023\030@Nb\020X9\264\023@\256G\341z\024.\032@\252\361\322Mb\020\034@T\343\245\233\304 \033@\323Mb\020X\271\031@\335$\006\201\225\303\036@\006\201\225C\213\354\031@\234\304 \260r\350\032@\370S\343\245\233D\032@=\n\327\243p\275\034@\213l\347\373\251q\033@R\270\036\205\353\321\026@\177j\274t\223\230\032@\'1\010\254\034\332\026@\331\316\367S\343%\027@Nb\020X9\264\030@{\024\256G\341\372\030@\370S\343\245\233\304\027@\207\026\331\316\367\323\033@V\016-\262\235o\027@T\343\245\233\304 \027@\000\000\000\000\000\200\032@\217\302\365(\\\017\030@\n\327\243p=\212\032@m\347\373\251\361R\037@\272I\014\002+\007\034@\004V\016-\262\235\031@T\343\245\233\304\240\032@u\223\030\004V\016\030@\217\302\365(\\\217\025@9\264\310v\276\037\033@\246\233\304 \260r\025@\246\233\304 \260\362\031@F\266\363\375\324x\032@\223\030\004V\016-\033@Zd;\337O\r\032@\323Mb\020X9\032@\201\225C\213l\347\030@\362\322Mb\020\330\030@d;\337O\215\027\031@\274t\223\030\004\326\026@\347\373\251\361\322M\031@\354Q\270\036\205\353\030@?5^\272I\014\030@H\341z\024\256G\037@d;\337O\215\227\027@\343\245\233\304 \260\030@\203\300\312\241E\266\034@\002+\207\026\331\316\030@)\\\217\302\365\250\031@\345\320\"\333\371\376\030@\364\375\324x\351\246\034@\356|?5^\272\030@\372~j\274t\223\030@!\260rh\221\355\033@\000\000\000\000\000\000\024@\215\227n\022\203@\035@\006\201\225C\213\354\026@\014\002+\207\026Y\027@J\014\002+\207\226\034@\226C\213l\347{\033@\207\026\331\316\367\323\026@\024\256G\341z\224\031@\246\233\304 \260\362\027@\266\363\375\324xi\037@F\266\363\375\324x\021@\335$\006\201\225C\033@\177j\274t\223\230\025@q=\n\327\243\360\027@\354Q\270\036\205\353\033@\031\004V\016-2\032@d;\337O\215\227\034@\366(\\\217\302u\030@\360\247\306K7\t\027@#\333\371~j\274\031@\203\300\312\241E6\027@\242E\266\363\375\324\031@\347\373\251\361\322\315\032@\305 \260rh\221\030@Nb\020X9\264\031@=\n\327\243p\275\030@\234\304 \260r\350\026@;\337O\215\227n\031@!\260rh\221m\027@\364\375\324x\351\246\026@\022\203\300\312\241\305\026@^\272I\014\002\253\030@sh\221\355|?\031@\n\327\243p=\212\032@\213l\347\373\251\361\034@\360\247\306K7\t\030@q=\n\327\243\360\031@\301\312\241E\266s\026@\347\373\251\361\322M\033@\004V\016-\262\235\025@Zd;\337O\215\020@\311v\276\237\032\257\031@m\347\373\251\361\322\034@\325x\351&1\210\031@Nb\020X9\264\027@q=\n\327\243p\033@;\337O\215\227\356\027@\260rh\221\355|\030@)\\\217\302\365(\031@\223\030\004V\016\255\030@^\272I\014\002\253\030@\205\353Q\270\036\205\032@H\341z\024\256G\037@H\341z\024\256G\026@\260rh\221\355|\027@\315\314\314\314\314\314\027@9\264\310v\276\237\023@\236\357\247\306K\267\037@5^\272I\014\202\030@X9\264\310v~ @\362\322Mb\020X\027@w\276\237\032/]\027@\006\201\225C\213l\027@)\\\217\302\365(\027@Zd;\337O\215\027@w\276\237\032/]\031@^\272I\014\002\253\031@\351&1\010\254\234\025@\242E\266\363\375T\033@+\207\026\331\316w\026@\351&1\010\254\234\023@\000\000\000\000\000\000\031@\006\201\225C\213\354\027@\272I\014\002+\007\027@\374\251\361\322Mb\030@h\221\355|?5\031@\362\322Mb\020\330\027@{\024\256G\341\372\031@\022\203\300\312\241\305\030@w\276\237\032/\335\030@\024\256G\341z\024\026@Nb\020X94\031@\254\034Zd;_\032@\335$\006\201\225C\030@\276\237\032/\335$\027@\366(\\\217\302\365\030@\254\034Zd;\337\032@\037\205\353Q\270\236\024@\305 \260rh\021 @\033/\335$\006\001\031@D\213l\347\373\251\031@\\\217\302\365(\334\027@\331\316\367S\343%\035@\004V\016-\262\035\031@u\223\030\004V\216\027@}?5^\272I\027@\345\320\"\333\371\376\034@5^\272I\014\202\031@\234\304 \260rh\033@m\347\373\251\361\322\026@\335$\006\201\225C\031@F\266\363\375\324x\027@\331\316\367S\343\245\035@\215\227n\022\203\300\031@Nb\020X94\030@\305 \260rh\221\032@L7\211A`e\026@j\274t\223\030\204\030@\\\217\302\365(\334\032@\341z\024\256G\341\035@X9\264\310v\276\031@\006\201\225C\213l\027@\240\032/\335$\006\030@\024\256G\341z\024\033@L7\211A`e\025@P\215\227n\022\203\027@\364\375\324x\351&\032@L7\211A`\345\031@\000\000\000\000\000\300 @\323Mb\020X\271\031@\'1\010\254\034\332\027@\215\227n\022\203@\027@\347\373\251\361\322\315\033@Zd;\337O\215\027@\333\371~j\274\364\035@\035Zd;\337\317\034@\370S\343\245\233\304\031@V\016-\262\235\357\031@\234\304 \260rh\026@\000\000\000\000\000\000\033@`\345\320\"\333y\032@\372~j\274t\223\030@\256G\341z\024\256\035@d;\337O\215\227\031@\020X9\264\310\366\034@\016-\262\235\357\247\025@\177j\274t\223\030\034@1\010\254\034Z\344\030@\037\205\353Q\270\036\030@u\223\030\004V\016\034@\037\205\353Q\270\236\031@-\262\235\357\247F\031@\327\243p=\nW\031@\031\004V\016-\262\032@{\024\256G\341z\030@\254\034Zd;\337\033@\000\000\000\000\000\200\037@\226C\213l\347{\027@\024\256G\341z\024\036@^\272I\014\002\253\030@Zd;\337O\215\020@\341z\024\256Ga\031@\201\225C\213lg\027@\252\361\322Mb\020\031@\016-\262\235\357\247\030@j\274t\223\030\004\030@\303\365(\\\217B\031@\035Zd;\337\317\025@sh\221\355|\277\031@\311v\276\237\032/\032@\037\205\353Q\270\236\034@\260rh\221\355|\014@\020X9\264\310\366\026@\260rh\221\355\374\026@33333\263\031@\223\030\004V\016-\027@}?5^\272I\026@\037\205\353Q\270\236\031@\004V\016-\262\235\025@7\211A`\345\320\025@\337O\215\227n\222\031@5^\272I\014\202\030@\027\331\316\367Sc\026@\341z\024\256Ga\030@\345\320\"\333\371~\027@X9\264\310v\276\027@\276\237\032/\335$\026@\'1\010\254\034\332\026@\321\"\333\371~j\033@\372~j\274t\023\022@\201\225C\213lg\030@\303\365(\\\217B\030@\006\201\225C\213l\032@\370S\343\245\233\204 @X9\264\310v\276\036@?5^\272I\014\033@\020X9\264\310v\032@\203\300\312\241E\266\032@\234\304 \260rh\027@\356|?5^\272\026@-\262\235\357\247F\026@\037\205\353Q\270\236\032@\301\312\241E\266s\030@\262\235\357\247\306\313 @\033/\335$\006\201\031@\213l\347\373\251\361\027@\364\375\324x\351\246\030@\362\322Mb\020\230 @\256G\341z\024\256\027@\362\322Mb\020\330\027@\217\302\365(\\\017\037@\303\365(\\\217B\026@\307K7\211A`\025@\276\237\032/\335$\031@\014\002+\207\026\331\030@\205\353Q\270\036\205\030@\307K7\211A\340\030@\n\327\243p=\212\034@m\347\373\251\361\322\025@\n\327\243p=\212\027@"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\232\231\231\231\231\231V@\000\000\000\000\000\000Y@33333\363V@33333SV@33333\363P@\315\314\314\314\314L7@\000\000\000\000\000\240W@\232\231\231\231\231\031U@\232\231\231\231\231\031V@\315\314\314\314\314\3148@\232\231\231\231\231\331V@\315\314\314\314\314\354S@\232\231\231\231\231\231G@\232\231\231\231\231\371U@fffff\346F@fffff\346P@\000\000\000\000\000\000Y@\232\231\231\231\231YX@fffff\346J@\000\000\000\000\000\000S@\000\000\000\000\000\200W@\232\231\231\231\231\271T@\315\314\314\314\314\254V@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\232\231\231\231\231\031W@\232\231\231\231\231\031@@fffff\346?@\000\000\000\000\000\2002@\000\000\000\000\000@X@\232\231\231\231\231\231#@\000\000\000\000\000@L@\000\000\000\000\000\000Y@\000\000\000\000\000\000V@\000\000\000\000\000\000Y@\000\000\000\000\000\2005@\000\000\000\000\000\000Y@\000\000\000\000\000@M@\000\000\000\000\000@A@fffff\246T@\000\000\000\000\000\300D@\315\314\314\314\314\014V@333333=@ffffff/@33333SX@\000\000\000\000\000\000Y@\315\314\314\314\314\254W@\315\314\314\314\314\314W@ffffffL@\315\314\314\314\314lT@\315\314\314\314\314LX@fffff\206X@\315\314\314\314\314\214O@33333sV@\315\314\314\314\314\014X@ffffff5@\315\314\314\314\314\254X@\000\000\000\000\000\000V@\000\000\000\000\000\000Y@\232\231\231\231\231YX@\315\314\314\314\314\014@@fffff\346N@\315\314\314\314\314,S@\315\314\314\314\314\214H@333333V@\000\000\000\000\000\000Y@fffff&X@ffffff5@333333D@fffff\206W@\232\231\231\231\231yW@ffffffW@33333sA@\000\000\000\000\000\000Y@\000\000\000\000\000\300W@\232\231\231\231\231\031<@33333\323X@fffff\346<@\315\314\314\314\314\014Q@33333\263W@\232\231\231\231\231\331M@fffff\246W@333333>@fffff&C@ffffffB@fffff\206P@33333\363S@\000\000\000\000\000\000Y@33333SP@\315\314\314\314\314\354W@fffff\306X@\000\000\000\000\000`X@\315\314\314\314\314\214D@ffffff-@fffff\346I@\000\000\000\000\000\2002@\000\000\000\000\000\300@@33333\323U@33333sC@fffff\346;@\315\314\314\314\314lS@33333SW@\000\000\000\000\000@X@\232\231\231\231\231\031?@\000\000\000\000\000 R@\315\314\314\314\314\314\030@\000\000\000\000\000`W@333333\033@\315\314\314\314\314,Q@\315\314\314\314\314\354Q@fffff\346L@\315\314\314\314\314\214F@33333\263=@\315\314\314\314\314\314J@33333\223U@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\000\000\000\000\000@H@\232\231\231\231\2319R@33333\323Q@\315\314\314\314\314\014X@\000\000\000\000\000\000*@333333T@33333\263X@\232\231\231\231\231yV@\232\231\231\231\231\031=@\315\314\314\314\314\314S@fffff\346<@\000\000\000\000\000\000\030@\000\000\000\000\000\240X@\315\314\314\314\314lX@\000\000\000\000\000\200?@fffff\246P@33333sB@fffff&J@fffff\006X@\315\314\314\314\314L:@\315\314\314\314\314\254S@\315\314\314\314\314\014D@33333SS@\232\231\231\231\231\371S@333333E@\232\231\231\231\231\031@@33333\2631@\000\000\000\000\000`V@\232\231\231\231\231yX@\315\314\314\314\314LP@\232\231\231\231\231\331M@\232\231\231\231\231\031K@33333\263G@\000\000\000\000\000\000K@\000\000\000\000\000\300V@\000\000\000\000\000\000Y@\232\231\231\231\231\231@@\315\314\314\314\314\314V@\000\000\000\000\000@D@33333\323W@33333\263F@333333M@\000\000\000\000\000\200I@33333\263;@\000\000\000\000\000\200O@\232\231\231\231\231\031H@\000\000\000\000\000\000Y@\000\000\000\000\000@V@\232\231\231\231\231\271X@\000\000\000\000\000\200V@\315\314\314\314\314\354V@fffff&J@\315\314\314\314\314,X@\000\000\000\000\000`Q@33333sJ@\315\314\314\314\314\214X@fffff\3465@\000\000\000\000\000\000X@\000\000\000\000\000\200V@33333\363I@\000\000\000\000\000\240T@\315\314\314\314\314\214D@fffff&E@\000\000\000\000\000\000Y@fffff\346W@\232\231\231\231\231\231;@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\232\231\231\231\231\271S@fffff\346V@\232\231\231\231\231\331A@\315\314\314\314\314LE@\232\231\231\231\231\231R@33333\263X@33333SX@\315\314\314\314\314\3141@ffffff\032@\232\231\231\231\231YG@ffffff7@\000\000\000\000\000 P@fffff\206X@fffffFR@\000\000\000\000\000\200T@\000\000\000\000\000\000Y@\315\314\314\314\314\014X@ffffff2@\232\231\231\231\231\231Q@\232\231\231\231\231\371V@33333\263N@\315\314\314\314\314\014E@\000\000\000\000\000\000M@\000\000\000\000\000\000L@\232\231\231\231\231\031X@ffffff\032@\000\000\000\000\000\000Y@33333\223W@\232\231\231\231\231yX@33333sX@fffff&W@fffff\006Q@\232\231\231\231\231\231X@\232\231\231\231\2319X@\232\231\231\231\231\031@@\000\000\000\000\000\2001@\232\231\231\231\231\231W@fffff\206S@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\315\314\314\314\314\354T@fffffFQ@\000\000\000\000\000\000Y@fffff\246@@\315\314\314\314\314L0@\000\000\000\000\000\2001@\000\000\000\000\000\000Y@fffff\346?@fffff&X@fffff\006U@\315\314\314\314\314LV@\315\314\314\314\314\014A@\000\000\000\000\000\240R@\000\000\000\000\000\200C@\232\231\231\231\231\331W@fffff\3465@33333\223W@\000\000\000\000\000\000Y@ffffff<@\315\314\314\314\314\014C@\315\314\314\314\314\3149@\232\231\231\231\2319S@\315\314\314\314\314\314!@\000\000\000\000\000\240T@fffffFU@\315\314\314\314\314lU@\000\000\000\000\000\000X@ffffffT@\315\314\314\314\314LJ@\232\231\231\231\231\371U@\000\000\000\000\000@X@33333\323W@333333\007@\000\000\000\000\000\000X@ffffff5@\232\231\231\231\231YM@fffffFX@\232\231\231\231\231yW@33333\263X@\232\231\231\231\231\331F@33333\223V@\000\000\000\000\000 V@\315\314\314\314\314\314G@33333\263V@33333sT@\315\314\314\314\314\314J@ffffffW@\000\000\000\000\000\000O@\232\231\231\231\231\271R@\232\231\231\231\231\231Q@\232\231\231\231\231\031O@\232\231\231\231\231\371Q@\000\000\000\000\000\000V@fffff\246H@33333\223X@\232\231\231\231\231\231/@\000\000\000\000\000\000Y@333333T@fffff&U@\232\231\231\231\231yR@fffff\006X@\315\314\314\314\314\214X@33333\323U@\315\314\314\314\314,S@\232\231\231\231\231\231B@\000\000\000\000\000\000@@33333\363D@\232\231\231\231\231YV@\000\000\000\000\000\000U@\000\000\000\000\000\000Y@\232\231\231\231\231\0314@\315\314\314\314\314,X@33333\263T@33333\323V@fffff\006U@\232\231\231\231\231YR@\000\000\000\000\000\000Y@\000\000\000\000\000\300R@\315\314\314\314\314\214@@\315\314\314\314\314\014W@\232\231\231\231\231\371U@\315\314\314\314\314\214P@\232\231\231\231\231\271X@33333\263R@fffff\246Q@\000\000\000\000\000 V@\232\231\231\231\231YU@fffff&V@\315\314\314\314\314,W@333333\037@\232\231\231\231\231\331T@\232\231\231\231\231\271W@fffffFP@\315\314\314\314\314LB@\000\000\000\000\000\2003@\000\000\000\000\000\000Y@fffff\206W@ffffffE@\000\000\000\000\000\000Y@\000\000\000\000\000@W@333333\037@\232\231\231\231\231\031E@\315\314\314\314\314\314 @\000\000\000\000\000\0001@33333\263E@\315\314\314\314\314\014M@\232\231\231\231\231\031?@33333sS@fffff\346@@\000\000\000\000\000`R@\315\314\314\314\314\214X@ffffffM@\000\000\000\000\000\340V@fffff&K@\232\231\231\231\231\031V@ffffffQ@\000\000\000\000\000\300P@\000\000\000\000\000\300N@\232\231\231\231\2319W@33333\323T@fffff\246Q@\000\000\000\000\000\000Y@\000\000\000\000\000\200F@\232\231\231\231\231YX@\000\000\000\000\000\000Y@\000\000\000\000\000\000Y@\315\314\314\314\314\314+@\315\314\314\314\314LB@\000\000\000\000\000\200@@"
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "y\351&1\010\254\006@\240\211\260\341\351\025\000@\307K7\211A`\003@\261Pk\232w\034\003@\364\375\324x\351\346\034@U0*\251\023\220\032@\373:p\316\210R\004@=\n\327\243p\275\005@(~\214\271k\211\004@\n\327\243p=\212\027@(~\214\271k\t\374?\007\360\026HP\374\003@8gDiop\014@\367u\340\234\021\245\004@\253>W[\261?\030@\245N@\023aC\004@(\017\013\265\246y\367?(~\214\271k\t\376?\361\364JY\2068\r@g\325\347j+\366\013@\361c\314]K\310\373?G\003x\013$\350\030@A\361c\314]\313\010@\033\r\340-\220\240\376?q\033\r\340-\220\364?$\271\374\207\364\333\375?,\324\232\346\035g\020@B>\350\331\254:\035@\226\262\014q\254k%@R\270\036\205\353Q\374?33333\263\014@t$\227\377\220\376\021@\221~\373:p\316\366?\245N@\023a\303\371?\317f\325\347j+\370?\263{\362\260P\353\031@\317\367S\343\245\233\366?\253>W[\261?\023@\275R\226!\216\225!@B>\350\331\254\372\005@\267b\177\331=y\017@\2068\326\305m\264\003@\212\037c\356ZB\037@\024\256G\341z\024\031@@\244\337\276\016\034\003@\243\001\274\005\022T\030@=\233U\237\253\255\377?\232\231\231\231\231\031\002@\263\352s\265\025\373\r@\271\215\006\360\026\010\021@\276\301\027&S\205\000@\2505\315;N\321\366?7\211A`\345P\013@H\277}\0358\347\007@\005\305\2171w-\366?n4\200\267@B\033@\235\021\245\275\301\027\002@\200H\277}\0358\377?;\337O\215\227n\371?\331\316\367S\343\245\001@\344\203\236\315\252\217\020@\024\256G\341z\324\022@R\270\036\205\353\321\010@u\223\030\004VN\037@\216\006\360\026H\320\021@\347\214(\355\r\276\375?\370\302d\252`T\376?9\326\305m4\000\013@\326\305m4\200\367\025@)\355\r\2760\231\021@\301\250\244N@\023\375?\'\302\206\247W\312\371?#\333\371~j\034 @\202\342\307\230\273\226\366?\236^)\313\020\307\001@\315;N\321\221\334\031@\2201w-!\237\003@\'\240\211\260\341\251\025@\213\375e\367\344\341\n@\221~\373:p\316\377?\2505\315;N\021\031@V}\256\266b\377\000@\3274\3578E\307\016@#\333\371~j<\035@\313\241E\266\363\375\031@\314]K\310\007\275\010@Y\027\267\321\000^\014@:#J{\203/\371?KY\2068\326E\003@\345\362\037\322o_\367?\312T\301\250\244N\370?\314]K\310\007=\363?;\001M\204\rO\016@\'\240\211\260\341\251\025@\236\357\247\306Kw\021@\246\nF%u\302\030@_\007\316\031Q\232\025@\341\013\223\251\202\321\014@\243\222:\001MD\022@\326\305m4\200w\024@\217\302\365(\\\217\017@\024?\306\334\265\204\365?m\347\373\251\361\322\376?\031\004V\016-r\032@\020z6\253>\327\005@.\220\240\3701&\025@\325\th\"lx\377?\000\221~\373:\320!@\314\177H\277}\235\005@\377!\375\366u \020@g\325\347j+\366\013@\241g\263\352s\265\021@\343\245\233\304 \260 @\325\347j+\366\227\t@\035\311\345?\244_\013@\323Mb\020X9\372?q=\n\327\243p\370?\202sF\224\366\006 @O\257\224e\210c\006@E\330\360\364J\331\006@\300\354\236<,\324\000@\365JY\2068\226\035@\314\356\311\303B-\n@\356|?5^\272\365?\357\311\303B\255i\006@\243\222:\001MD\022@#\333\371~j\034 @O@\023a\303S\r@\250\306K7\211\001\021@\r\340-\220\240\370\371?^\272I\014\002+\002@=\233U\237\253-\"@\313\241E\266\363=\026@g\325\347j+\366\013@\202sF\224\366\006 @Zd;\337O\315\027@\263{\362\260P\353\031@\221~\373:p\316\375?\030\225\324\th\342\022@\354Q\270\036\205\353\014@D\372\355\353\300\271\t@q\033\r\340-\220\017@t$\227\377\220~\027@\326\305m4\200\367\025@A\361c\314]K\370?\310\230\273\226\220\017\365?P\374\030s\327\022\006@g\325\347j+\366\377?\253>W[\261?\030@\344\203\236\315\252O\037@\313\020\307\272\270\r\003@{\203/L\246\n\004@$(~\214\271k\371?F\266\363\375\324x\024@\325x\351&1\010\367?J{\203/L\246 @{\024\256G\341z\027@\253>W[\261?\023@o\022\203\300\312\241\006@HP\374\030s\327\027@\326\305m4\200w\024@n4\200\267@B\033@\325x\351&1\210\010@\t\212\037c\356Z\375?(\017\013\265\246y\376?\246\233\304 \260\362\000@H\341z\024\256\307\004@\377\262{\362\260\320\017@\232\010\033\236^)\022@w\276\237\032/]\001@\254\034Zd;_\016@1\010\254\034Z$\034@\212\260\341\351\225\262\372?\316\210\322\336\340+%@\"\375\366u\340\234\374?\221\355|?5^\003@\254\213\333h\000\357\017@\n\327\243p=\212\n@J\014\002+\207\026\020@\373\313\356\311\303\002\026@\235\200&\302\206\247\377?\314\177H\277}\035\374?\210\364\333\327\201s\023@\201\004\305\2171w\371?\376\324x\351&1\362?\256\330_vO\336\023@R\'\240\211\260\341\376?\216uq\033\r`\"@\313\020\307\272\270\r\003@\373:p\316\210R\007@\210\205Z\323\274\343\375?\027\331\316\367S\343\371?\031\004V\016-r\032@\340\276\016\2343\342\026@_\007\316\031Q\232\025@\326\305m4\200w\024@\363\037\322o_\307\022@\303\323+e\031b\016@R\270\036\205\353\321\003@\354Q\270\036\205\353\017@Dio\360\205\311\362?Y\027\267\321\000^\000@\373\313\356\311\303\002\026@e\031\342X\0277\r@\343\245\233\304 \260\001@gDio\360\005\013@\236\357\247\306K\267\021@H\341z\024\256G\031@\204\rO\257\224\345\010@\372~j\274t\223\000@.\220\240\3701&\025@0L\246\nF%\365?\277\016\2343\242\264\000@\365\333\327\201sF\367?\177\373:p\316\210\365?\274\005\022\024?\306\374?\254\034Zd;_\r@\370S\343\245\233\304\002@\243\001\274\005\022\024\016@_\007\316\031Q\232\025@.\220\240\3701&\025@\375\366u\340\234\321\021@\2343\242\2647\370\376?\277\016\2343\242\264\362?+\366\227\335\223\207\370?\026\373\313\356\311C\006@\300\354\236<,\324\003@=,\324\232\346\035\374?\327\022\362A\317f\024@\236\357\247\306K\267\021@u\223\030\004VN\037@\3122\304\261.n\371?F\266\363\375\324x\024@/\335$\006\201\225\001@\010=\233U\237+\005@\224\366\006_\230\014\020@#\333\371~j<\035@\241g\263\352s5\020@\313\020\307\272\270\315\025@\212\037c\356Z\302\003@\206\311T\301\250d!@\302\027&S\005c\031@\246\233\304 \260r\367?U0*\251\023\220\032@\023\362A\317f\325\031@\353\3426\032\300\333\024@\254\034Zd;_\r@\365JY\2068\226\035@\201&\302\206\247W\001@\312\303B\255i^\013@\341\013\223\251\202\321\021@Z\365\271\332\212\375\373?\354Q\270\036\205k\005@`\345\320\"\333\371\006@I\235\200&\302\206\002@xz\245,C\034\377?<N\321\221\\\376\375?\340\276\016\2343\342\026@\221\017z6\253>\373?\313\241E\266\363\375\031@\327\243p=\nW\017@\330\201sF\224v\003@\262\235\357\247\306K\001@\000\000\000\000\000\000\375?n4\200\267@B\033@\356|?5^\272\022@\242\2647\370\302\344\006@\363\037\322o_G\035@\177\373:p\316\210\377?\204\rO\257\224\345\000@O@\023a\303S\r@\032\300[ Aq\002@\322o_\007\316Y\030@e\252`TR\247\n@_\007\316\031Q\232\025@*:\222\313\177\310\004@\t\033\236^)\313\010@0L\246\nF%\004@\327\022\362A\317&\034@\331_vO\036\026\374?\320\263Y\365\271\232\025@\005\305\2171w-\366?\n\327\243p=\n\004@q\033\r\340-\020\001@[\261\277\354\236\274\010@\315\314\314\314\314\314\000@mV}\256\266\342\000@\333\371~j\274\364\020@\315\314\314\314\314L\002@&S\005\243\222\372\024@\325\347j+\366\227\026@\230n\022\203\300\312\r@\256\330_vO\036\001@\277}\0358gD\010@}\256\266b\177\331\362?\344\203\236\315\252O\037@\t\212\037c\356\332\000@C\034\353\3426\032\n@\374\251\361\322Mb\010@\334\327\201sF\224\001@\n\327\243p=\212\n@\023\362A\317f\325\367?y\351&1\010,\007@\036\026jM\363\016\t@\355\236<,\324\232\005@\344\203\236\315\252\317\371?\327\022\362A\317\346\034@\030\225\324\th\"\372?|\362\260Pk\232\001@\025\035\311\345?$\007@0*\251\023\320\304\004@\017\2343\242\264\267\005@R\270\036\205\353Q\r@\030\225\324\th\"\375?1\010\254\034Z$\034@\271\215\006\360\026\310\005@~\0358gDi\370?\016\2760\231*X\031@\337\340\013\223\251\002\022@\316\210\322\336\340+%@\014\223\251\202QI\371?;\337O\215\227\356\020@\031\342X\027\267\021\021@\234\242#\271\374\207\372?\277}\0358gD\002@.\220\240\3701&\025@\246\nF%u\302\030@\000\221~\373:\320!@9\326\305m4\000\013@\352\225\262\014q\354\037@\366(\\\217\302\365\n@HP\374\030s\327\027@\304\261.n\243\001\370?\327\022\362A\317f\024@\373\\m\305\3762\003@HP\374\030s\327\002@\031s\327\022\362\001\020@\002+\207\026\331N\002@\232\010\033\236^)\022@\245,C\034\353\342\377?g\325\347j+\366\013@\345\362\037\322o_\003@\327\243p=\nW\017@\340-\220\240\370\261\000@!\260rh\221\355\005@5^\272I\014\202\000@\000\000\000\000\000\000\017@\337\340\013\223\251\002\022@\321\221\\\376C\372\000@\277\016\2343\242\264\366?\231*\030\225\324\t\000@[\323\274\343\024\235\036@\254\034Zd;_\016@\313\241E\266\363\375\031@"
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\000\000\000\000\000\000s@\000\000\000\000\000\200p@\000\000\000\000\0000y@\000\000\000\000\000\020q@\000\000\000\000\000\300q@\000\000\000\000\000\000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\300h@\000\000\000\000\000\320\204@\000\000\000\000\000px@\000\000\000\000\000\200r@\000\000\000\000\000\320\204@\000\000\000\000\000\300k@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000Pq@\000\000\000\000\000@q@\000\000\000\000\0000y@\000\000\000\000\000ps@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\000k@\000\000\000\000\000\300r@\000\000\000\000\000\260y@\000\000\000\000\000\320\204@\000\000\000\000\000Pq@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000\320\204@\000\000\000\000\000\000l@\000\000\000\000\000\360t@\000\000\000\000\000\000{@\000\000\000\000\000pq@\000\000\000\000\000\000{@\000\000\000\000\000\300q@\000\000\000\000\000\300u@\000\000\000\000\0000y@\000\000\000\000\000ps@\000\000\000\000\000P{@\000\000\000\000\0000y@\000\000\000\000\000\340n@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\340p@\000\000\000\000\000 h@\000\000\000\000\000\320\204@\000\000\000\000\000`n@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\300o@\000\000\000\000\0000s@\000\000\000\000\000\000s@\000\000\000\000\000\240t@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\220t@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000P{@\000\000\000\000\000\240t@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000 w@\000\000\000\000\000\320\204@\000\000\000\000\000\360q@\000\000\000\000\000pq@\000\000\000\000\000\320\204@\000\000\000\000\000`z@\000\000\000\000\000\320\204@\000\000\000\000\000pq@\000\000\000\000\000\220t@\000\000\000\000\000\220u@\000\000\000\000\000\340p@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000px@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000\360q@\000\000\000\000\000\340k@\000\000\000\000\000\300r@\000\000\000\000\000\220q@\000\000\000\000\000\000s@\000\000\000\000\000\340x@\000\000\000\000\000\240n@\000\000\000\000\000\000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\020u@\000\000\000\000\000\000{@\000\000\000\000\000\020s@\000\000\000\000\000P{@\000\000\000\000\000\240t@\000\000\000\000\000\200r@\000\000\000\000\000\000s@\000\000\000\000\000@q@\000\000\000\000\000\340n@\000\000\000\000\000\200q@\000\000\000\000\000 h@\000\000\000\000\000\340p@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\000v@\000\000\000\000\000px@\000\000\000\000\000\000x@\000\000\000\000\000\320\204@\000\000\000\000\000\240t@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\340x@\000\000\000\000\000\240t@\000\000\000\000\000\340p@\000\000\000\000\000\340x@\000\000\000\000\0000y@\000\000\000\000\000P{@\000\000\000\000\000 n@\000\000\000\000\000ps@\000\000\000\000\000@q@\000\000\000\000\000\000v@\000\000\000\000\000ps@\000\000\000\000\000\340x@\000\000\000\000\000\320\204@\000\000\000\000\000\360q@\000\000\000\000\000\340p@\000\000\000\000\0000s@\000\000\000\000\000Pq@\000\000\000\000\000\340z@\000\000\000\000\000\220t@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\000{@\000\000\000\000\000\320\204@\000\000\000\000\000\300k@\000\000\000\000\000`v@\000\000\000\000\000px@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\000l@\000\000\000\000\000\320\204@\000\000\000\000\000\000p@\000\000\000\000\000 m@\000\000\000\000\000\000l@\000\000\000\000\000 h@\000\000\000\000\000\020r@\000\000\000\000\000\240n@\000\000\000\000\000`n@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000P{@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\360q@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\300r@\000\000\000\000\000P{@\000\000\000\000\000\340t@\000\000\000\000\000P{@\000\000\000\000\000\000x@\000\000\000\000\000\320\204@\000\000\000\000\000\000s@\000\000\000\000\000\300k@\000\000\000\000\000\020r@\000\000\000\000\000\320\204@\000\000\000\000\000\200g@\000\000\000\000\000\300o@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000@n@\000\000\000\000\000\200p@\000\000\000\000\000\220s@\000\000\000\000\000px@\000\000\000\000\000\200r@\000\000\000\000\0008\206@\000\000\000\000\0000y@\000\000\000\000\000\020u@\000\000\000\000\000 m@\000\000\000\000\000\220q@\000\000\000\000\000\240n@\000\000\000\000\000\000k@\000\000\000\000\0000s@\000\000\000\000\000\000{@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\020r@\000\000\000\000\0000s@\000\000\000\000\000\000x@\000\000\000\000\000pq@\000\000\000\000\000\340k@\000\000\000\000\000\020r@\000\000\000\000\000@q@\000\000\000\000\000\320\204@\000\000\000\000\000\020s@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\0000y@\000\000\000\000\0000s@\000\000\000\000\000P{@\000\000\000\000\0000s@\000\000\000\000\000\220q@\000\000\000\000\000\020s@\000\000\000\000\0000s@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\020q@\000\000\000\000\0000y@\000\000\000\000\000 m@\000\000\000\000\000\340k@\000\000\000\000\000\240t@\000\000\000\000\000\320\204@\000\000\000\000\000\000l@\000\000\000\000\000\320\204@\000\000\000\000\000\200r@\000\000\000\000\0000s@\000\000\000\000\000\220t@\000\000\000\000\000\340x@\000\000\000\000\000ps@\000\000\000\000\000P{@\000\000\000\000\000@l@\000\000\000\000\000ps@\000\000\000\000\000\320\204@\000\000\000\000\000\000s@\000\000\000\000\000\000l@\000\000\000\000\000\340z@\000\000\000\000\0000s@\000\000\000\000\000\240t@\000\000\000\000\000\320\204@\000\000\000\000\000@q@\000\000\000\000\0000s@\000\000\000\000\0000y@\000\000\000\000\000\000{@\000\000\000\000\000\200p@\000\000\000\000\000\320\204@\000\000\000\000\000\200g@\000\000\000\000\000\320\204@\000\000\000\000\000 m@\000\000\000\000\000\320\204@\000\000\000\000\000\220u@\000\000\000\000\000\340k@\000\000\000\000\000\000x@\000\000\000\000\0000y@\000\000\000\000\000P{@\000\000\000\000\000`n@\000\000\000\000\0000s@\000\000\000\000\0000s@\000\000\000\000\000P}@\000\000\000\000\0000y@\000\000\000\000\000\200p@\000\000\000\000\000\340p@\000\000\000\000\000\320\204@\000\000\000\000\000 m@\000\000\000\000\000\320\204@\000\000\000\000\000\220q@\000\000\000\000\000 h@\000\000\000\000\000\300k@\000\000\000\000\000\320\204@\000\000\000\000\000\300q@\000\000\000\000\0008\206@\000\000\000\000\000\200o@\000\000\000\000\000\320\204@\000\000\000\000\000\020q@\000\000\000\000\000\200p@\000\000\000\000\000\340p@\000\000\000\000\0000y@\000\000\000\000\000P{@\000\000\000\000\0000s@\000\000\000\000\000\020q@\000\000\000\000\000\000k@\000\000\000\000\000\340o@\000\000\000\000\000\320\204@\000\000\000\000\000\200p@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000`v@\000\000\000\000\000\000x@\000\000\000\000\000\000s@\000\000\000\000\0000s@\000\000\000\000\000\200g@\000\000\000\000\000\200r@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000\200r@\000\000\000\000\000 h@\000\000\000\000\000\320\204@\000\000\000\000\000\300q@\000\000\000\000\000\320\204@\000\000\000\000\000\320\204@\000\000\000\000\000px@\000\000\000\000\000\200r@\000\000\000\000\000\000x@\000\000\000\000\000Pq@\000\000\000\000\0008\206@\000\000\000\000\000\300r@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\300r@\000\000\000\000\000\340x@\000\000\000\000\000\340t@\000\000\000\000\000\320\204@\000\000\000\000\0000s@\000\000\000\000\000\300o@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\020s@\000\000\000\000\000\300r@\000\000\000\000\000\240t@\000\000\000\000\0000s@\000\000\000\000\000\300q@\000\000\000\000\000\300k@\000\000\000\000\000\020r@\000\000\000\000\000\320\204@\000\000\000\000\000 m@\000\000\000\000\000px@\000\000\000\000\000\320\204@\000\000\000\000\000\000s@\000\000\000\000\000\200p@\000\000\000\000\000\360q@\000\000\000\000\000\200g@\000\000\000\000\000@q@\000\000\000\000\000\200p@\000\000\000\000\000\340k@\000\000\000\000\000\200g@\000\000\000\000\000 h@\000\000\000\000\000\320\204@\000\000\000\000\000Pq@\000\000\000\000\000\340x@\000\000\000\000\000\320\204@\000\000\000\000\0000y@\000\000\000\000\000\320\204@\000\000\000\000\000 y@\000\000\000\000\0000s@\000\000\000\000\000\220u@"
      }
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "ffffff2@\000\000\000\000\000\000*@ffffff-@\000\000\000\000\000\0005@33333\2633@fffff\3460@3333334@3333334@3333334@333333+@3333334@3333333@\232\231\231\231\231\2310@3333334@33333\2632@3333334@3333334@ffffff-@\232\231\231\231\231\2312@\000\000\000\000\000\0002@ffffff-@ffffff.@3333334@3333334@3333334@3333334@\315\314\314\314\314\314-@\232\231\231\231\231\231.@\315\314\314\314\314L2@3333334@\232\231\231\231\231\2312@\000\000\000\000\000\0005@3333334@ffffff-@3333334@ffffff.@3333334@3333334@33333\2633@\315\314\314\314\314\3141@3333333@\315\314\314\314\314\3141@33333\2633@ffffff-@ffffff-@ffffff.@3333335@ffffff-@\000\000\000\000\000\2002@\000\000\000\000\000\0005@3333334@3333334@\315\314\314\314\314\3141@\315\314\314\314\314\3141@3333334@\315\314\314\314\314\3140@3333334@3333334@3333334@3333334@\232\231\231\231\231\2311@\000\000\000\000\000\0005@ffffff2@\232\231\231\231\231\0313@\000\000\000\000\000\0005@3333334@3333334@ffffff1@\232\231\231\231\231\0310@\000\000\000\000\000\0005@3333334@3333335@\232\231\231\231\231\0313@ffffff-@3333334@\232\231\231\231\231\2311@3333334@\232\231\231\231\231\2313@3333333@3333334@\315\314\314\314\314\314/@3333334@3333333@333333)@fffff\3462@\315\314\314\314\314\3141@3333334@3333334@3333333@ffffff-@3333334@3333334@ffffff.@\232\231\231\231\231\2313@\232\231\231\231\231\2312@\232\231\231\231\231\2310@\000\000\000\000\000\0003@ffffff2@ffffff.@3333333@ffffff2@3333334@3333334@\232\231\231\231\231\0310@\315\314\314\314\314\3141@3333333@3333335@\232\231\231\231\231\0313@\232\231\231\231\231\2310@ffffff2@\000\000\000\000\000\0002@\000\000\000\000\000\2002@\000\000\000\000\000\0001@\315\314\314\314\314\3141@\315\314\314\314\314\3141@3333334@3333334@\315\314\314\314\314\3142@3333333@fffff\3464@3333334@\232\231\231\231\231\0313@ffffff1@3333334@3333334@ffffff.@\232\231\231\231\231\0313@3333332@33333\2632@ffffff-@3333335@3333332@ffffff.@\000\000\000\000\000\0002@\315\314\314\314\314\3142@ffffff.@ffffff.@3333334@\232\231\231\231\231\2313@3333332@ffffff1@\232\231\231\231\231\2312@fffff\3460@\232\231\231\231\231\0310@3333334@3333334@\315\314\314\314\314\3141@3333334@33333\2632@\232\231\231\231\231\231-@3333333@3333334@3333334@ffffff-@3333334@333333.@fffff\3461@3333334@\315\314\314\314\314\3141@\000\000\000\000\000\0000@3333333@\315\314\314\314\314\3140@3333334@3333334@3333334@3333335@3333334@\000\000\000\000\000\0005@\232\231\231\231\231\2313@3333334@\000\000\000\000\000\0005@\232\231\231\231\231\2310@3333335@\000\000\000\000\000\0006@3333335@fffff\3464@3333334@ffffff2@ffffff2@\000\000\000\000\000\0000@3333334@\232\231\231\231\231\0313@\232\231\231\231\231\2311@ffffff-@3333334@\315\314\314\314\314\3141@\000\000\000\000\000\000*@\315\314\314\314\314L1@3333333@\232\231\231\231\231\2310@\232\231\231\231\231\0314@ffffff-@\232\231\231\231\231\0310@fffff\3461@\000\000\000\000\000\0003@3333333@\315\314\314\314\314\314-@\000\000\000\000\000\0005@\315\314\314\314\314\3141@\000\000\000\000\000\0005@3333334@ffffff-@\000\000\000\000\000\0000@ffffff1@fffff\3464@3333333@\232\231\231\231\231\2312@\000\000\000\000\000\0000@ffffff0@3333334@3333333@ffffff-@3333334@3333334@ffffff-@ffffff-@ffffff1@3333335@\000\000\000\000\000\0005@\000\000\000\000\000\0003@3333333@\000\000\000\000\000\0005@3333334@3333334@3333334@3333334@\000\000\000\000\000\0005@ffffff-@fffff\3461@\232\231\231\231\231\2312@\232\231\231\231\231\0313@3333334@ffffff-@3333334@\232\231\231\231\231\2310@\000\000\000\000\000\0005@333333)@33333\2632@ffffff.@3333335@fffff\3461@ffffff.@3333334@fffff\3460@3333334@fffff\3460@ffffff1@\232\231\231\231\231\0313@3333334@ffffff0@\000\000\000\000\000\0005@ffffff-@\315\314\314\314\314\3141@\000\000\000\000\000\000*@3333334@\232\231\231\231\231\0313@3333334@fffff\3461@3333334@fffff\3462@\232\231\231\231\231\2312@fffff\3464@ffffff-@3333335@\315\314\314\314\314\3140@\000\000\000\000\000\0005@ffffff1@\232\231\231\231\231\0315@ffffff-@\000\000\000\000\000\000*@3333332@3333334@fffff\3461@3333334@\000\000\000\000\000\0003@\315\314\314\314\314\3141@ffffff2@3333334@\000\000\000\000\000\000/@\232\231\231\231\231\0314@\315\314\314\314\314L2@3333334@\000\000\000\000\000\0005@\000\000\000\000\000\000*@\315\314\314\314\314\3141@ffffff-@3333335@\000\000\000\000\000\0005@\000\000\000\000\000\0005@\315\314\314\314\314\314-@\315\314\314\314\314\314,@3333334@\000\000\000\000\000\000*@3333334@3333334@\232\231\231\231\231\231-@fffff\3464@ffffff2@ffffff1@\232\231\231\231\231\0313@\232\231\231\231\231\2310@3333334@3333334@\232\231\231\231\231\2310@\315\314\314\314\314\3141@3333334@33333\2633@3333334@3333334@3333333@\232\231\231\231\231\2310@fffff\3464@\232\231\231\231\231\2312@\232\231\231\231\231\0314@\232\231\231\231\231\2310@3333334@ffffff-@\232\231\231\231\231\2310@33333\2632@\000\000\000\000\000\0006@3333334@\000\000\000\000\000\0005@\232\231\231\231\231\2311@3333334@ffffff-@3333333@\232\231\231\231\231\2310@\232\231\231\231\231\0313@ffffff1@33333\2633@ffffff2@\000\000\000\000\000\0000@3333334@fffff\3461@3333333@3333334@ffffff2@\000\000\000\000\000\000*@\232\231\231\231\231\2313@\232\231\231\231\231\0313@\000\000\000\000\000\0002@\000\000\000\000\000\000*@\232\231\231\231\231\2312@\232\231\231\231\231\0313@\315\314\314\314\314\3141@3333334@\232\231\231\231\231\2312@33333\2632@3333334@ffffff-@3333334@\000\000\000\000\000\0001@\000\000\000\000\000\0005@fffff\3462@"
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "\315\314\314\314\314\304x@{\024\256G\341~x@\366(\\\217\302\261x@33333\227x@fffff\316x@\000\000\000\000\000\244v@q=\n\327\243\264t@fffff\316x@{\024\256G\341vx@\270\036\205\353Q\270x@\024\256G\341z\300s@fffff\316x@H\341z\024\256\223x@\366(\\\217\302\365$@\256G\341z\024\252x@{\024\256G\341jw@fffff\316x@{\024\256G\341\266v@\327\243p=\nox@fffff\316x@\270\036\205\353Q(V@fffff\316x@\341z\024\256G\265x@\244p=\n\327\243\"@=\n\327\243p\301t@33333wx@fffff\316x@\354Q\270\036\205\253x@\341z\024\256G\205x@fffff\316x@{\024\256G\341\316u@R\270\036\205\353\271x@\354Q\270\036\205\017x@\024\256G\341ztu@=\n\327\243pm`@{\024\256G\341\232w@\315\314\314\314\314\314\004@fffff\316x@\232\231\231\231\231]x@\\\217\302\365(\250x@fffff\316x@\303\365(\\\217\216u@{\024\256G\341jx@\256G\341z\024\266x@\256G\341z\024\302u@\256G\341z\024*x@fffff\316x@q=\n\327\243\240t@fffff\262x@\000\000\000\000\000,x@\217\302\365(\\\037x@fffff\316x@)\\\217\302\365\300x@\000\000\000\000\000px@fffff\316x@fffff\316x@fffff\316x@\205\353Q\270\036\365w@\037\205\353Q\270Nw@\\\217\302\365(\354r@fffff\316x@fffff\316x@\244p=\n\327\303x@\217\302\365(\\kw@\256G\341z\024&s@\000\000\000\000\000\354s@q=\n\327\243\020n@=\n\327\243p\305w@\000\000\000\000\000\274x@\341z\024\256G\245x@fffff\316x@\341z\024\256GAx@{\024\256G\341bx@fffff\316x@\270\036\205\353Q(Y@\354Q\270\036\205?x@R\270\036\205\353}w@fffff\316x@fffff\316x@H\341z\024\256\207E@\217\302\365(\\_x@fffffv[@{\024\256G\341\226x@33333\203x@fffff\316x@{\024\256G\341\202x@{\024\256G\341\212x@fffff\316x@fffff\316x@\217\302\365(\\{x@fffff\316x@\315\314\314\314\314\200x@R\270\036\205\353\235x@{\024\256G\341\232x@\270\036\205\353Qlx@\303\365(\\\217\266w@fffff\316x@\327\243p=\n\273x@fffff\316x@fffff\316x@\037\205\353Q\270\306x@\270\036\205\353Q\260v@{\024\256G\341\246x@fffff\316x@\315\314\314\314\314\224x@\037\205\353Q\270\222w@\000\000\000\000\000\244w@=\n\327\243p!x@H\341z\024\256\223x@fffff\316x@H\341z\024\256_v@\244p=\n\327\277x@\327\243p=\nox@\256G\341z\024\212x@fffff\316x@\366(\\\217\302\201w@fffff\206A@\n\327\243p=\032x@fffff\316x@\341z\024\256G\271x@q=\n\327\243\314w@\024\256G\341z\304x@fffff\316x@fffff\316x@\205\353Q\270\036\235x@=\n\327\243p\355w@\n\327\243p=\202w@\341z\024\256G\305x@\037\205\353Q\270\256x@33333_p@fffff\316x@\232\231\231\231\231Yu@\232\231\231\231\231\271x@\024\256G\341z\230x@\366(\\\217\302\311v@fffff\316x@\244p=\n\327gx@R\270\036\205\353\3212@fffff\316x@fffff\316x@\341z\024\256GAw@\256G\341z\024\232x@\205\353Q\270\036\tw@{\024\256G\341fx@fffff\316x@fffff\316x@\000\000\000\000\000xx@fffff\2468@fffff\316x@\366(\\\217\302mx@fffff\316x@=\n\327\243pux@fffff\316x@\024\256G\341z\214x@\341z\024\256G\335q@fffff\216x@fffff\316x@fffff\316x@fffff\316x@\232\231\231\231\231\215x@fffff\316x@\354Q\270\036\205\237x@fffff\346t@\000\000\000\000\000@;@q=\n\327\243\020v@q=\n\327\243\260x@\217\302\365(\\\347o@fffff\316x@fffff\316x@33333\273w@33333ox@\000\000\000\000\000Lw@q=\n\327\243\200x@\315\314\314\314\314\354w@\366(\\\217\302\201x@\327\243p=\n\213x@R\270\036\205\353Ix@fffff\316x@{\024\256G\341\232x@fffff\316x@H\341z\024\256+x@q=\n\327\243tv@33333\227x@\232\231\231\231\231Yu@fffff\316x@fffff\316x@\n\327\243p=>x@fffff\316x@fffff\316x@\270\036\205\353Qtx@\366(\\\217\302ax@\315\314\314\314\314Lw@fffff\316x@R\270\036\205\353\365w@\n\327\243p=jx@fffff\316x@)\\\217\302\3654x@\205\353Q\270\036\211w@\256G\341z\024*u@33333\023m@fffff\316x@\315\314\314\314\314\024w@fffff\316x@33333\257w@\037\205\353Q\270\272x@)\\\217\302\365\230w@fffffJx@fffff\316x@\315\314\314\314\314\214x@\\\217\302\365(\340s@H\341z\024\256\373w@fffff\316x@\205\353Q\270\036UT@\n\327\243p=\252s@fffff\316x@\037\205\353Q\270.u@\232\231\231\231\231\245w@\\\217\302\365(lp@R\270\036\205\353\to@fffff\316x@\327\243p=\n\217w@\327\243p=\n?x@\037\205\353Q\270.X@fffff\342v@fffff\316x@\217\302\365(\\\003q@\244p=\n\327\177x@\n\327\243p=\036v@fffff\316x@fffff\316x@\244p=\n\327\233x@\327\243p=\n_j@\315\314\314\314\314hx@\270\036\205\353QHx@\000\000\000\000\000\270x@\024\256G\341z\210x@fffff\316x@\303\365(\\\217Zw@\000\000\000\000\000hx@\327\243p=\nKx@{\024\256G\341\276x@\270\036\205\353Q\210x@\354Q\270\036\205kf@\270\036\205\353Q\240x@\217\302\365(\\[x@\327\243p=\n\347w@\n\327\243p=\202w@\205\353Q\270\036\221w@\256G\341z\024\246w@\024\256G\341z\214x@\037\205\353Q\270\366r@\270\036\205\353Q\020t@=\n\327\243p\271x@\315\314\314\314\314dx@\\\217\302\365(\014Y@)\\\217\302\365$w@H\341z\024\256\377s@\303\365(\\\217\026x@fffff\316x@\217\302\365(\\\303x@\217\302\365(\\\257x@\244p=\n\327\263x@33333Gx@fffff\316x@)\\\217\302\365\270x@\256G\341z\024\216w@33333{x@fffff\316x@{\024\256G\341fw@\315\314\314\314\314\214x@\\\217\302\365(\260x@\217\302\365(\\\303x@fffff\316x@\205\353Q\270\036\221x@\256G\341z\024\272x@fffff\316x@fffff\316x@)\\\217\302\365hw@\244p=\n\327\253x@\315\314\314\314\314\200u@R\270\036\205\353\271x@\244p=\n\327\233x@fffff\316x@\205\353Q\270\036\001x@\315\314\314\314\314\230x@=\n\327\243p\221r@\037\205\353Q\270\252x@H\341z\024\256\303w@fffff\316x@H\341z\024\256\203x@H\341z\024\256\243x@H\341z\024\256+w@R\270\036\205\353Ex@fffff\316x@\354Q\270\036\205#w@\244p=\n\327\003w@\315\314\314\314\314\240x@\n\327\243p=\226x@\244p=\n\327\263x@\037\205\353Q\270\232w@\232\231\231\231\231\271x@fffff\316x@R\270\036\205\353\225x@\217\302\365(\\ox@R\270\036\205\353\241x@33333+v@\366(\\\217\302\261x@\232\231\231\231\231\221x@\315\314\314\314\314|X@fffff\316x@fffff\316x@33333\263Q@\244p=\n\327\263x@=\n\327\243p\261x@\217\302\365(\\kw@{\024\256G\341\266x@\232\231\231\231\231\375u@R\270\036\205\353\251x@)\\\217\302\365\300x@q=\n\327\243\200w@fffff\316x@\037\205\353Q\270\202v@fffff\316x@\341z\024\256G\021V@\205\353Q\270\036\005n@\303\365(\\\217nx@\024\256G\341z\374w@fffff\316x@\\\217\302\365(\230w@\341z\024\256G\271x@\366(\\\217\302\225x@fffff\316x@\303\365(\\\217\"u@fffff\316x@\270\036\205\353Q\274x@q=\n\327\2434v@H\341z\024\256\303x@\366(\\\217\302-x@fffff\316x@\270\036\205\353Q\020x@\341z\024\256G}x@q=\n\327\243\010x@=\n\327\243pux@=\n\327\243p\241w@)\\\217\302\365\270x@333333\r@fffff\316x@H\341z\024\256\363w@H\341z\024\256\233w@\205\353Q\270\036\235e@\327\243p=\n\273x@\315\314\314\314\314\004x@\244p=\n\327\017r@fffff\316x@"
      }
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
        }
        tensor_content: "q=\n\327\243p\'@\232\231\231\231\231\231\033@H\341z\024\256G\'@\354Q\270\036\205\353\031@\354Q\270\036\205\353\032@R\270\036\205\353Q\037@R\270\036\205\353Q5@ffffff-@\315\314\314\314\314L-@H\341z\024\256G\t@\000\000\000\000\000\000,@)\\\217\302\365\250,@\270\036\205\353Q8$@\303\365(\\\217\0023@\205\353Q\270\036\205\007@R\270\036\205\353Q\'@H\341z\024\256G<@\\\217\302\365(\\\022@H\341z\024\256\0070@\327\243p=\n\327\020@\244p=\n\327#0@\n\327\243p=\212*@=\n\327\243p\275)@33333s:@\303\365(\\\217B(@\\\217\302\365(\0346@ffffff\023@\366(\\\217\302u @)\\\217\302\365(\037@\256G\341z\024\2569@\315\314\314\314\314\214=@q=\n\327\243\360 @{\024\256G\341\3726@=\n\327\243p=(@)\\\217\302\365\250*@ffffff\024@\270\036\205\353Q8$@\024\256G\341z\224\"@\217\302\365(\\\217\027@\232\231\231\231\231\231$@\n\327\243p=\212!@\205\353Q\270\036\205/@q=\n\327\243p\033@\341z\024\256G\341\010@\217\302\365(\\\017(@\256G\341z\024\356=@\327\243p=\nW2@\244p=\n\327\243&@\341z\024\256G\341 @\327\243p=\nW-@\205\353Q\270\036\2053@\217\302\365(\\\317>@\315\314\314\314\314\314\026@\366(\\\217\302\365+@q=\n\327\243\2607@\\\217\302\365(\334 @\341z\024\256G!2@\270\036\205\353Q8*@\037\205\353Q\270\236>@\232\231\231\231\231\0318@\303\365(\\\217\302\034@\205\353Q\270\036\205 @q=\n\327\243\360#@\n\327\243p=\n#@H\341z\024\256G1@\n\327\243p=\n.@\n\327\243p=\3127@\024\256G\341z\024\016@\000\000\000\000\000\000#@\315\314\314\314\314L0@\341z\024\256G\3416@)\\\217\302\365(8@R\270\036\205\353Q\"@\354Q\270\036\205k:@\327\243p=\nW.@q=\n\327\243p\022@=\n\327\243p\2750@\232\231\231\231\231\231\030@\\\217\302\365(\\#@{\024\256G\341\3727@\315\314\314\314\314L!@\205\353Q\270\036E7@\303\365(\\\217B$@{\024\256G\341z\032@\256G\341z\024.*@\037\205\353Q\270\236!@\366(\\\217\302\365-@R\270\036\205\353Q4@\327\243p=\n\327)@H\341z\024\256\207=@\024\256G\341z\0245@\256G\341z\024\256\007@\270\036\205\353Q\270\032@R\270\036\205\353Q\024@R\270\036\205\353Q\032@q=\n\327\243p\031@)\\\217\302\365(\025@\217\302\365(\\\217\"@\217\302\365(\\\217\025@\244p=\n\327\243\n@\000\000\000\000\000\000\'@=\n\327\243p=7@\\\217\302\365(\0341@{\024\256G\341z$@\024\256G\341z\024(@)\\\217\302\365(\036@fffff\3460@=\n\327\243p=\014@H\341z\024\256G#@\341z\024\256G\341/@\232\231\231\231\231\231\032@\270\036\205\353Q\270)@\366(\\\217\302\365\027@\315\314\314\314\314\314\021@\000\000\000\000\000\000\026@\217\302\365(\\O4@\270\036\205\353Q85@\217\302\365(\\\017%@\244p=\n\327#5@\256G\341z\024\256\036@\341z\024\256Ga$@\232\231\231\231\231\231\027@ffffff\036@=\n\327\243p=5@\024\256G\341z\224$@=\n\327\243p=\022@\315\314\314\314\314L$@\327\243p=\n\327\030@\037\205\353Q\270\036\033@\024\256G\341z\224/@\205\353Q\270\036\205(@\\\217\302\365(\334)@\\\217\302\365(\334(@\217\302\365(\\\217\014@\327\243p=\nW)@fffff&3@\366(\\\217\302\365\006@\n\327\243p=\n-@{\024\256G\341z\030@\256G\341z\024.%@q=\n\327\243p\031@q=\n\327\243\360\"@\256G\341z\024.\"@q=\n\327\243p\023@=\n\327\243p\375?@\341z\024\256G\341*@\270\036\205\353Q8+@\341z\024\256Ga/@R\270\036\205\353Q\025@H\341z\024\256G\030@\205\353Q\270\036\005(@\n\327\243p=\212*@\205\353Q\270\036\305:@{\024\256G\341z\016@\341z\024\256G\241>@\232\231\231\231\231\231\017@\217\302\365(\\\317>@{\024\256G\341z#@)\\\217\302\365(\024@\217\302\365(\\\217\035@{\024\256G\341z\014@\\\217\302\365(\334\"@\303\365(\\\217B,@\315\314\314\314\314\014=@H\341z\024\256G-@333333)@\354Q\270\036\205k0@\270\036\205\353Q\2702@\315\314\314\314\314\314\034@H\341z\024\256\0072@\217\302\365(\\\217&@q=\n\327\243p&@R\270\036\205\353Q5@\232\231\231\231\231\031 @q=\n\327\24301@)\\\217\302\365\250(@)\\\217\302\365(%@)\\\217\302\365(\022@\270\036\205\353Q\270\033@\315\314\314\314\314\314$@\232\231\231\231\231\3312@\303\365(\\\217B;@\244p=\n\327\243\020@\217\302\365(\\\217*@\\\217\302\365(\374B@H\341z\024\256G\"@333333 @\024\256G\341z\024\027@\256G\341z\024.+@\256G\341z\024\256\033@R\270\036\205\353\0212@333333,@\256G\341z\024\256\022@=\n\327\243p=\027@\n\327\243p=\n\036@\315\314\314\314\314\314\022@\024\256G\341z\024\016@\205\353Q\270\036\0055@=\n\327\243p\275.@\366(\\\217\302\265;@\303\365(\\\217bA@\232\231\231\231\231\231\r@)\\\217\302\365(!@\232\231\231\231\231\231\017@)\\\217\302\365\2502@R\270\036\205\353\321&@\000\000\000\000\000\000*@\256G\341z\024\256/@\205\353Q\270\036\005+@\n\327\243p=\3121@\341z\024\256G\341\032@R\270\036\205\353\321:@q=\n\327\243\2603@ffffff:@\n\327\243p=J=@\000\000\000\000\000\000\026@\315\314\314\314\314L\'@\217\302\365(\\O1@\327\243p=\nW4@\341z\024\256G\341\032@\303\365(\\\217\302#@\232\231\231\231\231\231)@\205\353Q\270\036\2055@\217\302\365(\\\017#@\217\302\365(\\\2178@{\024\256G\341:0@\327\243p=\nW#@\270\036\205\353Q\270\031@\315\314\314\314\314L,@\\\217\302\365(\\\032@=\n\327\243p=\032@\024\256G\341z\0244@\n\327\243p=\n\007@q=\n\327\243p0@\024\256G\341z\024\"@)\\\217\302\365\250+@R\270\036\205\353Q\020@q=\n\327\243\360\'@\354Q\270\036\205k/@\217\302\365(\\\017.@=\n\327\243p=\023@33333s4@H\341z\024\256\3073@\\\217\302\365(\334(@\270\036\205\353Q\270\026@q=\n\327\243\360#@\000\000\000\000\000\000\025@\270\036\205\353Q\270\014@\303\365(\\\217\3022@\341z\024\256Ga#@\303\365(\\\217\2020@=\n\327\243p=.@R\270\036\205\353Q$@H\341z\024\256G\t@\270\036\205\353Q80@)\\\217\302\365h9@ffffff/@\\\217\302\365(\\\023@\205\353Q\270\036\3053@333333 @\354Q\270\036\205\353\036@\n\327\243p=\212(@\217\302\365(\\\217\n@H\341z\024\256\307.@fffff\346*@\037\205\353Q\270\236-@\354Q\270\036\205k#@\232\231\231\231\231\231-@\256G\341z\024\256\373?\256G\341z\024.#@R\270\036\205\353Q @\256G\341z\024\2562@3333330@\366(\\\217\302\365\036@\341z\024\256G\341\034@fffff\346\"@\341z\024\256G\341\031@)\\\217\302\365(\037@\366(\\\217\302\365\025@\270\036\205\353Q\3707@\256G\341z\024\256\377?H\341z\024\256\3075@\205\353Q\270\036\205\037@\024\256G\341z\224-@ffffff @333333&@\366(\\\217\302\3650@\366(\\\217\302\365\'@)\\\217\302\365(\"@\\\217\302\365(\\\022@\303\365(\\\217\302\007@\256G\341z\024\256*@\n\327\243p=\n\035@\n\327\243p=J0@\327\243p=\nW7@\341z\024\256G\341\023@\270\036\205\353Qx0@\232\231\231\231\231\231\037@\366(\\\217\302u5@\n\327\243p=\212,@)\\\217\302\365(\031@\327\243p=\n\227>@\270\036\205\353Q\270,@R\270\036\205\353Q\025@H\341z\024\256G\023@{\024\256G\341z\034@\315\314\314\314\314L*@\354Q\270\036\205\3533@\217\302\365(\\\017(@333333,@\341z\024\256Ga-@\303\365(\\\217B%@{\024\256G\341\3727@\217\302\365(\\\0172@\303\365(\\\217\302\024@\366(\\\217\302\365&@33333s5@\315\314\314\314\314\314(@333333\"@H\341z\024\256G\026@\232\231\231\231\231\2317@\232\231\231\231\231\2316@\327\243p=\n\327\007@=\n\327\243p}B@\037\205\353Q\270\236#@\024\256G\341z\024\026@{\024\256G\341z\035@R\270\036\205\353Q\014@\\\217\302\365(\\\017@\000\000\000\000\000\000#@\\\217\302\365(\334!@\024\256G\341z\024\031@\270\036\205\353Q\370=@\354Q\270\036\205k$@333333.@{\024\256G\341\2721@\366(\\\217\302u)@\244p=\n\327\243\027@{\024\256G\341z\033@\037\205\353Q\270\236-@\256G\341z\024\256&@\303\365(\\\217\302\035@\315\314\314\314\314L+@\256G\341z\024\3561@=\n\327\243p=\036@)\\\217\302\365(1@\327\243p=\n\0277@\341z\024\256G\341!@\232\231\231\231\231\2311@\315\314\314\314\314\314;@\327\243p=\n\2270@\315\314\314\314\314\314\021@\341z\024\256Ga\'@\024\256G\341z\224!@"
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
        tensor_content: "ffffff3@\232\231\231\231\231\031>@33333\2636@\000\000\000\000\000\0006@3333336@ffffff3@\232\231\231\231\231\0313@\000\000\000\000\000\0004@33333\2631@\000\000\000\000\000\000I@fffff\3465@\315\314\314\314\314\3140@3333337@ffffff)@33333\263@@\315\314\314\314\314\314=@\000\000\000\000\000\000%@fffff\246D@ffffff6@\232\231\231\231\231YC@333333*@fffff\3462@\232\231\231\231\231\2313@ffffff!@fffff\346;@\000\000\000\000\000\000%@\315\314\314\314\314\214A@\000\000\000\000\000\0006@\232\231\231\231\231\2312@ffffff#@33333\2637@fffff\3463@\000\000\000\000\000\000\024@\232\231\231\231\231\231.@\232\231\231\231\231\0317@\000\000\000\000\000\200B@\000\000\000\000\000\000.@33333\2632@\232\231\231\231\231\231:@3333333@\000\000\000\000\000\0005@\315\314\314\314\314L2@\315\314\314\314\314L7@fffff&E@\232\231\231\231\231\0313@\000\000\000\000\000\2000@\232\231\231\231\231\231,@\315\314\314\314\314L6@3333336@\000\000\000\000\000\2001@\232\231\231\231\231\0311@\315\314\314\314\314\314\034@33333\263<@ffffff:@333333*@ffffff7@333333,@ffffff5@ffffff$@\232\231\231\231\231\231*@\232\231\231\231\231\031=@ffffff4@\315\314\314\314\314L4@\000\000\000\000\000\2008@\232\231\231\231\231\231-@33333\2630@\232\231\231\231\231\231%@\000\000\000\000\000\200?@\000\000\000\000\000\0006@333333/@\232\231\231\231\231\231)@\000\000\000\000\000\000,@\315\314\314\314\314L8@333333/@ffffff\'@333333?@\315\314\314\314\314\3141@\000\000\000\000\000\0007@fffff\3462@\232\231\231\231\231\231\'@\000\000\000\000\000\2000@\315\314\314\314\314\314*@33333\2638@\315\314\314\314\314LA@ffffff1@\232\231\231\231\231\2316@\232\231\231\231\231\0313@\315\314\314\314\314\314\034@3333335@333333-@\315\314\314\314\314\314%@\000\000\000\000\000\000I@\000\000\000\000\000\000@@\232\231\231\231\231\2318@\232\231\231\231\231\231A@33333\2637@\000\000\000\000\000\000<@\315\314\314\314\314\3147@33333sA@\000\000\000\000\000\200<@3333330@\315\314\314\314\314\314+@333333.@ffffff3@3333335@ffffff7@ffffff1@\232\231\231\231\231\231=@\232\231\231\231\231\2316@\315\314\314\314\314\3143@ffffff<@\000\000\000\000\000\2006@\000\000\000\000\000\2008@\000\000\000\000\000\000I@\232\231\231\231\231\2317@333333(@3333331@\000\000\000\000\000\2001@33333\2633@\000\000\000\000\000\200:@\315\314\314\314\314\3144@ffffff8@\232\231\231\231\231\031>@\232\231\231\231\231\231*@3333334@\315\314\314\314\314\314=@\000\000\000\000\000\2004@\000\000\000\000\000\0009@\232\231\231\231\231\0318@ffffff3@\232\231\231\231\231\2313@\232\231\231\231\231\0314@fffff\3466@fffff\346E@3333331@\232\231\231\231\231\031;@333333B@\315\314\314\314\314\314%@\000\000\000\000\000\0009@\232\231\231\231\231\2314@\232\231\231\231\231\231?@\000\000\000\000\000\0009@\315\314\314\314\314\3143@\315\314\314\314\314\214@@\232\231\231\231\231\231\035@\000\000\000\000\000\000.@\315\314\314\314\314L3@ffffff$@\232\231\231\231\231\031B@\315\314\314\314\314\3148@\315\314\314\314\314\3145@33333\2635@ffffff\026@\000\000\000\000\000@H@\232\231\231\231\231\231!@\232\231\231\231\231\231?@\315\314\314\314\314\314,@\000\000\000\000\000\0003@\232\231\231\231\231\231B@\232\231\231\231\231\031;@fffff\246B@\000\000\000\000\000\2004@fffff\3463@\315\314\314\314\314\314\034@\315\314\314\314\314\3140@3333333@ffffff0@ffffff.@\315\314\314\314\314\3147@333333-@3333332@3333336@\232\231\231\231\231\231*@3333332@3333330@\232\231\231\231\231\0314@3333335@\315\314\314\314\314\3146@\315\314\314\314\314\014B@33333\2635@\315\314\314\314\314\314.@ffffff/@\315\314\314\314\314\214@@\232\231\231\231\231\2313@\232\231\231\231\231\231+@\232\231\231\231\231\2315@\000\000\000\000\000@B@33333\2638@\000\000\000\000\000\2008@fffff\346=@333333+@\000\000\000\000\000\2005@\000\000\000\000\000\2007@\315\314\314\314\314L9@fffff\3466@fffff\346;@33333\263F@333333+@ffffff4@ffffff*@\232\231\231\231\231\231+@\000\000\000\000\000\000I@fffff\3467@fffff&H@\000\000\000\000\000\2003@\000\000\000\000\000\0004@\232\231\231\231\231\0315@\315\314\314\314\314L4@\315\314\314\314\314L7@\315\314\314\314\314\314-@3333338@\315\314\314\314\314\314*@333333,@3333331@\232\231\231\231\231\231\'@\000\000\000\000\000\000;@\315\314\314\314\314L8@333333/@\000\000\000\000\000\000+@\315\314\314\314\314\3148@33333\2635@ffffff2@\000\000\000\000\000\000&@\000\000\000\000\000\000I@\232\231\231\231\231\231(@\315\314\314\314\314\314-@ffffff6@\315\314\314\314\314L8@\000\000\000\000\000\0004@3333339@333333:@\315\314\314\314\314L0@\000\000\000\000\000\000I@333333)@\232\231\231\231\231\2317@\232\231\231\231\231\2313@fffff\246@@\000\000\000\000\000\0004@33333\2635@ffffff2@33333\263A@\000\000\000\000\000\000.@\000\000\000\000\000\200;@\232\231\231\231\231\0311@3333336@\315\314\314\314\314L3@33333\263?@\315\314\314\314\314\3148@3333337@33333\263<@\315\314\314\314\314\314+@\000\000\000\000\000\0001@\315\314\314\314\314\3146@\000\000\000\000\000\300E@\232\231\231\231\231\231,@\315\314\314\314\314L1@ffffff,@\232\231\231\231\231\231:@\232\231\231\231\231\231 @\000\000\000\000\000\0006@ffffff8@\315\314\314\314\314\3143@\000\000\000\000\000\000I@\000\000\000\000\000\0002@33333\2633@\232\231\231\231\231\2310@33333\263:@fffff\3462@\000\000\000\000\000\000I@fffff\346@@fffff\3466@33333\2630@ffffff3@33333\2637@fffff\3467@\232\231\231\231\231\031B@33333\263@@\000\000\000\000\000\0009@\232\231\231\231\231Y@@\000\000\000\000\000\000\034@33333sA@ffffff$@\315\314\314\314\314\314\'@33333\263>@\000\000\000\000\000\0006@\315\314\314\314\314\3147@\232\231\231\231\231\0312@\000\000\000\000\000\0005@\232\231\231\231\231\2314@33333\263A@\000\000\000\000\000\000I@\232\231\231\231\231\2314@\315\314\314\314\314\214E@fffff\3463@\315\314\314\314\314\314\'@\000\000\000\000\000\2006@\000\000\000\000\000\2003@\232\231\231\231\231\2315@33333\2635@\315\314\314\314\314L4@\232\231\231\231\231\2318@\000\000\000\000\000\000\024@3333337@ffffff=@33333\363B@\000\000\000\000\000\200;@33333\2632@\000\000\000\000\000\000!@\232\231\231\231\231\0310@\315\314\314\314\314L2@\232\231\231\231\231\0317@\232\231\231\231\231\2312@\315\314\314\314\314L3@ffffff.@33333\2637@33333\2636@\315\314\314\314\314\314.@\232\231\231\231\231\0314@\315\314\314\314\314L4@\232\231\231\231\231\2314@\232\231\231\231\231\231&@ffffff)@\000\000\000\000\000\000@@\000\000\000\000\000\000\034@\000\000\000\000\000\0009@\315\314\314\314\314\3146@\315\314\314\314\314L7@ffffffE@\232\231\231\231\231YG@\000\000\000\000\000\0009@ffffff<@\232\231\231\231\231\231<@333333\031@\315\314\314\314\314L3@\000\000\000\000\000\2001@ffffff.@\000\000\000\000\000\0005@ffffffH@\232\231\231\231\231\0317@ffffff5@ffffff5@\000\000\000\000\000\000I@33333\2634@\000\000\000\000\000\2004@fffff\346C@ffffff\'@\000\000\000\000\000\0004@ffffff5@\315\314\314\314\314\3141@\232\231\231\231\231\231+@ffffff2@33333s@@3333334@fffff\3464@"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/ToFloat"
  op: "Cast"
  input: "Const_6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/B/ToFloat"
  op: "Cast"
  input: "Const_11"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/B/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/ToFloat"
  op: "Cast"
  input: "Const_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/ToFloat"
  op: "Cast"
  input: "Const"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/ToFloat"
  op: "Cast"
  input: "Const_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/ToFloat"
  op: "Cast"
  input: "Const_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/ToFloat"
  op: "Cast"
  input: "Const_12"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/ToFloat"
  op: "Cast"
  input: "Const_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/ToFloat"
  op: "Cast"
  input: "Const_10"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/ToFloat"
  op: "Cast"
  input: "Const_8"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RM/ToFloat"
  op: "Cast"
  input: "Const_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RM/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/ToFloat"
  op: "Cast"
  input: "Const_9"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/ToFloat"
  op: "Cast"
  input: "Const_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims"
  op: "ExpandDims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/ToFloat"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/AGE/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/B/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CHAS/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/CRIM/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/DIS/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/INDUS/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/LSTAT/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/NOX/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/PTRATIO/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RAD/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/RM/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/TAX/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/ZN/expand_dims"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat/axis"
  attr {
    key: "N"
    value {
      i: 13
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2791452705860138
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2791452705860138
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "zero_fraction/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Cast"
  op: "Cast"
  input: "zero_fraction/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction/Mean"
  op: "Mean"
  input: "zero_fraction/Cast"
  input: "zero_fraction/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  input: "zero_fraction/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_0_activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0_activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_0_activation/tag"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_1/Equal"
  op: "Equal"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "zero_fraction_1/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Cast"
  op: "Cast"
  input: "zero_fraction_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_1/Mean"
  op: "Mean"
  input: "zero_fraction_1/Cast"
  input: "zero_fraction_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  input: "zero_fraction_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/hiddenlayer_1_activation"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1_activation"
  op: "HistogramSummary"
  input: "dnn/hiddenlayer_1_activation/tag"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2156655490398407
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2156655490398407
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights"
  op: "Identity"
  input: "dnn/logits/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/biases"
  op: "Identity"
  input: "dnn/logits/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "zero_fraction_2/zero"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zero_fraction_2/Equal"
  op: "Equal"
  input: "dnn/logits/BiasAdd"
  input: "zero_fraction_2/zero"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Cast"
  op: "Cast"
  input: "zero_fraction_2/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zero_fraction_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "zero_fraction_2/Mean"
  op: "Mean"
  input: "zero_fraction_2/Cast"
  input: "zero_fraction_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/logits_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/logits_fraction_of_zero_values/tags"
  input: "zero_fraction_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/logits_activation"
      }
    }
  }
}
node {
  name: "dnn/logits_activation"
  op: "HistogramSummary"
  input: "dnn/logits_activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "predictions/scores"
  op: "Squeeze"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_13"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss/sub"
  op: "Sub"
  input: "dnn/logits/BiasAdd"
  input: "training_loss/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss"
  op: "Square"
  input: "training_loss/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_loss"
  op: "Mean"
  input: "training_loss/mean_squared_loss"
  input: "training_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_loss/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "training_loss/ScalarSummary"
  op: "ScalarSummary"
  input: "training_loss/ScalarSummary/tags"
  input: "training_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/learning_rate/Assign"
  op: "Assign"
  input: "dnn/learning_rate"
  input: "dnn/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/learning_rate/read"
  op: "Identity"
  input: "dnn/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/Fill"
  op: "Fill"
  input: "train_op/dnn/gradients/Shape"
  input: "train_op/dnn/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Reshape"
  op: "Reshape"
  input: "train_op/dnn/gradients/Fill"
  input: "train_op/dnn/gradients/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Tile"
  op: "Tile"
  input: "train_op/dnn/gradients/training_loss_grad/Reshape"
  input: "train_op/dnn/gradients/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Prod"
  op: "Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Shape"
  input: "train_op/dnn/gradients/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Prod_1"
  op: "Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Shape_1"
  input: "train_op/dnn/gradients/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Maximum"
  op: "Maximum"
  input: "train_op/dnn/gradients/training_loss_grad/Prod_1"
  input: "train_op/dnn/gradients/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/floordiv"
  op: "FloorDiv"
  input: "train_op/dnn/gradients/training_loss_grad/Prod"
  input: "train_op/dnn/gradients/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/Cast"
  op: "Cast"
  input: "train_op/dnn/gradients/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss_grad/truediv"
  op: "RealDiv"
  input: "train_op/dnn/gradients/training_loss_grad/Tile"
  input: "train_op/dnn/gradients/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul/x"
  op: "Const"
  input: "^train_op/dnn/gradients/training_loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul"
  op: "Mul"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul/x"
  input: "training_loss/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "train_op/dnn/gradients/training_loss_grad/truediv"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "b\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul_1"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss_grad/mul_1"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Neg"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/tuple/control_dependency"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_from_feature_columns/concat"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "train_op/dnn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "train_op/dnn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_4"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "train_op/dnn/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/Const_5"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "train_op/dnn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/dnn/logits/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/weights/part_0"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/biases/part_0"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "dnn/learning_rate/read"
  input: "train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/train/update"
  op: "NoOp"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
  input: "^train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
}
node {
  name: "train_op/dnn/train/value"
  op: "Const"
  input: "^train_op/dnn/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train_op/dnn/train"
  op: "AssignAdd"
  input: "global_step"
  input: "train_op/dnn/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/dnn/control_dependency"
  op: "Identity"
  input: "training_loss"
  input: "^train_op/dnn/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ExpandDims"
  op: "ExpandDims"
  input: "predictions/scores"
  input: "metrics/mean_squared_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_13"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/sub"
  op: "Sub"
  input: "metrics/mean_squared_loss/ExpandDims"
  input: "metrics/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss"
  op: "Square"
  input: "metrics/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 354
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/eval_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/eval_loss"
  op: "Mean"
  input: "metrics/mean_squared_loss"
  input: "metrics/eval_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/total/Assign"
  op: "Assign"
  input: "metrics/mean/total"
  input: "metrics/mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/total/read"
  op: "Identity"
  input: "metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/count/Assign"
  op: "Assign"
  input: "metrics/mean/count"
  input: "metrics/mean/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/count/read"
  op: "Identity"
  input: "metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean/ToFloat_1"
  op: "Cast"
  input: "metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Sum"
  op: "Sum"
  input: "metrics/eval_loss"
  input: "metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "metrics/mean/total"
  input: "metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "metrics/mean/count"
  input: "metrics/mean/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater"
  op: "Greater"
  input: "metrics/mean/count/read"
  input: "metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv"
  op: "RealDiv"
  input: "metrics/mean/total/read"
  input: "metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/value"
  op: "Select"
  input: "metrics/mean/Greater"
  input: "metrics/mean/truediv"
  input: "metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1"
  op: "Greater"
  input: "metrics/mean/AssignAdd_1"
  input: "metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv_1"
  op: "RealDiv"
  input: "metrics/mean/AssignAdd"
  input: "metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/update_op"
  op: "Select"
  input: "metrics/mean/Greater_1"
  input: "metrics/mean/truediv_1"
  input: "metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_0/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Assign"
  input: "^dnn/logits/weights/part_0/Assign"
  input: "^dnn/logits/biases/part_0/Assign"
  input: "^dnn/learning_rate/Assign"
  input: "^dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  input: "^dnn/dnn/logits/biases/part_0/Adagrad/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 16
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/learning_rate"
        string_val: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/dnn/logits/biases/part_0/Adagrad"
        string_val: "metrics/mean/total"
        string_val: "metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/learning_rate"
        string_val: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/dnn/logits/biases/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 14
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 14
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^metrics/mean/total/Assign"
  input: "^metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/hiddenlayer_0_fraction_of_zero_values"
  input: "dnn/hiddenlayer_0_activation"
  input: "dnn/hiddenlayer_1_fraction_of_zero_values"
  input: "dnn/hiddenlayer_1_activation"
  input: "dnn/logits_fraction_of_zero_values"
  input: "dnn/logits_activation"
  input: "training_loss/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_aac02fb62d0045619e3e7e4209c97ba9/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/biases/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_0/weights/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/biases/t_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/hiddenlayer_1/weights/t_0/Adagrad"
        string_val: "dnn/learning_rate"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/biases/t_0/Adagrad"
        string_val: "dnn/logits/weights"
        string_val: "dnn/logits/weights/t_0/Adagrad"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "64 0,64"
        string_val: "64 0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "13 64 0,13:0,64"
        string_val: "128 0,128"
        string_val: "128 0,128"
        string_val: "64 128 0,64:0,128"
        string_val: "64 128 0,64:0,128"
        string_val: ""
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "128 1 0,128:0,1"
        string_val: "128 1 0,128:0,1"
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  input: "dnn/learning_rate"
  input: "dnn/logits/biases/part_0/read"
  input: "dnn/dnn/logits/biases/part_0/Adagrad/read"
  input: "dnn/logits/weights/part_0/read"
  input: "dnn/dnn/logits/weights/part_0/Adagrad/read"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "13 64 0,13:0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_0/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "13 64 0,13:0,64"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 128 0,64:0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/hiddenlayer_1/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "64 128 0,64:0,128"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dnn/learning_rate"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/biases/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dnn/dnn/logits/biases/part_0/Adagrad"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 1 0,128:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dnn/logits/weights/t_0/Adagrad"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "128 1 0,128:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dnn/dnn/logits/weights/part_0/Adagrad"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 21
}
